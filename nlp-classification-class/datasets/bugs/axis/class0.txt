{"ID_DEFECT":"AXIS-12","DESCRIPTION":"OUR WEB SERVICE IS DEPLOYED WITH APPLICATION SCOPE. WHEN TWO OR MORE CLIENTS SEND THEIR VERY FIRST REQUEST SIMULTANEOUSLY, THE AXIS ENGINE CREATES MORE THAN ONE INSTANCE OF THE REGISTERED WEB SERVICE IMPLEMENTATION CLASS. IF I UNDERSTAND THE SEMANTICS OF THE APPLICATION SCOPE CORRECTLY, THERE SHOULD ALWAYS BE ONE AND ONLY ONE INSTANCE OF THE IMPLEMENTATION CLASS (AND THE SKELETON CLASS THAT CREATES IT.)IT SEEMS TO BE A CONCURRENCY PROBLEM BECAUSE:1- THE DESCRIBED ANOMALY OCCURS INCONSISTENTLY;2- WHEN WE LAUNCH THE CLIENTS WITH ENOUGH TIME BETWEEN THEM, THE PROBLEM DOES NOT OCCUR.","SUMMARY":"CONCURRENCY PROBLEM IN AXIS ENGINE WITH APPLICATION SCOPE","CLASS":0}
{"ID_DEFECT":"AXIS-238","DESCRIPTION":"SEE THREAD ENTITLED SOCKET PROBLEMS ON AXIS-USER, 30 JULY 2002.ORIGINALLY REPORTED BY GEZA SZOCS AT NOKIA DOT COM.WE ECOUNTERED THAT AFTER A CERTAIN PERIOD OF TIME (TIPICALLY 4-5 HOURS) THEWEBSERVER WAS NOT ABLE TO RECEIVE ANY MORE HTTP REQUESTS. HOWEVER THECLIENT-SIDE WAS STILL SENDING SOAP REQUESTS TO OTHER SERVERS. ANALYZING WITHNETSTAT WE FOUND THAT AROUND 2000 SOCKETS HAVE BEEN CREATED BY AXIS CLIENTFRAMEWORK, WHICH WERE STILL ACTIVE, AND THIS NUMBER DIDNT WANT TO DECREASE. ITSEEMED LIKE THIS CLIENT FRAMEWORK WAS EATING UP ALL RESOURCES OF THE OS(SOCKETS). I ALSO CHECKED TO SOURCE CODE OF HTTPSENDER, I SEE THAT SOCKET ARENOT CLOSED THERE.IVE HAD A LOOK AT THE SOURCE OF BOTH ORG.APACHE.AXIS.TRANSPORT.HTTP.HTTPSENDERAND COMMONSHTTPSENDER. NEITHER ARE CLOSING SOCKETS WHEN THEYRE DONE. I GUESSTHE INTENTION IS TO LEAVE THE READ SOCKET OPEN TO DELAY READING AS LONG ASPOSSIBLE, BUT CLOSING THE SOCKET INPUTSTREAM DOESNT CLOSE THE SOCKET.SIMILARLY, THE HTTPCLIENTS GETRESPONSEBODYASSTREAM() DOESNT RETURN A STREAMTHAT CLOSES THE CONNECTION WHEN THE STREAM IS CLOSED.UNLESS YOU INTEND KEEPING THE CONNECTIONS OPEN AND RE-USING THEM (WHICH WOULDREQUIRE MORE CHANGES TO THE CODE) CAN I SUGGEST WRAPPING THESE LIKE SO...<INSERTS TEACH-GRANNY-TO-SUCK-EGGS CODE> :)INPUTSTREAM STREAM=NEW FILTERINPUTSTREAM(METHOD.GETRESPONSEBODYASSTREAM())    PUBLIC VOID CLOSE() THROWS JAVA.IO.IOEXCEPTION        TRY        SUPER.CLOSE();        FINALLY        CONN.CLOSE();  NEEDS TO BE MADE FINAL TO WORK.          ;MESSAGE OUTMSG = NEW MESSAGE(STREAM,                    FALSE, CONTENTTYPE, CONTENTLOCATION); ... ALSO CLOSE THE CONNECTION WHEN ANY EXCEPTION IS THROWN.","SUMMARY":"CONNECTIONS NOT CLOSED IN HTTP CLIENT CODE.","CLASS":0}
{"ID_DEFECT":"AXIS-399","DESCRIPTION":"WE NOW GET:JAVA.LANG.NOCLASSDEFFOUNDERROR: JAVAXSERVLETSERVLETCONTEXTTT AT ORG.APACHE.AXIS.CONFIGURATION.ENGINECONFIGURATIONFACTORYSERVLET.NEWFACTORY(ENGINECONFIGURATIONFACTORYSERVLET.JAVA:119)TT AT ORG.APACHE.AXIS.CONFIGURATION.ENGINECONFIGURATIONFACTORYFINDER$1.RUN(ENGINECONFIGURATIONFACTORYFINDER.JAVA:172)TT AT JAVA.SECURITY.ACCESSCONTROLLER.DOPRIVILEGED(NATIVE METHOD)TT AT ORG.APACHE.AXIS.CONFIGURATION.ENGINECONFIGURATIONFACTORYFINDER.NEWFACTORY(ENGINECONFIGURATIONFACTORYFINDER.JAVA:146)TT AT ORG.APACHE.AXIS.CONFIGURATION.ENGINECONFIGURATIONFACTORYFINDER.NEWFACTORY(ENGINECONFIGURATIONFACTORYFINDER.JAVA:211)TT AT ORG.APACHE.AXIS.CLIENT.SERVICE.<INIT>(SERVICE.JAVA:111)WHICH (UNLESS IM MISSING SOMETHING) MEANS THE CLIENT NOW REQUIRES SERVLET.JAR,WHICH SHOULDNT BE.","SUMMARY":"CLIENT REQUIRES SERVLET.JAR","CLASS":0}
{"ID_DEFECT":"AXIS-425","DESCRIPTION":"IN BETA-3 WE COULD USE ANY JSSE IMPL - IN PARTICULAR WE COULD HAVETHE IBM VERSION IN OUR CLASSPATH AND SSL WORKED JUST FINE.NOW IT APPEARS WE MUST HAVE THE SUN IMPL IN ORDER TO NOT ONLYCOMPILE BUT RUN.  THERE DOESNT SEEM TO BE ANY WAY TO PLUG-INSOME OTHER IMPL.RICHARD MENTION ON IRC TODAY THAT THERE WAS SUPPOSED TO BE SOME FILETHAT POINTED TO WHICH IMPL WE WANTED - BUT I WOULD REALLY PREFER IFWE JUST WENT BACK TO WHAT WE USED TO HAVE - JUST PLACE AN IMPL INTHE CLASSPATH - NO FILE MODIFICATIONS REQUIRED.","SUMMARY":"AXIS REQUIRES SUN JSSE IMPL","CLASS":0}
{"ID_DEFECT":"AXIS-769","DESCRIPTION":"NOTE FROM JENS SCHUMANN <JENS@VOID.FM> ON AXIS-DEV@ MAILING LIST.=====================================================SOME BROKEN LOAD BALANCERS IN OUR NETWORK CONFIGURATION CAUSED HANGINGCONNECTIONS CALLING WEBSERVICES USING AXIS CLIENTS (1.1RC2). SINCE THEGENERATED AXIS CLIENT CODE DOES NOT SET A DEFAULT SOCKET TIMEOUT THE CALLINGTHREAD WAS BLOCKING FOREVER, SOMETHING WHICH WASNT AS OBVIOUS AS IT COULDBE. A DEFAULT SOCKET TIMEOUT WOULD HAVE BEEN WONDERFUL ;)WITH THE CURRENT CLIENT CODE I AM UNABLE TO SET THE SOCKET TIMEOUT DIRECTLY,SO I NEED TO ALTER THE GENERATED CODE TO SET A SOCKET TIMEOUT FOR THEUNDERLYING HTTPSENDER. YOU MAY ARGUE EASY TO FIX, BUT THERE IS ANOTHERPROBLEM: THE CLIENT CODE THROWS REMOTEEXCEPTIONS (AND AXISFAULTS) ONLY, SO IAM UNABLE TO TREAT LOCAL AND REMOTE FAILURES DIFFERENTLY. ANALYZING AXISFAULT STRINGS ISNT THE BEST WAY TO IMPLEMENT EXCEPTION HANDLING.I AM SOMEWHAT SHORT ON TIME AND THUS BEING SAID I HOPE SOMEONE ELSE MIGHT BEABLE TO IMPLEMENT THE FOLLOWING CHANGES ;(.1. SET DEFAULT SOCKET TIMEOUT FOR AXIS CLIENTS TO 30 OR 60 SECONDS.2. GENERATE CODE WHICH ALLOWS TO SET THE SOCKET TIMEOUT FOR THE AXIS CLIENTEASILY.3. ADD A LOCAL EXCEPTION (IOEXCEPTION?) TO THE EXPOSED WEB SERVICEOPERATIONS TO ALLOW BETTER HANDLING OF LOCAL (SOCKET) EXCEPTIONS.I THINK 1 & 2 SHOULD BE EASY TO FIX, BUT 3 WILL BREAK BACKWARDSCOMPATIBILITY.JENS=====================================================","SUMMARY":"SOCKET TIMEOUTS FOR AXIS CLIENTS","CLASS":0}
{"ID_DEFECT":"AXIS-1202","DESCRIPTION":"HI,AXIS HAS A MEMORY LEAK IN CLASS  ORG.APACHE.AXIS.UTILS.XMLUTILS. THIS CLASS KEEPS A PARSER CACHE. THE PROBLEM IS THAT EACH PARSER IS MAINTAINING A DIRECT REFERENCE FOR THE DESERIALIZATIONCONTEXTIMPL INSTANCE THAT HAS CREATED IT, AND INDIRECT REFERENCES FOR A BUNCH OF OTHER OBJECTS REFERENCED BY THE DESERIALIZATIONCONTEXTIMPL INSTANCE. ALTHOUGH DESERIALIZATIONCONTEXTIMPL TRIES TO CLEAN UP THE PARSER WITH THE LINE:   PUBLIC VOID PARSE() THROWS SAXEXCEPTION    ...  PARSER.SETPROPERTY(HTTP:XML.ORGSAXPROPERTIESLEXICAL-HANDLER, NULL);..   IF USING XERCES VERSION > 2.4 THE PARSER IS KEEPING REFERENCES  TO THE REMAIN INTERFACES IMPLEMENTED BY ITS DEFAULTHANDLER SUPER CLASS. TO CLEAN UP THE REFERENCES IT IS NECESSARY TO DO SOMETHING LIKE THE COMMENTED CODE THAT CAN BE FOUND IN THE RELEASESAXPARSER METHOD OF THE XMLUTILS CLASS:    PUBLIC STATIC VOID RELEASESAXPARSER(SAXPARSER PARSER)         IF(!TRYRESET) RETURN;        FREE UP POSSIBLE REF. HELD BY PAST CONTENTHANDLER.        TRY            XMLREADER XMLREADER= PARSER.GETXMLREADER();            IF(NULL != XMLREADER)                XMLREADER.SETCONTENTHANDLER(DONOTHINGCONTENTHANDLER);                XMLREADER.SETDTDHANDLER(DONOTHINGCONTENTHANDLER);                XMLREADER.SETENTITYRESOLVER(DONOTHINGCONTENTHANDLER);                XMLREADER.SETERRORHANDLER(DONOTHINGCONTENTHANDLER);                SYNCHRONIZED (XMLUTILS.CLASS )                     SAXPARSERS.PUSH(PARSER);                                        ELSE                 TRYRESET= FALSE;                     CATCH (ORG.XML.SAX.SAXEXCEPTION E)             TRYRESET= FALSE;            I DO NOT KNOW WHY THAT CODE IS COMMENTED, HOWEVER, I HAVE TRIED A SIMILAR SET OF INSTRUCTIONS AND IT WORKED OK FOR XERCES 2.4 AND XERCES 2.6:TT    READER.SETCONTENTHANDLER(NULL);TT    READER.SETDTDHANDLER(NULL);TT    READER.SETENTITYRESOLVER(NULL);TT    READER.SETERRORHANDLER(NULL);","SUMMARY":"MEMORY LEAK IN CLASSE ORG.APACHE.AXIS.UTILS.XMLUTILS","CLASS":0}
{"ID_DEFECT":"AXIS-1248","DESCRIPTION":"NPE IS RAISED AFTER DETACHNODE() IS CALLED THE SECOND TIME:  PUBLIC VOID DETACHNODE()         ((SOAPHEADER)PARENT).REMOVEHEADER(THIS);        SUPER.DETACHNODE();  ","SUMMARY":"NPE IN SOAPHEADERELEMENT.DETACHNODE()","CLASS":0}
{"ID_DEFECT":"AXIS-1253","DESCRIPTION":"WHEN POSING A SOAP REQUEST THAT IS LARGE IN SIZE (4MB TOTAL WIRE SIZE) AND HOSTING THE AXIS SERVLET INSIDE OF WEBLOGIC 6.1 SP4 AFTER A FEW SECOND OR SO THE POST FAILS WITH SEVERE: JAVA.IO.IOEXCEPTION:JAVA.NET.SOCKETEXCEPTION: SOFTWARE CAUSED CONNECTION ABORT: SOCKET WRITE ERRORTAT JAVA.NET.SOCKETOUTPUTSTREAM.SOCKETWRITE0(NATIVE METHOD)TAT JAVA.NET.SOCKETOUTPUTSTREAM.SOCKETWRITE(UNKNOWN SOURCE)TAT JAVA.NET.SOCKETOUTPUTSTREAM.WRITE(UNKNOWN SOURCE)TAT JAVA.IO.BUFFEREDOUTPUTSTREAM.WRITE(UNKNOWN SOURCE)TAT SUN.NIO.CS.STREAMENCODER$CHARSETSE.WRITEBYTES(UNKNOWN SOURCE)TAT SUN.NIO.CS.STREAMENCODER$CHARSETSE.IMPLWRITE(UNKNOWN SOURCE)TAT SUN.NIO.CS.STREAMENCODER.WRITE(UNKNOWN SOURCE)TAT JAVA.IO.OUTPUTSTREAMWRITER.WRITE(UNKNOWN SOURCE)TAT JAVA.IO.BUFFEREDWRITER.FLUSHBUFFER(UNKNOWN SOURCE)TAT JAVA.IO.BUFFEREDWRITER.WRITE(UNKNOWN SOURCE)TAT JAVA.IO.WRITER.WRITE(UNKNOWN SOURCE)TAT ORG.APACHE.AXIS.SOAPPART.WRITETO(SOAPPART.JAVA:313)TAT ORG.APACHE.AXIS.MESSAGE.WRITETO(MESSAGE.JAVA:548)TAT ORG.APACHE.AXIS.TRANSPORT.HTTP.HTTPSENDER.WRITETOSOCKET(HTTPSENDER.JAVA:465)TAT ORG.APACHE.AXIS.TRANSPORT.HTTP.HTTPSENDER.INVOKE(HTTPSENDER.JAVA:128)TAT ORG.APACHE.AXIS.STRATEGIES.INVOCATIONSTRATEGY.VISIT(INVOCATIONSTRATEGY.JAVA:71)TAT ORG.APACHE.AXIS.SIMPLECHAIN.DOVISITING(SIMPLECHAIN.JAVA:157)TAT ORG.APACHE.AXIS.SIMPLECHAIN.INVOKE(SIMPLECHAIN.JAVA:122)TAT ORG.APACHE.AXIS.CLIENT.AXISCLIENT.INVOKE(AXISCLIENT.JAVA:183)TAT ORG.APACHE.AXIS.CLIENT.CALL.INVOKEENGINE(CALL.JAVA:2682)TAT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2665)TAT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2355)TAT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2278)TAT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:1777)T[SNIP... WSDL2JAVA GENERATED CLALL STUBS ...SNIP]THIS IS BASED ON A CVS BUILD FROM ON OR ABOUT 25 FEB FOR THE LINE NUMBERS, PRE 2.0 LICENSE RENAMING.PATCH TO FOLLOW","SUMMARY":"POSTING LARGE SOAP REQUESTS (4MB) TO WLS FAILS WITH JAVA.NET.SOCKETEXCEPTION: SOFTWARE CAUSED CONNECTION ABORT: SOCKET WRITE ERROR","CLASS":0}
{"ID_DEFECT":"AXIS-1261","DESCRIPTION":"BUG LOGGED AT REQUEST OF DAVANUM SRINIVAS:TO ATTEMPT TO TEST CONCURRENT PERFORMANCE OF AXIS (USING SAMPLESUSERGUIDEEXAMPLE3), I HAVE CREATED TWO TESTING CLASSES: TESTTHREAD (EXTENDS THREAD:) WHICH CALLS SAMPLES.USERGUIDE.EXAMPLE3.CLIENT.MAIN( ARGS ) FROM ITS RUN METHOD AND TEST WHICH SIMPLY STARTS 10 TESTTHREAD THREADS.OCCASIONALLY (1 IN 10) I WILL GET A NULLPOINTEREXCEPTION FOR THE FIRST 2-5 THREADS OFTEN ACCOMPANIED BY:ORG.APACHE.AXIS.CONFIGURATION.ENGINECONFIGURATIONFACTORYFINDER$1 RUNSEVERE: UNABLE TO LOCATE A VALID ENGINECONFIGURATIONFACTORYJAVA.LANG.NULLPOINTEREXCEPTIONTHE ERROR IS GENERATED FROM LINE 183 OF ENGINECONFIGURATIONFACTORYFINDER.JAVA WHERE IT HAS THE FOLLOWING COMMENTS:LOG.ERROR(MESSAGES.GETMESSAGE(ENGINECONFIGFACTORYMISSING));  WE SHOULD BE THROWING AN EXCEPTION HERE,   BUT AGAIN, REQUIRES MORE REFACTORING THAN WE WANT TO SWALLOW  AT THIS POINT IN TIME.  IFTHIS DOES OCCUR, ITS A CODING ERROR:  FACTORY SHOULD NEVER BE NULL.  TESTING WILL FIND THIS, AS NULLPOINTEREXCEPTIONS WILL BE GENERATED  ELSEWHERE.THE TWO (VERY NODDY) TEST CLASSES FOLLOW, ALONG WITH AN EXAMPLE STACK TRACE:===TESTTHREAD.JAVA===PUBLIC CLASS TESTTHREAD EXTENDS THREAD   PRIVATE STRING MYTHREAD;  PUBLIC VOID RUN()     JAVA.UTIL.RANDOM R = NEW JAVA.UTIL.RANDOM();    INT RANDOMTIME = R.NEXTINT() % 250;    STRING TNAME = THREAD.CURRENTTHREAD().GETNAME();    STRING ARGS[] =   -LHTTP:LOCALHOST:8080AXISSERVICESMYSERVICE, TNAME ;    RUN TWICE IN THIS THREAD    SAMPLES.USERGUIDE.EXAMPLE3.CLIENT.MAIN( ARGS );    SAMPLES.USERGUIDE.EXAMPLE3.CLIENT.MAIN( ARGS );  ===TEST.JAVA===CLASS TEST   PUBLIC STATIC VOID MAIN(STRING[] ARGS)    START SOME THREADS    FOR ( INT I=0; I<10; I++ )       NEW TESTTHREAD().START();      ===STACK TRACE===$JAVA TESTMAR 23, 2004 7:25:59 PM ORG.APACHE.AXIS.CONFIGURATION.ENGINECONFIGURATIONFACTORYFINDER$1 RUNSEVERE: UNABLE TO LOCATE A VALID ENGINECONFIGURATIONFACTORYJAVA.LANG.NULLPOINTEREXCEPTION        AT ORG.APACHE.AXIS.CLIENT.SERVICE.GETENGINECONFIGURATION(SERVICE.JAVA:801)        AT ORG.APACHE.AXIS.CLIENT.SERVICE.GETAXISCLIENT(SERVICE.JAVA:143)        AT ORG.APACHE.AXIS.CLIENT.SERVICE.<INIT>(SERVICE.JAVA:152)        AT CLIENT.MAIN(CLIENT.JAVA:27)        AT TESTTHREAD.RUN(TESTTHREAD.JAVA:16)JAVA.LANG.NULLPOINTEREXCEPTION","SUMMARY":"ENGINECONFIGFACTORYMISSING  (FOR CONCURRENT REQUESTS)","CLASS":0}
{"ID_DEFECT":"AXIS-1270","DESCRIPTION":"IM RUNNING A SIMPLE JAVA PROGRAM TO REQUEST STUFF FROM A SERVER AND PRACTICALLY REQUEST PRODUCES A SIGNIFCANT (~32K) MEMORY LEAK ON SOLARIS. BOTH TOP AND PS SHOW THAT THE SIZE OF THE PROCESS IS MONOTONICALLY INCREASING. OPTIMIZEIT INDICATE THAT STRINGS AND CHAR[]S ARE BIENG LEAKED, BUT IT CANT PROVIDE INFO ABOUT WHERE THEY WERE ALLOCATED OR REFERENCE GRAPHS.THE REQUESTS AND RESPONSES ARE VERY SMALL, LESS THAN 500 BYTES APIECE. WE HAVE CODE GENERATED FROM WSDL USING WSDL2JAVA, ARE USING COMMONS-HTTPCLIENT AND HTTPS.WHAT FOLLOWS IS A CUT&PASTE IF THE SOURCE CODE SINCE I DONT SEE A WAY TO ATTACH FILES ON THIS PAGE. I CAN PROVIDE MY WSDL AND FURTHER INFO IF NECESSARY.----------MY.JAVA-------------------PACKAGE COM.FOO.MY;IMPORT JAVA.UTIL.*;IMPORT JAVA.IO.*;IMPORT JAVA.NET.*;IMPORT MIL.ARMY.US.PEOC3T.PASS.*;IMPORT MIL.ARMY.US.PEOC3T.PASS.PORTS.*;IMPORT MIL.ARMY.US.PEOC3T.PASS.WSDL.*;IMPORT ORG.APACHE.AXIS.*;IMPORT ORG.APACHE.AXIS.CLIENT.STUB;PUBLIC CLASS MY    PUBLIC INT TOPICREFRESHTIME=30000;    MY()            PUBLIC STATIC VOID MAIN(STRING[] ARGS)            MY M = NEW MY();        IF(ARGS[0] != NULL)            M.TOPICREFRESHTIME = INTEGER.PARSEINT(ARGS[0])*1000;        M.GO();        PRIVATE VOID GO()            TRY                    SYSTEM.SETPROPERTY(JAVAX.NET.SSL.TRUSTSTORE,                C:HPCISDKDATATRUSTSTORE);                HPCIDATATRUSTSTORE);                CATCH (EXCEPTION EX)                    SYSTEM.OUT.PRINTLN(EXCEPTION SETTING JAVAX.NET.SSL.TRUSTSTORE=);                EX.PRINTSTACKTRACE();                TRY                    SYSTEM.SETPROPERTY(JAVAX.NET.SSL.TRUSTSTOREPASSWORD, MITRE1);                CATCH (EXCEPTION EX)                    SYSTEM.OUT.PRINTLN(                EXCEPTION SETTING JAVAX.NET.SSL.TRUSTSTOREPASSWORD);                    EX.PRINTSTACKTRACE();                AXISPROPERTIES.SETPROPERTY(            ENGINECONFIGURATIONFACTORY.SYSTEM_PROPERTY_NAME,            COM.FOO.MY.PASSENGINECONFIGURATIONFACTORY);        PASSPORTTYPE M_PASSSERVICE = NULL;        TRY                    M_PASSSERVICE = NEW PASSERVICELOCATOR().GETPASSERVICE(                NEW URL(HTTPS:134.80.99.231:7778PASS));            STUB STUB = (STUB) M_PASSSERVICE;            STUB._SETPROPERTY(JAVAX.XML.RPC.SECURITY.AUTH.USERNAME,                AJD1);            STUB._SETPROPERTY(JAVAX.XML.RPC.SECURITY.AUTH.PASSWORD,                PASS1);                CATCH (EXCEPTION E)                    SYSTEM.OUT.PRINTLN(BIND FAILED:  + E.TOSTRING());                _SYNC SYNCREQ = NEW _SYNC();        SYNCREQ.SETCOMPRESSION(FALSE);        SYNCREQ.SETREQUESTER_ID(AJD1);        SYNCREQ.SETTOPIC(TOPICS);        WHILE (TRUE)                    TRY                    SYSTEM.SETPROPERTY(JAVAX.NET.SSL.TRUSTSTOREPASSWORD, MITRE1);                CATCH (EXCEPTION EX)                    SYSTEM.OUT.PRINTLN(                EXCEPTION SETTING JAVAX.NET.SSL.TRUSTSTOREPASSWORD);                    EX.PRINTSTACKTRACE();                AXISPROPERTIES.SETPROPERTY(            ENGINECONFIGURATIONFACTORY.SYSTEM_PROPERTY_NAME,            COM.FOO.MY.PASSENGINECONFIGURATIONFACTORY);        PASSPORTTYPE M_PASSSERVICE = NULL;        TRY                    M_PASSSERVICE = NEW PASSERVICELOCATOR().GETPASSERVICE(                NEW URL(HTTPS:134.80.99.231:7778PASS));            STUB STUB = (STUB) M_PASSSERVICE;            STUB._SETPROPERTY(JAVAX.XML.RPC.SECURITY.AUTH.USERNAME,                AJD1);            STUB._SETPROPERTY(JAVAX.XML.RPC.SECURITY.AUTH.PASSWORD,                PASS1);                CATCH (EXCEPTION E)                    SYSTEM.OUT.PRINTLN(BIND FAILED:  + E.TOSTRING());                _SYNC SYNCREQ = NEW _SYNC();        SYNCREQ.SETCOMPRESSION(FALSE);        SYNCREQ.SETREQUESTER_ID(AJD1);        SYNCREQ.SETTOPIC(TOPICS);        WHILE (TRUE)                    TRY                             REQUEST STUFF FROM THE SERVER                _SYNC_RESPONSE SR = M_PASSSERVICE.SYNC(SYNCREQ);                SYSTEM.OUT.PRINTLN(NTOPICS:  + SR.GETCREATE_TOPIC().LENGTH);                SR = NULL;                        CATCH(PASS_FAULT E)                            SYSTEM.OUT.PRINTLN(SYNC FOR TOPICS FAULT:  + FAULTSTRING(E));                SYSTEM.OUT.PRINTLN(E.GETSTATUS());                        CATCH(EXCEPTION E)                            SYSTEM.OUT.PRINTLN(SYNC FOR TOPICS FAILED:  + E.TOSTRING());                E.PRINTSTACKTRACE();                        TRY                            SYSTEM.OUT.PRINTLN(SLEEPING:+TOPICREFRESHTIME);                THREAD.CURRENTTHREAD().SLEEP(TOPICREFRESHTIME);                        CATCH(INTERRUPTEDEXCEPTION E)                                        PRIVATE FINAL STATIC STRING FAULTSTRING(PASS_FAULT FAULT)            RETURN(DETAILS->  +  FAULT.GETERROR_DETAILS() +  +            STATUSSTRING(FAULT.GETSTATUS()));        PRIVATE FINAL STATIC STRING STATUSSTRING(STATUS STATUS)            RETURN(STATUS CODE->  + STATUS.GETSTATUS_CODE() +  STATUS PHRASE->             + STATUS.GETSTATUS_PHRASE());    ","SUMMARY":"HUGE MEMORY LEAK IN AXIS","CLASS":0}
{"ID_DEFECT":"AXIS-1293","DESCRIPTION":"THE COMMAND ANT JUNIT FAILS IF YOU DONT HAVE A FILE NAMED JUNIT-EXCLUDE-TESTS.TXT IN THE TOP LEVEL AXIS DIRECTORY:BUILD FAILEDUSRLOCALSRCAXISAXIS-1_2BETABUILD.XML:314: FOLLOWING ERROR OCCURED WHILE EXECUTING THIS LINEUSRLOCALSRCAXISAXIS-1_2BETABUILDTEST.XML:108: EXCLUDESFILE USRLOCALSRCAXISAXIS-1_2BETAJUNIT-EXCLUDE-TESTS.TXT NOT FOUND.CREATING A 0 BYTE FILE VIA TOUCH ALLOWS THE BUILD TO SUCCEED. IM NOT SURE IF THIS IS AN ANT BUG OR A BUG IN AXIS BUILD.XML.I MARKED THIS MAJOR BECAUSE HAVING A TEST SUITE THATS EASY TO RUN SEEMS REALLY IMPORTANT TO ME.","SUMMARY":"BUILD FAILS WITHOUT JUNIT-EXCLUDE-TESTS.TXT","CLASS":0}
{"ID_DEFECT":"AXIS-1369","DESCRIPTION":"AFTER RUNNING SOME TESTS AGAINST THE AXIS CLIENT, CAME ACROSS AN ISSUE WITH MONITOR LOCKING IN HTTPCLIENT. RESEARCHED THE ISSUE WITH THE HTTPCLIENT AND DEADLOCKS AND THE RESOLUTION WAS TO RELEASECONNECTION. (REFERENCE HTTP:ISSUES.APACHE.ORGBUGZILLASHOW_BUG.CGI?ID=27434)WHILE LOOKING THROUGH THE AXIS 1.2 BETA CODE I COULDNT FIND WHERE IT RELEASED THE CONNECTION. POSSIBLE RESOLUTION COULD BE IN (ORG.APACHE.AXIS.TRANSPORT.HTTP.COMMONSHTTPSENDER) LINE 203 ISH TO ADD A WRAPPER TO THE MESSAGE THAT WOULD CONTAIN THE CONNECTION MANAGER, THIS WAY DOWN THE CHAIN SOME OTHER HANDLER CAN RELEASE THE CONNECTION MANAGER. ILL LET YOU GUYS WORK OUT THAT KIND OF DETAIL THOUGH :)THREAD-266 DAEMON PRIO=5 TID=0X58B4D0 NID=0X1AA WAITING ON MONITOR [0XCEF7F000..0XCEF7FC68]        AT JAVA.LANG.OBJECT.WAIT(NATIVE METHOD)        AT JAVA.LANG.REF.REFERENCEQUEUE.REMOVE(REFERENCEQUEUE.JAVA:103)        AT JAVA.LANG.REF.REFERENCEQUEUE.REMOVE(REFERENCEQUEUE.JAVA:118)        AT ORG.APACHE.COMMONS.HTTPCLIENT.MULTITHREADEDHTTPCONNECTIONMANAGER$REFERENCEQUEUETHREAD.RUN(MULTITHREADEDHTTPCONNECTIONMANAGER.JAVA:732)THREAD-257 DAEMON PRIO=5 TID=0X63C1B0 NID=0X1A1 WAITING ON MONITOR [0XCF07F000..0XCF07FC68]        AT JAVA.LANG.OBJECT.WAIT(NATIVE METHOD)        AT JAVA.LANG.REF.REFERENCEQUEUE.REMOVE(REFERENCEQUEUE.JAVA:103)        AT JAVA.LANG.REF.REFERENCEQUEUE.REMOVE(REFERENCEQUEUE.JAVA:118)","SUMMARY":"DEADLOCK IN AXIS WHEN USING HTTPCLIENT","CLASS":0}
{"ID_DEFECT":"AXIS-1423","DESCRIPTION":"(DE)SERIALIZING LARGE GRAPHS OF OBJECTS IN THE PROCESS OF INVOKING A CALL CAUSES OUTOFMEMORYERRORS TO BE THROWN ON THE SERVER, DESPITE INSANELY LARGE HEAP SIZES (768M AND UP).","SUMMARY":"OUTOFMEMORYERROR IN AXIS WITH MULTI-THREADED USAGE","CLASS":0}
{"ID_DEFECT":"AXIS-1584","DESCRIPTION":"SOAP ATTACHMENTS, WHEN USED IN AXIS 1_2 BETA LEAVE A TRAIL OF TEMP FILES AND ONE OF THE WAYS I HAVE FOUND FOR CLEANING ALL TEMP FILES IS BY USING THE DELETE METHOD OF THE MANAGEDMEMORYDATASOURCE (MMDS) CLASS. IT WORKS WELL FOR SMALL ATTACHMENTS (OF THE ORDER OF KILOBYTES) BUT FOR ANYTHING OVER A FEW MB (67), THERE IS A JAVA.UTIL.CONCURRENTMODIFICATIONEXCEPTION THROWN.I BELIEVE I HAVE A PATCH FOR IT AND HAVE TESTED THAT IT WORKS. THIS INVOLVES A CHANGE IN AN INNER CLASS CALLED INSTREAM OF THE MMDS CLASS.THE CLOSE() METHOD OF THE INSTREAM CLASS IS CALLED BY THE DELETE() METHOD OF THE MMDS CLASS. HOWEVER, THE TROUBLE IS THE DELETE() METHOD ITERATES OVER A WEAKHASHMAP AND THE CLOSE() METHOD IN THE INSTREAM CLASS TRIES TO REMOVE ELEMENTS FROM THIS WEAKHASHMAP. TO AVOID THIS RACE CONDITION, I HAVE CREATED ANOTHER METHOD CLOSESTREAM() IN THE INSTREAM CLASS WHICH, CAN BE INVOKED BY THE DELETE() METHOD IN THE MMDS CLASS. DELETING ELEMENTS FROM THE WEAKHASHMAP ISNT AFFECTED IN ANYWAY AS THE HASHMAP IS CLEARED OF ALL ITS ELEMENTS BEFORE THE METHOD RETURNS. ALSO, ALL OTHER METHODS INVOKING CLOSE() CAN CONTINUE TO DO SO IN THE SAME MANNER AS WE DONT TOUCH THAT METHOD AT ALL..","SUMMARY":"CONCURRENTMODIFICATIONEXCEPTION IN MANAGEDMEMORYDATASOURCE CLASS","CLASS":0}
{"ID_DEFECT":"AXIS-2278","DESCRIPTION":"IM CHASING DOWN SOME GERONIMO MEMORY LEAKS WHEN DEPLOYINGUNDEPLOYING THE DAYTRADER SAMPLE APPLICATION. ONE MEMORY LEAK I SEE IS CAUSED BY O.A.A.UTILS.JAVAUTILS.ENUMMAP. JAVAUTILS IS LOADED BY A PARENT CLASSLOADER BUT IS HAS STRONG REFERENCES TO CLASSES (THE KEYS OF ENUMMAP) WHICH WERE LOADED BY CHILD CLASSLOADERS. THIS PREVENTS THE CLASSLOADER, AND THE CLASSES IT HAS LOADED, FROM BEING GCED. THIS MEANS WELL EVENTUALLY RUN OUT OF PERMGEN MEMORY...I CONVERTED ENUMMAP TO BE A WEAKHASHMAP AND I NOW SEE THE CLASSLOADERS BEING GCED. I DIDNT DOWNLOAD USING CVS. SO, I DONT HAVE A PATCH. IM HAPPY TO GENERATE ONE, IF YOUD LIKE...","SUMMARY":"MEMORY LEAK CAUSE BY JAVAUTILS.ENUMMAP","CLASS":0}
