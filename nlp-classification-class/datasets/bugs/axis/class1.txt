{"ID_DEFECT":"AXIS-1","DESCRIPTION":"OTHER SOAP IMPLEMENTATIONS (ROBJ VERIFIED WITH SOAPPY 0.9.7, AND DAVID MELGARREPORTS THAT MS .NET REQUIRES IT) PUT THE FOLLOWING HEADER ON SOAP MESSAGES:<?XML VERSION=1.0 CHARSET=UTF-8?>AXIS DOES NOT.  THIS WILL (ACCORDING TO DAVID MELGAR) LEAD TO INTEROP PROBLEMS,ESPECIALLY WITH MS .NET UDDI SERVERS.CHEERS,ROB","SUMMARY":"AXIS DOES NOT PUT <?XML...?> TAG IN ITS MESSAGES","CLASS":1}
{"ID_DEFECT":"AXIS-2","DESCRIPTION":"AXIS NEVER TIMES OUT A CONNECTION AT THE MOMENT.THERE NEEDS TO BE SUPPORT FOR:- CLIENT-SIDE TIMEOUTS, SO A CLIENT WILL NOT WAIT FOREVER FOR A SERVER TO RESPOND- SERVER-SIDE TIMEOUTS, SO A SERVER WILL NOT WAIT FOREVER FOR A CLIENT TOACKNOWLEDGE A RESPONSECHEERS!ROB","SUMMARY":"NO TIMEOUT SUPPORT YET","CLASS":1}
{"ID_DEFECT":"AXIS-3","DESCRIPTION":"EJBS DO NOT ALLOW USE OF THE JAVA.IO.* CLASSES.  AXISENGINE TRIES TO USE THESECLASSES TO INITIALIZE ITSELF, AND (I THINK) DOES NOT HANDLE A FAILURE PROPERLY.  THIS CAUSES PROBLEMS WHEN USING SERVICECLIENT TO DO AN AXIS CLIENT-SIDE CALLFROM AN EJB.BUG REPORTED BY ARNDT LEHMANN (ALEHMANN@DE.IBM.COM).CHEERS,ROB","SUMMARY":"AXIS IN EJB: JAVA.IO.* ACCESS","CLASS":1}
{"ID_DEFECT":"AXIS-4","DESCRIPTION":"SYSTEM PROPERTY SETTING IS NOT ALLOWED FROM AN EJB, BUT SERVICECLIENT TRIES TOSET ONE.THIS CAUSES PROBLEMS WHEN USING SERVICECLIENT TO DO AN AXIS CLIENT-SIDE CALLFROM AN EJB.BUG REPORTED BY ARNDT LEHMANN (ALEHMANN@DE.IBM.COM).CHEERS,ROB","SUMMARY":"AXIS IN EJB: SERVICECLIENT TRIES TO SET A SYSTEM PROPERTY","CLASS":1}
{"ID_DEFECT":"AXIS-5","DESCRIPTION":"EJBS DO NOT ALLOW USER-CREATED CLASSLOADERS.  ADMIN TRIES TO MAKE ONE.THIS CAUSES PROBLEMS WHEN USING SERVICECLIENT TO DO AN AXIS CLIENT-SIDE CALLFROM AN EJB.BUG REPORTED BY ARNDT LEHMANN (ALEHMANN@DE.IBM.COM).CHEERS,ROB","SUMMARY":"AXIS IN EJB: ADMIN TRIES TO INSTALL ITS OWN CLASSLOADER","CLASS":1}
{"ID_DEFECT":"AXIS-6","DESCRIPTION":"EJBS DO NOT ALLOW JAVA REFLECTION.  SOAPTYPEMAPPINGREGISTRY TRIES TO USE IT.THIS CAUSES PROBLEMS WHEN USING SERVICECLIENT TO DO AN AXIS CLIENT-SIDE CALLFROM AN EJB.BUG REPORTED BY ARNDT LEHMANN (ALEHMANN@DE.IBM.COM).CHEERS,ROB","SUMMARY":"AXIS IN EJB: SOAPTYPEMAPPINGREGISTRY USES JAVA REFLECTION","CLASS":1}
{"ID_DEFECT":"AXIS-7","DESCRIPTION":"AXIS CURRENTLY HAS NO BUILT-IN SUPPORT FOR HANDLERS WHICH WISH TO USE DOM. PERHAPS A GETMESSAGEASDOM(), OR A UTILITY CLASS TO RETURN A DOM TREE FOR AMESSAGE... BONUS POINTS IF IT WORKS CORRECTLY WITH RESPECT TO THE SAX STUFF, ANDIF THE MESSAGE CAN BE MODIFIED BOTH SAX-WISE AND DOM-WISE :-OCHEERS,ROB","SUMMARY":"NO DOM SUPPORT","CLASS":1}
{"ID_DEFECT":"AXIS-8","DESCRIPTION":"THE HTTPSENDER OFFERS NO SUPPORT FOR CLIENTS BEHIND A PROXY.","SUMMARY":"NO PROXY SUPPORT FOR HTTP","CLASS":1}
{"ID_DEFECT":"AXIS-11","DESCRIPTION":"HERE IS THE PROBLEM : WSDL2JAVA DUPLICATE THE DEFINITION OF SOME FUNCTIONS.I HAVE A COMPONENT (SMSWEBSERVICE) THAT HAS THE 2 FOLLOWING METHODS :RESULT[] SENDSMS(AUTHINFO,SMS[])RESULT   SENDSMS(AUTHINFO,SMS)BOTH METHODS ARE PUBLISHED AS A WEB SERVICE.THE AUTO-GENERATED WSDL DEFINES THE FOLLOWING MESSAGES :<WSDL:MESSAGE NAME=SENDSMSREQUEST><WSDL:MESSAGE NAME=SENDSMSREQUEST1><WSDL:MESSAGE NAME=SENDSMSRESPONSE><WSDL:MESSAGE NAME=SENDSMSRESPONSE1>WSDL2JAVA SHOULD GENERATE STUBS WITH THE 2 DIFFERENTS METHODS. BUT IT GENERATES TWICE THE SAME.EX : THE AUTO-GENERATED SMSWEBSERVICE.JAVA IS LIKE :PUBLIC INTERFACE SMSWEBSERVICE EXTENDS JAVA.RMI.REMOTE     PUBLIC SENDRESULT SENDSMS(AUTHINFO IN0, SMSTEXT IN1)     PUBLIC SENDRESULT SENDSMS(AUTHINFO IN0, SMSTEXT IN1) SAME PROBLEM IN THE SOAPBINDINGSTUB FILE.IVE SOLVED THE PROBLEM BY USING DFFERENT METHODS NAME, BUT ITS ONLY A WORKAROUND...","SUMMARY":"INVALID CODE GENERATED BY WSDL2JAVA","CLASS":1}
{"ID_DEFECT":"AXIS-45","DESCRIPTION":"I GUESS IT WAS THAT PATCH TO LIST AVAILABLE SERVICES, BUT IF YOU POINT YOUR BROWSER AT :HTTP:NAGOYA.APACHE.ORG:5049AXISSTOCKQUOTESERVICE.JWSYOU GET A LIST OF SERVICES, RATHER THAN GET TO SEE THE SERVICE ITSELF.TWO WORDS: REGRESSION AND TESTING","SUMMARY":"AXIS SERVLET NOT SERVICING JWS PAGES","CLASS":1}
{"ID_DEFECT":"AXIS-46","DESCRIPTION":"SIMILAR TO BUG: 7869THE BEANSERIALIZER.SERIALIZER METHOD ASSUMES THAT A PROPERTY OF A BEAN HAS A GETTER BY CALLING METHOD READMETHOD = PROPERTYDESCRIPTOR[I].GETREADMETHOD.THEN IT USES THIS REFERENCE AS READMETHOD.GETRETURNTYPE.  BUT READMETHOD IS NULL.  THEREFORE, A NULL PTR EXCEPTION IS THROWN.THIS IS ACTUALLY POST BETA.  REPRODUCTION IS TO USE A BEAN FOR A RETURN TYPE OF A CALLED WS METHOD THAT HAS ONLY A SETTER WITH NO GETTER PRESENT.","SUMMARY":"BEANSERIALIZER PTR EXCEPTION WHEN ONLY SETTER PRESENT","CLASS":1}
{"ID_DEFECT":"AXIS-73","DESCRIPTION":"THE WSDL GENERATOR AUTOMATICALLY GENERATES SOAP METHODS FOR PRIVATE METHODS IN THE SERVICE CLASS.","SUMMARY":"WSDL GENERATES INTERFACE FOR PRIVATE METHODS.  BETA 2 RC1","CLASS":1}
{"ID_DEFECT":"AXIS-143","DESCRIPTION":"TRYING TO DEBUG A PROBLEM IN AN END-USERS PROGRAM IS NEXT TO IMPOSSIBLESOMETIMES BECAUSE OF THE POOR ERROR REPORTING IN AXIS.  AS A FIRST STEPWE SHOULD CHANGE ALL CODE THE SIMPLE DOES A THROW NEW XXXEXCEPTION()WITHOUT ANY ASSOCIATED TEXT.  THIS WOULD BASICALLY THROW A MEANINGLESS EXCEPTION TO THE END-USER.    DO A: GREP -S NEW.*EXCEPTION() *.JAVA FROM THE ROOT OF THE CVS TREE TO FIND ALL OF EM.IMO, THIS IS A PRETTY BIG USABILITY PROBLEM.","SUMMARY":"SHOULD NEVER THROW EMPTY EXCEPTIONS","CLASS":1}
{"ID_DEFECT":"AXIS-145","DESCRIPTION":"WSDL2JAVA WILL REJECT A WSDL THAT CONTAINS ANY UNSIGNED SCHEMA TYPE.FOR EXAMPLE XSD:UNSIGNEDINT.","SUMMARY":"WSDL2JAVA DOESNT SUPPORT ANY UNSIGNED TYPES.","CLASS":1}
{"ID_DEFECT":"AXIS-148","DESCRIPTION":"IN ADDING MESSAGE TEXT TO VARIOUS EXCEPTIONS, I ENCOUNTERED ORG.APACHE.AXIS.DESCRIPTION.TYPEDESC WHICH THROWS A NULLPOINTEREXCEPTION FROM ADDFIELDDESC IF A NULL FIELDDESC PARAMETER IS SUPPLIED. SINCE THIS IS A PUBLISHED INTERFACE, A MORE APPROPRIATE EXCEPTION SHOULD BE THROWN.I DIDNT WANT TO FIX THIS AS PART OF THE MESSAGE TEXT ADDITION AS IT SEEMED MORE CONTENTIOUS.","SUMMARY":"TYPEDESC THROWS NPE","CLASS":1}
{"ID_DEFECT":"AXIS-158","DESCRIPTION":"GIVEN A SIMPLE CLIENT LIKE (A.JAVA):IMPORT ORG.APACHE.AXIS.* ;IMPORT ORG.APACHE.AXIS.CLIENT.* ;IMPORT ORG.APACHE.AXIS.MESSAGE.* ;PUBLIC CLASS A   STATIC VOID MAIN(STRING[] ARGS) THROWS EXCEPTION     SERVICE SERVICE = NEW SERVICE();    CALL    CALL    = (CALL) SERVICE.CREATECALL();    SOAPHEADERELEMENT  HEADER = NEW SOAPHEADERELEMENT(FOO, FOO);    CALL.SETTARGETENDPOINTADDRESS(HTTP:LOCALHOST:81AXISSERVICESADMINSERVICE);    CALL.ADDHEADER( HEADER );    CALL.ADDHEADER( HEADER );    CALL.ADDHEADER( HEADER );    CALL.INVOKE( FOO, NEW OBJECT[]  );  CAUSES A NPE IN DESERIALIZATIONCONTEXTIMPL.JAVA LINE 879:  CURELEMENT.SETCONTENTSINDEX(RECORDER.GETLENGTH());CURELEMENT IS NULL.  2 HEADERS WORK JUST FINE - 3 MAKES IT BLOW.","SUMMARY":"MESSAGE WITH 3 HEADERS CAUSES NPE","CLASS":1}
{"ID_DEFECT":"AXIS-160","DESCRIPTION":"GIVEN:PUBLIC CLASS ECHOTPUBLIC STRING ECHO(STRING ECHO)TTTRETURN ECHO;TWHEN RUNNNING:JAVA2WSDL  -NHTTP:ECHO -NHTTP:ECHO-INTERFACE -O ECHOSERVICE_IMPL.WSDL -O ECHOSERVICE_INTERFACE.WSDL  -LHTTP:LOCALHOST:80WSTKECHOSERVICEECHOSERVICE_INTERFACE.WSDL -MECHO  -LHTTP:LOCALHOST:80WSTKECHOSERVICESERVICESECHOSERVICE ECHOGIVES:JAVA.LANG.NULLPOINTEREXCEPTION        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.WRITEPORTTYPE(EMITTER.JAVA:580)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.GETINTFWSDL(EMITTER.JAVA:362)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.EMIT(EMITTER.JAVA:166)        AT ORG.APACHE.AXIS.WSDL.JAVA2WSDL.RUN(JAVA2WSDL.JAVA:437)        AT ORG.APACHE.AXIS.WSDL.JAVA2WSDL.MAIN(JAVA2WSDL.JAVA:474)","SUMMARY":"NPE IN JAVA2WSDL","CLASS":1}
{"ID_DEFECT":"AXIS-194","DESCRIPTION":"NO ERROR IS GENERATED WHEN A SERIALIZER ISNT FOUND ON THE SERVER.PLACING A.JWS INTO MY WEBAPPS DIR:A.JWS:----------------------------------------------------------------PUBLIC CLASS A   PUBLIC INT I = 5 ;  PUBLIC VOID SETI(INT J)  I = J ;  PUBLIC INT  GETI()  RETURN I ;   PUBLIC A GETQUOTE(STRING SYMBOL)     RETURN NEW A();  ----------------------------------------------------------------AND RUNNING:>JAVA SAMPLES.STOCK.GETQUOTE -SAXISA.JWS IBMI GET:------------------------------------------------------------------ MAPPING EXCEPTION TO AXISFAULTAXISFAULT FAULTCODE: HTTP:XML.APACHE.ORGAXISSERVER.USEREXCEPTION FAULTSTRING: ORG.XML.SAX.SAXPARSEEXCEPTION: PREMATURE END OF FILE. FAULTACTOR: NULL FAULTDETAIL:        STACKTRACE: ORG.XML.SAX.SAXPARSEEXCEPTION: PREMATURE END OF FILE.        AT ORG.APACHE.XERCES.PARSERS.ABSTRACTSAXPARSER.PARSE(ABSTRACTSAXPARSER.JAVA:1172)        AT JAVAX.XML.PARSERS.SAXPARSER.PARSE(UNKNOWN SOURCE)        AT ORG.APACHE.AXIS.ENCODING.DESERIALIZATIONCONTEXTIMPL.PARSE(DESERIALIZATIONCONTEXTIMPL.JAVA:213)        AT ORG.APACHE.AXIS.SOAPPART.GETASSOAPENVELOPE(SOAPPART.JAVA:457)        AT ORG.APACHE.AXIS.MESSAGE.GETSOAPENVELOPE(MESSAGE.JAVA:362)        AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKEENGINE(CALL.JAVA:2047)        AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2017)        AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:1787)        AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:1712)        AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:1252)        AT SAMPLES.STOCK.GETQUOTE.GETQUOTE(GETQUOTE.JAVA:121)        AT SAMPLES.STOCK.GETQUOTE.MAIN(GETQUOTE.JAVA:135)-----------------------------------------------------------------I EXPECT TO GET AN ERROR BUT NOT THIS ONE.  I SHOULD HAVE RECEIVEDA FAULT COMPLAINING ABOUT NO SERIALIZER FOUND FOR CLASS A.INSTEAD WHAT HAPPENS IS THE SERVER RETURNS AN EMPTY HTTP RESPONSE(WITH RC=200 BTW) BUT NO SOAP ENVELOPE - HENCE THE PREMATURE ENDOF FILE ERROR BY THE PARSER.WHATS REALLY BAD ABOUT THIS ERROR THOUGH (ASIDE FROM THE ABOVE) ISTHAT THE SERVER SIDE DOESNT EVEN DISPLAY THE REAL ERROR AT ALL.NO EXCEPTION OR ANYTHING IS PRINTED TO THE SERVERS WINDOW OR TOTHE AXIS.LOG FILE.  WHICH LEAVE THE CLIENT AND SERVER-ADMIN-GUYCLUELESS AS TO THE REAL ERROR.  THE ONLY WAY I WAS ABLE TO FIGUREOUT THAT I WAS MISSING A SERIALIZER WAS BY DEBUGGING WTHE SOURCEWHICH IS NOT A GOOD OPTION FOR AXIS CUSTOMERS.NOTE1: THIS APPEARES TO HAPPEN WHEN I USE TOMCAT 4.0.1 WITH THEAXIS SERVLET - THIS MIGHT NOT HAPPEN WITH THE SIMPLEAXISSERVER.THIS IS PROBABLY AN ISSUE WITH AXISSERVLET.NOTE2: WHILE I REPRODUCED THIS WITH A JWS FILE THIS IS NOT A JWSISSUE.I MADE THIS A CRITICAL BUG BECAUSE I CONSIDER ANY ERROR MESSAGE(OR LACK OF AN ERROR MESSAGE) THAT REQUIRES SOMEONE TO DEBUGUSING THE SOURCE CODE JUST TO FIGURE OUT WHAT THEY DID WRONGAS A MAJOR PROBLEM.  PEOPLE SHOULD NOT NEED TO HAVE THE SOURCEAROUND JUST TO FIND THEIR SIMPLE MISTAKE - ITS A MAJOR USABILITYISSUE (TO ME ANYWAY).","SUMMARY":"NO SERIALIZER ERROR IS GENERATED","CLASS":1}
{"ID_DEFECT":"AXIS-205","DESCRIPTION":"IF IN MY GLOBAL CONFIG SECTION OF THE WSDD I HAVE:  <RESPONSEFLOW>IT MAKES AXIS TRAP WITH:ORG.APACHE.AXIS.CONFIGURATIONEXCEPTION: JAVA.LANG.NULLPOINTEREXCEPTIONJAVA.LANG.NULLPOINTEREXCEPTION        AT ORG.APACHE.AXIS.DEPLOYMENT.WSDD.WSDDCHAIN.<INIT>(WSDDCHAIN.JAVA:119)        AT ORG.APACHE.AXIS.DEPLOYMENT.WSDD.WSDDRESPONSEFLOW.<INIT>(WSDDRESPONSEFLOW.JAVA:83)        AT ORG.APACHE.AXIS.DEPLOYMENT.WSDD.WSDDGLOBALCONFIGURATION.<INIT>(WSDDGLOBALCONFIGURATION.JAVA:101)        AT ORG.APACHE.AXIS.DEPLOYMENT.WSDD.WSDDDEPLOYMENT.<INIT>(WSDDDEPLOYMENT.JAVA:258)        AT ORG.APACHE.AXIS.DEPLOYMENT.WSDD.WSDDDOCUMENT.<INIT>(WSDDDOCUMENT.JAVA:103)EVEN THOUGH THATS VALID XML.","SUMMARY":"<RESPONSEFLOW> TRAPS AXIS","CLASS":1}
{"ID_DEFECT":"AXIS-243","DESCRIPTION":"IN PREVIOUS VERSIONS, JAVA2WSDL GENERATED SOAPENC MAPPINGS,IN WHICH NILLABLE IS IMPLICIT.  NOW IT GENERATES XSD MAPPINGS,IT NEEDS TO GENERATE A NILLABLE ATTRIBUTE FOR WRAPPER TYPES,AS IN JAX-RPC 1.0 SECTION 5.3.1.  IT DOES THIS FOR MEMBERSOF COMPLEX TYPES, BUT DOES NOT FOR STAND-ALONE PARAMETERS.THUS: LONG  -> JAVA2WSDL ->  XSD:LONG  -> WSDL2JAVA ->  LONG","SUMMARY":"JAVA2WSDL NOT GENERATING NILLABLE ATTRIBUTE FOR PRIMITIVE WRAPPER TYPES","CLASS":1}
{"ID_DEFECT":"AXIS-309","DESCRIPTION":"RIGHT NOW, IF MAIL.JAR ISNT IN THE CLASSPATH AND THE INPUT TO JAVA2WSDL HAS PARAMETERS OF JAVAX.ACTIVATION.DATAHANDLER, IT PRINTS OUT:THE CLASS JAVAX.ACTIVATION.DATAHANDLER IS DEFINED IN A JAVA OR JAVAX PACKAGE AND CANNOT BE CONVERTED INTO AN XML SCHEMA TYPE.  AN XML SCHEMA ANYTYPE WILL BE USED TO DEFINE THIS CLASS IN THE WSDL FILE.THIS IS OK FOR MOST JAVAJAVAX CLASSES, BUT DATAHANDLER SHOULD SAY SOMETHING LIKE:IN ORDER TO GENERATE A WSDL FOR JAVAX.ACTIVATION.DATAHANDLER, YOU MUST HAVE MAIL.JAR IN YOUR CLASSPATH.","SUMMARY":"JAVA2WSDL SHOULD DO THE RIGHT THING WITH DATAHANDLER","CLASS":1}
{"ID_DEFECT":"AXIS-343","DESCRIPTION":"I HAVE GENERATED JAVA-CLASSES FOR A WSDL FILE, THE SERVICE IS CALLED DOWNLOADSERVICE.THE INTERFACE TO THE DOWNLOAD OPERATION OF THE SERVICE TAKES AN APICOMMAND[] AND I THEN SEND IN DIFFERENT CONCRETE APICOMMAND-SUBCLASSES.EVERYTHING WORKS FINE UNDER NORMAL OPERATIONS (EXCEPT OTHER ALREAD REPORTED BUGS) AND THE TYPE INFO FOR THE APICOMMAND-SUBCLASSES IS INCLUDED. SEE SAMPLE A FOR AN ON-THE-WIRE WHERE THE TYPE INFO FOR THE DOWNLOADCOMMANDTYPE IS INCLUDED. SETTING THE PROP_DOMULTIREFS = FALSE, SEE SAMPLE C BEFORE CALLING THE SERVICE REMOVES THIS INFORMATION WHICH MEANS THAT THE SERVER CANNOT DESERIALIZE THE XML-DATA AND TO AN EXCEPTION, SEE SAMPLE B.SAMPLE A======== <NS1:DOWNLOAD SOAPENV:ENCODINGSTYLE=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING XMLNS:NS1=HTTP:WWW.SMARTTRUST.COMJAMDOWNLOAD>   <COMMANDS XSI:TYPE=SOAPENC:ARRAY SOAPENC:ARRAYTYPE=NS2:APICOMMAND[1] XMLNS:NS2=HTTP:WWW.SMARTTRUST.COMJAMDOWNLOADSCHEMA XMLNS:SOAPENC=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING>    <ITEM HREF=#ID1>   <COMMANDS>  <NS1:DOWNLOAD>  <MULTIREF ID=ID1 SOAPENC:ROOT=0 SOAPENV:ENCODINGSTYLE=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING XSI:TYPE=NS3:DOWNLOADCOMMANDTYPE XMLNS:SOAPENC=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING XMLNS:NS3=HTTP:WWW.SMARTTRUST.COMJAMDOWNLOADSCHEMA>   <AID HREF=#ID2>   <NAME XSI:TYPE=XSD:STRING>DOWNLOAD<NAME>  <MULTIREF>SAMPLE B========  <NS1:DOWNLOAD SOAPENV:ENCODINGSTYLE=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING XMLNS:NS1=HTTP:WWW.SMARTTRUST.COMJAMDOWNLOAD>   <COMMANDS XSI:TYPE=SOAPENC:ARRAY SOAPENC:ARRAYTYPE=NS3:APICOMMAND[1] XMLNS:NS3=HTTP:WWW.SMARTTRUST.COMJAMDOWNLOADSCHEMA XMLNS:SOAPENC=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING>    <ITEM>     <AID XSI:TYPE=NS3:AIDTYPE>534D4152545452555354303030355F50<AID>     <NAME XSI:TYPE=XSD:STRING>DOWNLOAD<NAME>    <ITEM>   <COMMANDS>  <NS1:DOWNLOAD>SAMPLE C=========CLIENT CODE SNIPPET:...      DOWNLOADSERVICELOCATOR LOCATOR = NEW DOWNLOADSERVICELOCATOR();      LOCATOR.GETENGINE().SETOPTION(AXISENGINE.PROP_DOMULTIREFS, NEW BOOLEAN(FALSE));...","SUMMARY":"RC1 - SETTING PROP_DOMULTIREFS LOOSES IMPORTANT TYPE INFO","CLASS":1}
{"ID_DEFECT":"AXIS-366","DESCRIPTION":"GIVEN A.JWS:------PUBLIC CLASS A   PUBLIC INT I = 5 ;  PUBLIC VOID SETI(INT J)  I = J ;  PUBLIC INT  GETI()  RETURN I ;   PUBLIC A GETQUOTE(STRING SYMBOL) THROWS EXCEPTION     RETURN NEW A();  -----WHEN I RUN:  JAVA SAMPLES.STOCK.GETQUOTE -SAXISA.JWS IBMI SEE:   <SOAPENV:ENVELOPEXMLNS:SOAPENV=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENVELOPEXMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMAXMLNS:XSI=HTTP:WWW.W3.ORG2001XMLSCHEMA-INSTANCE>      <SOAPENV:BODY>         <NS1:GETQUOTERESPONSESOAPENV:ENCODINGSTYLE=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODINGXMLNS:NS1=URN:XMLTODAY-DELAYED-QUOTES>            <GETQUOTERETURN HREF=#ID0>         <NS1:GETQUOTERESPONSE>         <MULTIREF ID=ID0 SOAPENC:ROOT=0SOAPENV:ENCODINGSTYLE=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODINGXSI:TYPE=XSD:ANYTYPEXMLNS:SOAPENC=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING>A@558CE2<MULTIREF>      <SOAPENV:BODY>   <SOAPENV:ENVELOPE>NOTICE THE A@558CE2 - IM ASSUMING THATS THE HASHCODE FOR THE NEW A()THAT WAS RETURNED - IT SHOULD HAVE GIVEN ME AN ERROR COMPLAINING ABOUTNO DESERIALIZER FOUND FOR CLASS A.","SUMMARY":"AXIS SERIALIZES WHEN IT SHOULDNT","CLASS":1}
{"ID_DEFECT":"AXIS-371","DESCRIPTION":"WE USED TO BE ABLE TO DEFINE (IN WSDD) A MESSAGING SERVICEWITH AN ALLOWEDMETHODS FIELD OF * BUT WE CANT DO THIS ANYMORE.AXIS COMPLAINS ABOUT ONLY BEING ABLE TO SUPPORT ONE METHOD.IVE WRITTEN A SMALL SAMPLE (AS PART OF THE MESSAGE SAMPLE) THATCAN BE USED AS A TESTCASE ONCE THIS IS FIXED.  ILL POST THAT INA SEC.","SUMMARY":"MESSAGE SERVICES DONT SUPPORT MULIPLE METHODS ANYMORE","CLASS":1}
{"ID_DEFECT":"AXIS-408","DESCRIPTION":"IN BETA 3 SIMPLEAXISSERVERS START METHOD USED TO RETURN (SPAWN A THREAD).SINCE THEN IT WAS CHANGED TO BE BASED ON A DOTHREAD FLAG BUT THERE IS NOWAY TO SET THIS FLAG WO GOING THROUGH MAIN() - WHICH SOME PEOPLE MAYNOT DO (IE. (NEW SIMPLEAXISSERVER()).START() ).FIX:  CHANGE DOTHREADSS DEFAULT VALUE TO TRUE TO MATCH OLD BEHAVOUR  ADD GETSETDOTHREADS METHODS SO THAT PEOPLE CAN CHANGE THE DEFAULT.I MARKED THIS AS A BLOCKCRITICAL BECAUSE THIS IS A REGRESSION IN THE SENSE THAT IT IS A CHANGE IN AXIS BEHAVOUR WITH NO WAY FOR THE USER TO SWITCH IT BACK(AND OF COURSE IT BLOCKS US  :-)","SUMMARY":"SIMPLEAXISSERVERS START DOESNT RETURN ANYMORE","CLASS":1}
{"ID_DEFECT":"AXIS-444","DESCRIPTION":"GIVEN THE FOLLOWING SCHEMA FRAGMENT:    <COMPLEXTYPE NAME=MYMESSAGE>      <SEQUENCE>         <ELEMENT REF=FOO:MYELEMENT >         <ELEMENT NAME=OTHERSTUFF TYPE=STRING >      <SEQUENCE>   <COMPLEXTYPE>...WHERE FOO.XSD CONTAINS:   <ELEMENT NAME=MYELEMENT TYPE=TNS:MYELEMENTTYPE >   <COMPLEXTYPE NAME=MYELEMENTTYPE>      <ALL>         <ELEMENT NAME=A TYPE=STRING >         <ELEMENT NAME=B TYPE=STRING >      <ALL>   <COMPLEXTYPE>...WSDL2JAVA GENERATES THE MYMESSAGE.JAVA BEAN CLASS AS FOLLOWS:    ...ETC...    STATIC         ORG.APACHE.AXIS.DESCRIPTION.FIELDDESC FIELD = NEW ORG.APACHE.AXIS.DESCRIPTION.ELEMENTDESC();        FIELD.SETFIELDNAME(MYELEMENT);        FIELD.SETXMLNAME(NEW JAVAX.XML.NAMESPACE.QNAME(HTTP:FOO.COM, MYELEMENT));        FIELD.SETXMLTYPE(NEW JAVAX.XML.NAMESPACE.QNAME(HTTP:FOO.COM, MYELEMENT));        TYPEDESC.ADDFIELDDESC(FIELD);   ...ETC...HOWEVER, THE XMLTYPE SHOULD HAVE BEEN ASSOCIATED WITH MYELEMENTTYPE AS IS REFLECTED IN THE SERVER-CONFIG.WSDD FILE:   ...ETC...   <TYPEMAPPING DESERIALIZER=ORG.APACHE.AXIS.ENCODING.SER.BEANDESERIALIZERFACTORY ENCODINGSTYLE= QNAME=NS6:MYELEMENTTYPE SERIALIZER=ORG.APACHE.AXIS.ENCODING.SER.BEANSERIALIZERFACTORY TYPE=JAVA:COM.FOO.MYELEMENTTYPE XMLNS:NS6=HTTP:FOO.COM>   ...ETC...SINCE THE MYMESSAGE BEAN INCORRECTLY MAPS MYELEMENT TO A NON-EXISTENT TYPE (I.E. MYELEMENT), THE AXIS ENGINE USES A SIMPLEDESERIALIZER, WHICH THROWS AN EXCEPTION WHEN IT ENCOUNTERS THE <A> SUB-ELEMENT IN AN INCOMING MESSAGE.","SUMMARY":"WSDL2JAVA CREATING INVALID BEAN WHEN USING REF ATTRIBUTE","CLASS":1}
{"ID_DEFECT":"AXIS-513","DESCRIPTION":"WHEN CREATING A SERVICE OBJECT USING THE CONSTRUCTOR THAT ACCEPTS ANENGINECONFIGURATION PARAMETER, I NOTICED THAT THE DEFAULT SEARCH FOR AN ENGINECONFIGURATION STILL GETS RUN.THE REASON IS THAT THE INSTANCE VARIABLE CONFIG IS ASSIGNED A VALUE (THERESULT OF THE DEFAULT SEARCH) WHEN IT IS DECLARED.  THIS VALUE THEN GETSOVERWRITTEN BY THE PARAMETER PASSED INTO THE SERVICE(CONFIG) CONSTRUCTOR.IN MY OPINION, THE DEFAULT SEARCH SHOULDNT HAPPEN AT ALL IF THE CREATOR OF THESERVICE USES A CONSTRUCTOR THAT ACCEPTS THE CONFIG OPTION -- NO NEED TO SEARCHIF YOUVE ALREADY GOT ONE!","SUMMARY":"SERVICE CONSTRUCTOR SEARCHES FOR ENGINECONFIGURATION TWICE","CLASS":1}
{"ID_DEFECT":"AXIS-514","DESCRIPTION":"THE SETCURRENTFORM METHOD ON SOAPPART HAS AS ITS FIRST LINE A LOG.DEBUG()MESSAGE IN WHICH THE MESSAGE IS CONCATENATED AS A STRING WITH A LOG MESSAGE. THAT TRIGGERS SERIALIZATION OF THE MESSAGE, WHICH IS QUITE EXPENSIVE.  THIS LOG.DEBUG() SHOULD, IMHO, BE WRAPPED IN A TEST TO DETERMINE IF DEBUGLOGGING IS ENABLED, SO THAT IT DOESNT HAPPEN UNLESS IT NEEDS TO.","SUMMARY":"SOAPPART.SETCURRENTFORM SERIALIZES COMPLETE MESSAGE WHEN DEBUG IS NOT ENABLED","CLASS":1}
{"ID_DEFECT":"AXIS-526","DESCRIPTION":"THE DOCUMENT HTTP:WAVENDON.DSDATA.CO.UKAXISSERVICESCARRENTALQUOTES?WSDL WHICH IS GENERATED BY AXIS DOES NOT FOLLOW XSD SPECIFICATIONS. FURTHERMORE AXIS WSDL2JAVA WILL QUITE HAPPILY IMPORT THIS GENERATED DOCUMENT ALTHOUGH IT DOES NOT MEET XSD SPECIFICATIONS. SO:1) AXIS GENERATES INCORRECT WSDL2) AXIS WSDL2JAVA QUITE HAPPILY ACCEPTS THIS INCORRECT WSDLTHE PROBLEM WITH THIS DOCUMENT IS THAT IT CONTAINS TWO SCHEMAS WHERE THE SECOND SCHEMA REFERENCES THE FIRST SCHEMA WITHOUT PROPERLY IMPORTING IT. THE WSDL 1.1 SPECIFICATIONS STATES THAT IT FOLLOWS XSD SPECIFICATIONSIN THE XSD SPECIFICATION SECTION 4.2.3 HTTP:WWW.W3.ORGTR2001REC-XMLSCHEMA-1-20010502#COMPOSITION-SCHEMAIMPORT IN THE FIRST SENTENCE AFTER THE TABLE IT IS STATED THAT A SCHEMA FROM A DIFFERENT NAMESPACE SHOULD ALWAYS BE IMPORTED IN ORDER TO REFERENCE TO IT.","SUMMARY":"WSDL GENERATED BY AXIS DOES NOT PROPERLY GENERATE REFERENCES TO SCHEMAS","CLASS":1}
{"ID_DEFECT":"AXIS-538","DESCRIPTION":"THE METHOD WRITESCHEMA(CLASS,TYPES) IN BEANSERIALIZER HAS A TYPO ON LINE 315THAT WILL GENERATE NULLPOINTEREXCEPTION WHEN USING CERTAIN INHERITANCE BETWEENCLASSES SURFACED IN THE WSDL-DESCRIPTION.SUPERPD = TYPEDESC.GETPROPERTYDESCRIPTORS();SHOULD BE CHANGED TOSUPERPD = SUPERTYPEDESC.GETPROPERTYDESCRIPTORS();I AM ATTACHING A TRIVIAL PATCH AND TESTCASE. TRY DEPLOYING THIS SERVICE ANDACCESSING THE ?WSDL-URL TO REPRODUCE THE EXCEPTIONS. PATCH BEANSERIALIZER ANDTHE WSDL WORKS.USE ANT TO BUILD. TARGET GENERATE-SERVER WILL COMPILE REQUIRED CLASSES,GENERATE WSDL, AND SERVER-SIDE STUBS. TARGET DEPLOY WILL COPY THE WEBSERVICETO A TOMCAT4 INSTALLATION AND RUN THE ADMINCLIENT WITH THIS SERVICE. THE DEFAULTTARGET ALL WILL DO ALL OF THIS. CHANGE THE ANT-SCRIPTS PROPERTYTOMCAT.IMPL.DIR TO THE TOMCAT4 BASEDIR IF YOU WANT AUTOMATIC DEPLOYMENT.","SUMMARY":"BEANSERIALIZER.WRITESCHEMA(CLASS,TYPES) PROPERTY DESCRIPTOR INHERITANCE BUG","CLASS":1}
{"ID_DEFECT":"AXIS-540","DESCRIPTION":"WHEN USING JAVA2WSDL, THE CLASS ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER DOES NOTHANDLE PACKAGES ONLY USED IN THE EXTRACLASSES OPTION. THE TNSXX NAMESPACEDECLARATIONS ARE CORRECTLY RESOLVED INTERNALLY AND CORRECTLY REFERENCED IN THERESLTING WSDL FILE, THE ONLY MISSING PART IS THE XMLNS:TNSXX= DECLARATION INTHE WSDL HEADER.ATTACHING A ZIP-FILE WITH ANT-SCRIPT AND JAVA SOURCEFILES TO REPRODUCE THISPROBLEM. THE DATA MODEL IS ALSO A HINT AS TO WHY YOU WOULD LIKE TO INCLUDEEXTRACLASSES FROM PACKAGES NEVER SURFACED IN THE INTERFACE CLASS USED FOR THESOAP SERVICE.USE ANT TO BUILD. TARGET GENERATE-WSDL WILL GENERATE A WSDL FILE IN$BASEDIR..BUILDWEBSERVICEBSBUG.WSDL, WHERE THE XMLNS:TNS1 DECLARATION ISMISSING (FOR THE SE.CURALIA.AXIS.OTHERPACKAGE PACKAGE). TARGETGENERATE-SERVER-SUBS WILL FAIL WHEN TRYING TO RUN WSDL2JAVA WITH A TYPEREFERENCED BUT NOT DEFINED ERROR UNLESS XMLNS:TNS1 IS HANDCODED INTO THE WSDLFILE. THE DEFAULT TARGET GENERATE-SERVER WILL TRY TO RUN BOTH THESE TARGETS.IT SEEMS TO ME THAT AXIS USAGE OF THE WSDLFACTORY FROM IBMS WSDL4J AT THEMOMENT CANNOT HANDLE THIS SITUATION. AFTER THE DOCUMENT INSTANCE IS CREATED, THEINSERTION OF TYPE INFO FOR EXTRA CLASSES WITH WRITETYPEFORPART() DOES NOT AFFECTTHE HEADER. WOULD IT NOT BE POSSIBLE TO MERGE THE INFORMATION FROM THE EXTRACLASSES INTO THE DOCUMENTS DEFINITION BEFORE CREATING THE DOCUMENT INSTANCE?","SUMMARY":"WSDL EMITTER DOES NOT OUTPUT XML NAMESPACE DECLARATIONS FOR MAPPINGS USED ONLY IN EXTRACLASSES.","CLASS":1}
{"ID_DEFECT":"AXIS-568","DESCRIPTION":"WE ARE UTILIZING THE AXIS TOOLKIT FOR CREATING A SAMPLE PRINTER WORKING GROUP PSI SERVER AND CLIENT.  SEE HTTP:WWW.PWG.ORGPS FOR DETAILS ON THE PROJECT.  THE PSI INTERFACE IS UTILIZING THE PWG SEMANTIC MODEL TYPE DEFINITIONS.  SEE HTTP:WWW.PWG.ORGSM FOR DETAILS.IN CREATING OUR INTERFACE DEFINTIONS, WE HAVE RUN INTO A PROBLEM WITH WSDL2JAVA, AND THE FOLLOWING CONSTRUCTS:<XS:SIMPLETYPE NAME=COMPRESSIONWKV>T<XS:RESTRICTION BASE=XS:NMTOKEN>TT<XS:ENUMERATION VALUE=COMPRESS>TT<XS:ENUMERATION VALUE=DEFLATE>TT<XS:ENUMERATION VALUE=GZIP>TT<XS:ENUMERATION VALUE=NONE>T<XS:RESTRICTION><XS:SIMPLETYPE><XS:ELEMENT NAME=COMPRESSIONWKV TYPE=Y:COMPRESSIONWKV><XS:SIMPLETYPE NAME=KEYWORDNSEXTENSIONPATTERN>T<XS:RESTRICTION BASE=XS:NMTOKEN>TT<XS:PATTERN VALUE=(I|D|.)*&#X003A;(I|D|.)*>T<XS:RESTRICTION><XS:SIMPLETYPE><XS:ELEMENT NAME=KEYWORDNSEXTENSIONPATTERN TYPE=Y:KEYWORDNSEXTENSIONPATTERN><XS:ELEMENT NAME=COMPRESSION>T<XS:SIMPLETYPE>TT<XS:UNION MEMBERTYPES=Y:COMPRESSIONWKV Y:KEYWORDNSEXTENSIONPATTERN>T<XS:SIMPLETYPE><XS:ELEMENT>IF YOU SPECIFY THE --ALL PARAMETER FOR WSDL2JAVA, THE COMPRESSIONWKV AND KEYWORDNSEXTENSIONPATTERN OBJECTS GET CORRECTLY GENERATED, BUT THE ENCAPSULATING COMPRESSION OBJECT ENDS UP WITH NO ACCESSORS, OR MEMBER VARIABLES.IT SEEMS THAT THE COMPRESSION OBJECT SHOULD END UP WITH AN NMTOKEN MEMBER VARIABLE, AND THE APPROPRIATE ACCESSORS.  (GRANTED, RESTRICTION VALIDATION WILL COME AT A LATER DATE...)THIS WOULD ALLOW A CLIENT TO GET AN INSTANCE OF THE STATIC ENUMERATION, AND THEN ASK IT FOR ITS VALUE, AND SET THIS IN THE CONTAINING COMPRESSION CLASS:COMPRESSION.SETVALUE(COMPRESSIONWKV._COMPRESS.GETVALUE());WEVE CREATED A WSDL FILE THAT SHOWS THIS, AND I WILL ATTACH ALONG WITH THE GENERATED CLASSES.ALSO, WE WOULD BE WILLING TO CONTRIBUTE TOOLKIT MODIFICATIONS TO SUPPORT THIS IF IT IS NOT ALREADY IN THE WORKS...  (SUGGESTIONS ON WHERE TO START??? :)THANKS!DAVID HALLHEWLETT-PACKARD","SUMMARY":"[XSD:UNION] WSDL2JAVA PROBLEM WITH UNION OF NMTOKEN ENUMERATION AND NMTOKEN PATTERN RESTRICTION","CLASS":1}
{"ID_DEFECT":"AXIS-569","DESCRIPTION":"HI,I HAVE ATTACHED SOME PATCHES ABOUT SOAP 1.2 COMPILANCE. IT CONTAINS THE FOLLOWINGS:- RPC:ARRAY SERDESER - RPC:RESULT ELEMENT - HREF -> REF ATTRIBUTES- MISUNDERSTOOD -> NOTUNDERSTOOD HEADER- MUSTUNDERSTOOD HEADER PROCESSING CHECKS IN SOAPSERVICE MOVED AFTER THE PIVOTPOINT TO LET THE SERVICE HANDLE ITS HEADERS.PLEASE TELL ME IF THEY HELP. BR,ANDRAS","SUMMARY":"SOAP 1.2 PATCHES FOR RPC ARRAY SERDESER, RPC RESULT, HREF ATTR, NOTUNDERSTOOD HEADER, ETC.","CLASS":1}
{"ID_DEFECT":"AXIS-579","DESCRIPTION":"MY UNDERSTANDING IS THAT IF AN ELEMENT IN A WSDL-SCHEMA ISNT SPECIFIED AS NILLABLE=TRUE THE DEFAULT IS FALSE AND THE ELEMENT SHOULD NOT BE SENT OVER THE WIRE. EXAMPLE: MY SPECIFICATION (WSDL):   <XSD:ELEMENT MINOCCURS=0 NAME=IDENTIFIER TYPE=XSD:STRING>THE (PRESUMABLY WRONG) RESULT OF SERIALIZATION:   <IDENTIFIER XSI:TYPE=XSD:STRING XSI:NIL=TRUE>","SUMMARY":"ELEMENT NOT SPECIFIED WITH NILLABLE=TRUE IN THE WSDL SHOULD BE SENT OVER THE WIRE","CLASS":1}
{"ID_DEFECT":"AXIS-587","DESCRIPTION":"THE NAMESPACE -> PACKAGE CONVERSION IN AXIS.WSDL.TOJAVA.NAMESPACES IGNORES THEPARTS OF THE NAMESPACE THAT FOLLOW THE HOSTNAME PORTION OF THE NAMESPACE URI(THE PATH).  THIS RESULTS IN A NAMESPACE COLLISIONS WHERE THERE SHOULD BE NONE.GIVEN TWO NAMESPACES:HTTP:FOO.COMBARHTTP:FOO.COMBAZTHE GENERATED PACKAGES WILL BOTH BE COM.FOO, CAUSING TYPESELEMENTS IN DIFFERENTNAMESPACES TO COLLIDE.","SUMMARY":"NAMESPACES ARE TRUNCATED IN CONVERSION TO JAVA PACKAGES","CLASS":1}
{"ID_DEFECT":"AXIS-590","DESCRIPTION":"HI!IT IS TOLD THAT IN THIS AXIS VERSION THERE IS NO NEED FOR GETTERSETTER METHODS FOR SERIALIZINGDESERIALIZING OBJECTS (IT IS TOLD THAT PUBLIC ATTRIBUTES CAN BE SERIALIZEDDESERIALIZED). HOWEVER, I ALWAYS RAN INTO A PROBLEM IF I DIDNT DEFINE THESE METHODS. I WILL INTRODUCE THIS VIA A LITTLE EXAMPLE:PUBLIC CLASS A   PUBLIC STRING ATTRIBUTE1;  PUBLIC STRING ATTRIBUTE2;PUBLIC CLASS B   PUBLIC STRING ATTRIBUTE3;  PUBLIC A[]    ARRAYBYA;     I NEED THESE METHODS FOR MY APP. TO WORK PROPERLY  PUBLIC A[] GETA()    RETURN ARRAYBYA;    PUBLIC VOID SETA(A[] ARRAYBYA)    THIS.ARRAYBYA=ARRAYBYA;  IN MY WSDL I HAVE THE FOLLOWING ENTRIES:   <BEANMAPPING XMLNS:NS=HU.REGENSENCODEDTYPES      TQNAME=NS:A        T        LANGUAGESPECIFICTYPE=JAVA:A   >   <BEANMAPPING XMLNS:NS=HU.REGENSENCODEDTYPES      TQNAME=NS:B        T        LANGUAGESPECIFICTYPE=JAVA:B   >   <TYPEMAPPING XMLNS:NS=HU.REGENSENCODEDTYPES        QNAME=NS:ARRAYOFA       TTYPE=JAVA:A[]         TSERIALIZER=ORG.APACHE.AXIS.ENCODING.SER.ARRAYSERIALIZERFACTORY         TDESERIALIZER=ORG.APACHE.AXIS.ENCODING.SER.ARRAYDESERIALIZERFACTORY        ENCODINGSTYLE=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING    >IN THE WAY DESCRIBED ABOVE MY APP. WORKS ALTHOUGH I THOUGHT THAT THERE WOULD BE NO NEED FOR GETTERSETTER METHODS.I DON1T KNOW WHETER WHAT IVE WRITTEN IS A FAULT OR NOT, YOU WILL DECIDE THAT.THANK YOU FOR LETTING ME TO REPORT MY BUG.","SUMMARY":"GETTERS AND SETTERS NEEDED FOR PUBLIC ARRAYS IN JAVABEANS","CLASS":1}
{"ID_DEFECT":"AXIS-591","DESCRIPTION":"WSDL2JAVA ACCEPTS WSDL DOCUMENTS WITH THE FOLLOWING ERRORS:(1) ELEMENT <OPERATION> IN <PORTTYPE> HAS NO ATTRIBUTE MESSAGE   SPEC:  ATTRIBUTE MESSAGE IS REQUIRED(2) THE VALUE OF ATTRIBUTE MESSAGE IN <OPERATION> DOES NOT   REFER TO AN ALREADY DEFINED MESSAGE   SPEC: QNAME IN THE VALUE MUST REFER TO AN ALREADY DEFINED MESSAGE I ATTACH 8 ERROR CASES, 4 OK CASES AND A PROPOSED PATCH. THE PATCH ADDS SOME CHECKS TO SYMBOLTABLE.JAVA.","SUMMARY":"WSDL2JAVA - MISSING CHECKS FOR <OPERATION MESSAGE=...> ELEMENT","CLASS":1}
{"ID_DEFECT":"AXIS-592","DESCRIPTION":"I AM RUNNING WSDL2JAVA ON A WSDL FILE THAT USES A  LARGE SCHEMA (>900TYPESELEMENTS).  AFTER PARSING THE FILES, THE TOOL HANGS FOR SEVERAL HOURSDURING THE RESOLVE REFERENCES PHASE OF CODE GENERATION.USING A PROFILER, I HAVE IDENTIFIED SEVERAL CONTRIBUTING FACTORS TO THIS.1. QNAME CREATION.  THE SYMBOLTABLE.UTILS CLASS CREATES HUNDREDS OF THOUSANDS OFQNAME OBJECTS WHILE WALKING THE DOM TO FIND DERIVED TYPES.  MOST OF THESE AREREDUNDANT, AND YET THEY ARE NOT CACHED.  I WILL ATTACH A FILE OF PROFILER OUTPUTTHAT PROVIDES DETAILS, BUT CREATION OF THESE NODES IS WHERE A LOT OF TIME IS SPENT.SUGGESTION: INTRODUCE A QNAME CACHE IN THE UTILS CLASS -- A MAP OF MAPS, WHERETHE OUTER MAP USES NAMESPACES AS KEYS AND THE INNER MAPS USE LOCALNAMES AS KEYSAND QNAMES AS VALUES.2.TIN ...AXIS.WSDL.SYMBOLTABLE.SYMBOLTABLE, THERES A POORLY CHOSENDATASTRUCTURE THAT YIELDS O(N^2) PERFORMANCE (POSSIBLY WORSE) -- THE TYPESVECTOR IS SUBJECTED TO MULTIPLE LINEAR SEARCHES, IN SOME CASES FROM WITHINNESTED LOOPS.TSUGGESTION:  REPLACE THE TYPES VECTOR WITH TWO MAPS, ONE FOR QNAME-> ELEMENT AND ONE FOR QNAME -> TYPE.3.TIN JAVAX.XML.NAMESPACE.QNAME, THE LOCALNAME AND NAMESPACEURI ARECACHED USING STRING.INTERN().  THIS GETS HIT *A LOT* FROM WITHINORG.APACHE.AXIS.WSDL.SYMBOLTABLE.UTILS.GETNODEQNAME().  REMOVING THEINTERNED STRINGS AND CHANGING THE QNAME.EQUALS() IMPLEMENTATION TO USESTRING.EQUALS() INSTEAD OF REFERENCE COMPARISON YIELDS A SIGNIFICANTSPEEDUP.4. ORG.APACHE.AXIS.WSDL.SYMBOLTABLE.SCHEMAUTILS.GETCOMPLEXELEMENTEXTENSIONBASE() GETS CALLED MANY, MANY TIMES FROM RECURSIVE INVOCATIONS OFORG.APACHE.AXIS.WSDL.SYMBOLTABLE.UTILS.GETDERIVEDTYPES().  THE INVOCATIONCOUNT APPROACHES O(N^2), WHERE N IS THE SIZE OF THE TYPES COLLECTION.  TSUGGESTION: MOST OF THE INVOCATIONS OFGETCOMPLEXELEMENTEXTENSIONBASE(NODE, SYMBOLTABLE) ARE REDUNDANT -- THEEXTENSION BASE OF THE COMPLEX TYPE DEFINED WITHIN NODE DOES NOT CHANGEACROSS THE RECURSIVE CALLS, BUT THE SEARCH FOR THAT EXTENSION BASE IS QUITEEXPENSIVE.  A CACHE OF PREVIOUSLY SEARCHED NODES IS VERY HELPFUL HERE.HOWEVER, THIS METHOD IS STATIC AND SO THIS RESOLUTION INTRODUCES A NEWPROBLEM -- HOW TO SCOPE THE CACHE SO THAT MULTIPLE INSTANCES OF SYMBOLTABLECAN COEXIST IN THE SAME VM?  TWO POSSIBILITIES:*TMAKE THE CACHE A PARAMETER TO THE METHOD*TMAKE THE METHOD AN INSTANCE METHOD RATHER THAN A CLASS METHOD.","SUMMARY":"WSDL2JAVA TAKES HOURS ON LARGE FILES","CLASS":1}
{"ID_DEFECT":"AXIS-601","DESCRIPTION":"XML-AXISJAVASRCORGAPACHEAXISCLIENTADMINCLIENT.JAVA V1.73 BREAKS SETTINGOF THE HOST PARAMETER FROM THE COMMAND-LINE OR USING THE ADMIN-CLIENT ANT-TASKSHOST= ATTRIBUTE.THE CVS LOG SHOWS THE FOLLOWING CHANGES OF COMMAND-LINE PARSING BETWEEN V1.72AND V1.73:@@ -223,7 +254,9 @@          ARGS = OPTS.GETREMAININGARGS(); -        IF ( ARGS == NULL ) -            LOG.INFO(MESSAGES.GETMESSAGE(USAGE00,ADMINCLIENT XML-FILES |LIST));+        IF ( ARGS == NULL  || OPTS.ISFLAGSET(H) > 0) +            LOG.INFO(MESSAGES.GETMESSAGE(USAGE00,ADMINCLIENT [OPTIONS] [LIST| <DEPLOYMENT-DESCRIPTOR-FILES>]));+            LOG.INFO();+            LOG.INFO(GETUSAGEINFO());             RETURN NULL;         IT LOOKS LIKE THE H FLAG IS USED FOR HELP...?FOR NOW, THE ADMINCLIENT IS ONLY USABLE FOR LOCALHOST.REMOVING THE CHECK FOR OPTS.ISFLAGSET(H) OR USING A NEW PARAMETER LETTER FORHELP SOLVES THE PROBLEM.","SUMMARY":"ADMINCLIENT (AND ADMIN-CLIENT ANT-TASK) HOST SETTING BROKEN","CLASS":1}
{"ID_DEFECT":"AXIS-604","DESCRIPTION":"WHEN YOU HAVE A WSDL FILE WITH COMMENTS IN, THESE COMMENTS ARE PASSED INTO THESOURCE     CANCEL JOB    PUBLIC VOID CANCELJOB(JAVA.LANG.STRING JOBURI) THROWS JAVA.RMI.REMOTEEXCEPTION;BUT IF THEY WERE JAVADOC COMMENTS, RATHER THAN JUST  COMMENTS, THEN WE COULDGET THESE INTO THE JAVADOC AND SO HAVE SELF DOCUMENTING ENDPOINTS FROM THE WSDL.","SUMMARY":"GENERATED COMMENTS SHOULD BE JAVADOC COMMENTS","CLASS":1}
{"ID_DEFECT":"AXIS-616","DESCRIPTION":"THE PURPOSE OF THIS NOTE IS TO DOCUMENT ISSUES I ENCOUNTERED DURING THE DEVELOPMENT OF THE WSRP WSTK DEMO WITH RESPECT TO AXIS AND THE ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT CLASS.  I SUSPECT THE MESSAGEELEMENT CLASS IS NOT MEANT FOR PROGRAMMERS TO USE DIRECTLY, BUT THIS IS A REQUIREMENT IN OUR CASE.BACKGROUND:THE WSDL FOR THE DEMO MAKES USE OF ANY IN SEVERAL PLACES IN ORDER TO ALLOW USER DEFINED XML DATA TO BE PASSED IN MESSAGES.  HERE IS AN EXAMPLE OF ITS USE IN DEFINING THE PROPERTY TYPE:      <COMPLEXTYPE NAME=PROPERTY>        <SEQUENCE>          <ANY NAMESPACE=##OTHER MINOCCURS=0 MAXOCCURS=UNBOUNDED>        <SEQUENCE>        <ATTRIBUTE NAME=NAME         TYPE=XSD:STRING USE=REQUIRED>        <ATTRIBUTE NAME=LANG         TYPE=XSD:STRING USE=REQUIRED>      <!--        WOULD PREFER THIS FORM, BUT AXIS TOOLS IGNORE THE DEFINITION        <ATTRIBUTE REF=XML:LANG      USE=REQUIRED>      -->        <ATTRIBUTE NAME=RESOURCENAME TYPE=XSD:STRING>      <COMPLEXTYPE>THE WSDL2JAVA TOOL GENERATES THE TYPE FOR THIS AS A PROPERTY CLASS THAT CONTAINS AN ARRAY OF MESSAGEELEMENTS LIKE SO:PUBLIC CLASS PROPERTY  IMPLEMENTS JAVA.IO.SERIALIZABLE     PRIVATE ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT [] _ANY;    PRIVATE JAVA.LANG.STRING NAME;   ATTRIBUTE    PRIVATE JAVA.LANG.STRING LANG;   ATTRIBUTE    PRIVATE JAVA.LANG.STRING RESOURCENAME;   ATTRIBUTE    PUBLIC PROPERTY()         PUBLIC ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT [] GET_ANY()         RETURN _ANY;        PUBLIC VOID SET_ANY(ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT [] _ANY)         THIS._ANY = _ANY;    T.T.T.IN ORDER TO USE THE PROPERTY CLASS, THE PROGRAMMER MUST CREATE MESSAGEELEMENTS AND MESSAGEELEMENT ARRAYS AS WELL AS TRY TO OBTAIN THE CONTENTS OF A MESSAGEELEMENT INSTANCE.ISSUES:1.  CONSTRUCTING A MESSAGEELEMENT:TIF I WANT TO CREATE A PROPERTY, I MUST CONSTRUCT A MESSAGEELEMENT.   THERE ARE 9 CONSTRUCTORS IN THE MESSAGEELEMENT CLASS.  THE JAVADOC DOES NOT DESCRIBE ANY OF THE THEM.  IT MATTERS WHICH ONE IS CHOSEN. AFTER A LOT OF EXPERIMENTATION,  I ENDED UP USING THE MESSAGEELEMENT(ORG.W3C.ELEMENT) CONSTRUCTOR.   UNDER THE COVERS, THE MESSAGEELEMENT CLASS HAS SEVERAL MEMBER VARIABLES FOR HOLDING VALUE INFORMATION.  THE CONSTRUCTOR YOU USE DETERMINES WHICH MEMBER VARIABLE GETS USED (E.G. TEXT VS ELEMENT VS CHILDREN), AND ALSO DETERMINES HOW YOU TRY TO GET THE VALUE LATER.   THERE ARE ALSO MANY POSSIBILITIES FOR USING THE NO-ARGUMENT CONSTRUCTOR AND THE CALLING ONE OF THE MULTITUDE OF SET METHODS. THE SETOBJECTVALUE METHOD IS TEMPTING, BUT THE VALUE DOESNT MAKE IT ACROSS THE NETWORK CONNECTION.2. RETRIEVING THE VALUE:TTHERE IS NO USABLE GET METHOD ON A MESSAGEELEMENT.   EVEN IF YOU KNEW HOW IT WAS CREATED AND WHERE THE DATA WAS STORED IN THE MESSAGEELEMENT (E.G. TEXTREP, ELEMENTREP), THERE IS NO CORRESPONDING GET METHOD.  THERE IS A METHOD CALLED  GETASDOM, BUT THIS METHOD CALLS GETASSTRING AND THEN PARSES THE RESULT.  THE PROTECTED METHOD GETASSTRING() METHOD REQUIRES A MESSAGECONTEXT WHICH IS USED TO OBTAIN A SERIALIZATIONCONTEXT.  SINCE I CREATED THE MESSAGEELEMENT MYSELF, THERE IS NO MESSAGECONTEXT.  IF YOU CALL TOSTRING(), IT JUST CALLS GETASSTRING() .WORKAROUNDS:I ENDED UP CREATING A CLASS CALLED MESSAGEELEMENTHELPER WHICH HAS METHODS TO CREATE A MESSAGEELEMENT, TO CLONE A MESSAGEELEMENT AND TO FETCH ITS CONTENT.  IT IMPLEMENTS SERIALIZATIONCONTEXT SO I CAN USE THE OUTPUT() METHOD AND FAKE OUT THE SERIALIZATION CONTEXT.   NOTE THAT I HAD TO INSPECT THE SOURCE CODE FOR MESSAGEELEMENT IN ORDER TO DERIVE THIS SOLUTION.HERE IT IS:CONCLUSIONS:I HOPE I DESCRIBED THE PROBLEM WELL ENOUGH WITHOUT GOING IN TO TOO MUCH DETAIL.  FOLKS USING ANY IN THEIR MESSAGES ARE GOING TO HAVE TO USE MESSAGEELEMENT AND ITS PAINFUL.  I HAVE A COUPLE OF SUGGESTIONS GOING FORWARD.T1. CHANGE THE WSDL2JAVA PROGRAM TO GENERATE SOMETHING MORE USEABLE THAN MESSAGEELEMENT ARRAYS.T2. DOCUMENT MESSAGEELEMENT MORE PRECISELY, SPECIFICALLY FOR THIS USE CASET3. WRAP MESSAGEELEMENT IN A MORE USABLE FORM AND CHANGE WSDL2JAVA CORRESPONDINGLY. IT WOULD BE NICE TO HAVE SETELEMENT(W3C.DOM.ELEMENT) AND W3C.DOM.ELEMENT GETELEMENT() .  PLEASE FEEL FREE TO CONTACT ME FOR MORE INFORMATION OR TO DISCUSS MY EXPERIENCES.  MY ULTIMATE GOAL IS TO IMPROVE THE PRODUCT AND HELP OTHER USERS.THANKS. JULIE E.MACNAUGHTIBM RESEARCH","SUMMARY":"MESSAGEELEMENT IS NOT FOR MORTALS","CLASS":1}
{"ID_DEFECT":"AXIS-637","DESCRIPTION":"HI.SENDING ATTACHMENTS TO A SERVER ON SUN SOLARIS OVER 1024 BYTES, IT SEEMS LIKE THE AXIS SERVER NEEDS TO CREATE A TEMP FILE.IN MY WEBSERVICE I CALL THE METHOD MYMESSAGECONTEXT.GETMESSAGE().COUNTATTACHMENTS(), THE COUNT ATTACHMENT GENERATES A PERMISSION DENIED WHEN CREATING THE TEMPFILE. THE ATTACHMENTSIMPL.GETATTACHMENTCOUNT() JUST CATCH THE EXCEPTION AND DO NOTHING WITH IT, WHEN IT SHOULD RETHROW IT ?!, INSTEAD OF JUST RETURNING ZERO.WHATS ALSO STRANGE IS THAT A SECOND CALL TO GETATTACHMENTCOUNT() GENERATES THE CORRECT NUMBER OF ATTACHMENTS ?!REGARDSANDREAS SIEGERSANDREAS.SIEGERS@IOCORE.SE","SUMMARY":"ATTACHMENTSIMPL.GETATTACHMENTCOUNT NOT PROPERLY IMPLEMENTED","CLASS":1}
{"ID_DEFECT":"AXIS-640","DESCRIPTION":"WHEN ERRORS LIKE 404 GET SENT FROM A SERVER AND TURNED INTO AXISFAULTS, IT WOULDBE NICE TO HAVE THE ERROR CODE EXTRACTED INTO A SEPARATE FAULT DETAIL, SO YOUDONT NEED TO PARSE THE ERROR STRING TO LOOK FOR IT.","SUMMARY":"WHEN AXIS FAULTS ARE GENERATED FROM HTTP FAULTS, CAN WE HAVE THE ERROR CODE IN A SEPARATE DETAIL","CLASS":1}
{"ID_DEFECT":"AXIS-673","DESCRIPTION":"LOCALSENDER CREATES A NEW MESSAGECONTEXT FROM THE CLIENTS REQUEST BUT IT DOES NOT TAKE THE ATTACHMENT PARTS BUT JUST THE SOAPENVELOPE.   DEFINE A NEW MESSAGECONTEXT PER REQUEST  MESSAGECONTEXT SERVERCONTEXT = NEW MESSAGECONTEXT(TARGETSERVER);   COPY THE REQUEST, AND FORCE ITS FORMAT TO STRING IN ORDER TO   EXERCISE THE SERIALIZERS.  STRING MSGSTR = CLIENTCONTEXT.GETREQUESTMESSAGE().GETSOAPPARTASSTRING();  IF (LOG.ISDEBUGENABLED())       LOG.DEBUG(MESSAGES.GETMESSAGE(SENDINGXML00, LOCALSENDER));      LOG.DEBUG(MSGSTR);    HERE ATTACHMENTS ARE LOST!!  SERVERCONTEXT.SETREQUESTMESSAGE(NEW MESSAGE(MSGSTR));I AM USING LOCALTRANSPORT TO TEST MY SERVICES BUT ATTACHMENTS ARE LOST IN THE PROCESS OF SENDING THE REQUEST. IN MY CASE ALL THE IMPORTANT INFORMATION IS STORED AS ATTACHMENTS.","SUMMARY":"LOCALSENDER REMOVES ATTACHMENTS FROM REQUEST MESSAGE","CLASS":1}
{"ID_DEFECT":"AXIS-702","DESCRIPTION":"WSDL2JAVA GENERATES A BEAN WITHOUT OWN PROPERTIES. THIS BEAN INHERITS PROPERTIES FROM ITS SUPERCLASS.WSDL2JAVA GENERATES THE FOLLOWING GETSERIALIZER  GETDESERIALIZER METHODS:....PUBLIC STATIC ORG.APACHE.AXIS.ENCODING.SERIALIZER GETSERIALIZER(           JAVA.LANG.STRING MECHTYPE,            JAVA.LANG.CLASS _JAVATYPE,             JAVAX.XML.NAMESPACE.QNAME _XMLTYPE)         RETURN           NEW  ORG.APACHE.AXIS.ENCODING.SER.BEANSERIALIZER(            _JAVATYPE, _XMLTYPE, NULL);        **     * GET CUSTOM DESERIALIZER     *    PUBLIC STATIC ORG.APACHE.AXIS.ENCODING.DESERIALIZER GETDESERIALIZER(           JAVA.LANG.STRING MECHTYPE,            JAVA.LANG.CLASS _JAVATYPE,             JAVAX.XML.NAMESPACE.QNAME _XMLTYPE)         RETURN           NEW  ORG.APACHE.AXIS.ENCODING.SER.BEANDESERIALIZER(            _JAVATYPE, _XMLTYPE, NULL);      ...DUE TO THE NULL VALUE PASSED AS TYPEDESC THE SERIALIZATION INSERTS WRONG (EMPTY) NAMESPACES TO THIS OBJECT.","SUMMARY":"WSDL2JAVA GENERATES WRONG GETSERIALIZER  GETDESERIALIZER METHODS","CLASS":1}
{"ID_DEFECT":"AXIS-705","DESCRIPTION":"THE COMMONSHTTPSENDER INVOKES MESSAGE.WRITETO() WITH A BYTEARRAYOUTPUTSTREAM. THE MESSAGE CLASS USES THE UTF-8 ENCODING WHEN WRITING ITS CHAR DATA OUT ASBYTES.  IN THE COMMONSHTTPSENDER, HOWEVER, THOSE BYTES ARE THEN CONVERTED BACKTO A STRING USING THE VMS DEFAULT ENCODING (ENVIRONMENT DEPENDENT, GENERALLYNOT UTF-8) -- THIS WILL RESULT IN CORRUPT MESSAGE DATA FOR CHARACTERS WITH MORETHAN 7 BITS.THE FIX WOULD BE TO SPECIFY UTF-8 AS A SECOND ARGUMENT TO THE STRING CONSTRUCTOR:METHOD.SETREQUESTBODY(NEW STRING(BAOS.TOBYTEARRAY(), UTF-8));","SUMMARY":"COMMONSHTTPSENDER WILL CORRUPT MESSAGE DATA","CLASS":1}
{"ID_DEFECT":"AXIS-710","DESCRIPTION":"USING APACHE AXIS 1.1-RC1, I HAVE A CLIENT PERFORM A WEB SERVICE INVOCATION ON A METHOD WITH A SIGNATURE SIMILAR TO:  EXECUTE(STRING, MAP);INSIDE OF THE MAP, MY CLIENT PUTS AN INTEGER[].  IN THE WEB SERVICE CLASS CALLED BY THE AXISSERVLET, THE OBJECT IN THE MAP IS AN INSTANCE OF INT[] (THE PRIMITIVE INT ARRAY WHEN IT SHOULD BE THE OBJECT INTEGER ARRAY).THIS IS ODD BECAUSE INTEGER IS SENT ACROSS AS INTEGER JUST FINE.  THE PROBLEM APPEARS TO BE ONLY WHEN SENDING ARRAYS.  HAVE NOT TESTED WITH OTHER PRIMITIVES, BUT WOULD GUESS SIMILAR BEHAVIOR.","SUMMARY":"INTEGER[] -> INT[]","CLASS":1}
{"ID_DEFECT":"AXIS-814","DESCRIPTION":"ORG.APACHE.AXIS.TYPES.URI IS NOT OVER-RIDING HASHCODE() AND SO IT CAN NOT BEUSED AS A KEY TO A HASHMAP.$ JAVA -FULLVERSIONJAVA FULL VERSION 1.3.1_03-B03TEST PROGRAM:IMPORT ORG.APACHE.AXIS.TYPES.URI;IMPORT ORG.APACHE.AXIS.TYPES.URI.MALFORMEDURIEXCEPTION;PUBLIC CLASS URITEST     PUBLIC STATIC VOID MAIN(STRING[] ARGS) THROWS MALFORMEDURIEXCEPTION     TURI URI1 = NEW URI(URN:FOOBAR);TTURI URI2 = NEW URI(URN:FOOBAR);TTSYSTEM.OUT.PRINT(EQUALS: );TTSYSTEM.OUT.PRINTLN((URI1.EQUALS(URI2)) ?PASS : FAIL);TTSYSTEM.OUT.PRINT(HASHCODE: );TTSYSTEM.OUT.PRINTLN((URI1.HASHCODE() == URI2.HASHCODE()) ? PASS : FAIL);   THE RESULT IS:EQUALS: PASSHASHCODE: FAIL","SUMMARY":"URI DOES NOT OVER-RIDE HASHCODE()","CLASS":1}
{"ID_DEFECT":"AXIS-844","DESCRIPTION":"I HAVE DECLARED A PUBLIC PROPERTY (E.G. PUBLIC BYTE[] CONTENT) IN A JAVA CLASS.  UPON GENERATING THE WSDL THE TYPE SHOULD BE MAPPED TO XSD:BASE64BINARY.  INSTEAD, THE TYPE IS MAPPED TO XSD:BYTE WHICH IS INCORRECT.  SUBSEQUENTLY, WHEN A MICROSOFT .NET CLIENT APPLICATION TRIES TO USE THE WSDL GENERATED FROM A WEB SERVICE DEPLOYED ON AXISTOMCAT, THE CLIENT COMPILATION FAILS BECAUSE THE TYPE BYTE[] CANNOT BE IMPLICITLY CONVERTED TO SBYTE[].  GENERATING WSDL USING OTHER PRODUCTS SUCH AS BEA WEBLOGIC PRODUCES THE CORRECT MAPPING.","SUMMARY":"JAVA2WSDL DOES NOT HANDLE BYTE[] MAPPING PROPERLY","CLASS":1}
{"ID_DEFECT":"AXIS-878","DESCRIPTION":"SETTING THE DIRTY FLAG TO TRUE ON A MESSAGEELEMENT CHILD DOES NOT PROPAGATE UP TO THE PARENT ELEMENTS.  THE RESULT IS THAT THE RECORDERS CACHED SERIALIZATION STREAM WILL BE PLAYED BACK INSTEAD OF THE REVISED VALUES.","SUMMARY":"MESSAGEELEMENT.SETDIRTY DOES NOT PROPAGATE UP AND TRIGGER RE-SERIALIZATION","CLASS":1}
{"ID_DEFECT":"AXIS-896","DESCRIPTION":"PROBLEM:USING THE SUPPLIED WSDL, I GET NULL BACK WHEN PASSED AN OBJECT CONTAINING AN EMPTY ARRAY.TO REPRODUCE:PLEASE, USE THE SUPPLIED WSDL TO GENERATE SERVER SIDE STUBS USING WSDLJAVA AND DEPLOY IT ON AXIS IN JBOSS. THEN USE THE WSDL FROM THE WEBSERVICE DEPLOYED, TO GENERATE CLIENT SIDE STUBS. USE THE FOLLOWING MECHANISM TO INVOKE THE WEBSERVICE. SERVICE1SOAPSOAPBINDINGSTUB STUB = NEW SERVICE1SOAPSOAPBINDINGSTUB(NEW URL(HTTP:LOCALHOST:8080AXISSERVICESSERVICE1SOAP), NEW SERVICE1LOCATOR());ARRAYOFMYBEAN  AOM = NEW ARRAYOFMYBEAN ();AOM.SETMYBEAN(NEW MYBEAN[0]);ARRAYOFMYBEAN AOMRESULT = STUB.GETCOPY(AOL);MYBEAN RESULT[] = AOMRESULT.GETMYBEAN();THE AOMRESULT RETURNS BACK AS NULL INSTEAD OF A VALID OBJECT.","SUMMARY":"USING THE SUPPLIED WSDL, I GET NULL WHEN PASSED AN EMPTY ARRAY","CLASS":1}
{"ID_DEFECT":"AXIS-909","DESCRIPTION":"","SUMMARY":"AXISFAULT DURING CONFIG PROCESSING GIVES NPE","CLASS":1}
{"ID_DEFECT":"AXIS-911","DESCRIPTION":"WHEN WE RUN THE ADMINCLIENT IT NOW PRINTS:[INFO] ADMINCLIENT - -PROCESSING FILE[INFO] ADMINCLIENT - -<ADMIN>DONE PROCESSING<ADMIN>TO THE SCREEN.  THERE ARE TWO PROBLEMS HERE:1 - IT DOESNT SHOW THE FILE NAME ANYMORE2 - THESE ARE BEING DISPLAYED AS LOGGING MESSAGES INSTEAD OF NORMAL PRINTLNS.THIS ARE NOT LOGGING MESSAGES (OR DEBUGGING MESSAGES) THESE ARE THEREAS THE NORMAL OUTPUT FOR THE END USER.  IF WE WANT TO CONTROL THE OUTPUTOF THESE THEN WE NEED TO ADD EITHER A -V (VERBOSE) OR -Q (QUIET) OPTION TOSHOWHIDE THESE BUT THESE ARE NOT LOGGING MESSAGES AND SHOULD NOT BE DISPLAYED(OR NOT DISPLAYED) BASED ON THE LOG4J.PROPERTIES FILE.THIS IS A CHANGE FROM 1.0 BEHAVIOUR.","SUMMARY":"ADMINCLIENT MESSAGES ARE NOT LOG MESSAGES","CLASS":1}
{"ID_DEFECT":"AXIS-942","DESCRIPTION":"HI,I AM USING READING AND WRITING SOAP MESSAGES USING THE AXIS API AND FOUND THAT IF IVE SET XERCES (2.4.0) AS MY XML PARSER, THESE CALLS CONSUME A LOT OF TIME.1) ADDTEXTNODE() METHOD IN THE ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT CLASS IS VERY SLOW.  DID MORE DIGGING, AND THE PROBLEM CODE IS IN THE ORG.APACHE.AXIS.MESSAGE.TEXT CLASS WHERE IT CREATES A NEW ORG.W3C.DOM.DOCUMENT (AND DOCUMENTBUILDER) EVERY SINGLE TIME ADDTEXTNODE() IS CALLED.  FOR SOME REASON, CREATING A NEW DOCUMENT AND DOCUMENTBUILDER IN XERCES IS SLOWER COMPARED TO CRIMSON (CRIMSON IS THE DEFAULT FOR SUN JDK1.4.X), AND WITHOUT CACHING OF SOME SORT, THIS JUST MAKE THE WHOLE EXERCISE OF ADDING TEXT NODE TO AN ELEMENT UNACCEPTABLY SLOW.  TRIED IT WITH CRIMSON AS THE PARSER, AND IT WAS VERY FAST!2) GETVALUE() METHOD IN THE ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT CLASS IS VERY SLOW.  THIS PROBLEM IS VERY SIMILAR TO THE ONE IN (1) ABOVE, IN THE SENSE THAT A NEW DOCUMENT (AND HENCE DOCUMENTBUILDER) IS CREATED EACH TIME GETVALUE() IS CALLED.  THE PROBLEM CODE IS IN GETASDOCUMENT() IN MESSAGEELEMENT.  AGAIN, TRIED IT WITH CRIMSON, AND IT WAS VERY FAST!XERCES HAS SOMEHOW PUT MORE PENALTY FOR CREATING DOCUMENTBUILDER AND DOCUMENT, SO AXIS MIGHT WANT TO THINK OF CACHING THEM FOR REUSE AND SPEED UP THINGS.  THIS BUG IS QUITE CRITICAL, AS IT REALLY SLOWS DOWN OUR APPLICATION, AND WE HAVE TO PUT A PRETTY UGLY HACK TO GET AROUND IT (AND YES, WE HAVE TO USE XERCES 2.4 ONWARDS FOR OUR APPLICATION).","SUMMARY":"ADDTEXTNODE() AND GETVALUE() EXTREMELY SLOW WHEN XERCES IS USED AS THE XML PARSER","CLASS":1}
{"ID_DEFECT":"AXIS-1034","DESCRIPTION":"IM USING A DOCLIT SERVICE AND I BIND PARTS OF A RESPONSE MESSAGE ASATTACHMENTS IN MY WSDL.  THEY ARE SENT BACK TO THE CLIENT CORRECTLY AND DO WINDUP IN THE ATTACHMENTS VECTOR IN THE CLIENT STUB (I.E. EXTRACTATTACHMENTS(_CALL)WORKS FINE) BUT THE GENERATED BINDING STUB CODE TRIES TO PULL THE PART DATA OUTOF THE OUTPUT INSTEAD, AS THIS WSDL2JAVA GENERATED CODE SNIPPET SHOWS:    PIC.VALUE = (JAVAX.ACTIVATION.DATAHANDLER) _OUTPUT.GET(NEWJAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.WS-I.ORGSAMPLEAPPLICATIONSSUPPLYCHAINMANAGEMENT2003-07CATALOG.XSD,PICTURE));IN OTHER WORDS, I DONT BELIEVE THE WSDL2JAVA CODE GENERATOR IS TAKING INTOACCOUNT WHETHER A PART IS AN ATTACHMENT OR NOT AND CREATING THE COORESPONDINGCODE - IT IS JUST ASSUMING IT IS A PART IN THE BODY.  SERVICE WSDL IS ATTACHED.","SUMMARY":"WSDL2JAVA GENERATES INCORRECT ATTACHMENT HANDLING FOR CLIENT STUB","CLASS":1}
{"ID_DEFECT":"AXIS-1054","DESCRIPTION":"I HAVE NOTICED THAT THERE IS NO WAY TO KEEP AXIS FROM USING THE DEFAULT NS# NAMESPACE PREFIX WHEN CREATING MESSAGEELEMENTS (E.G. SOAP HEADER ELEMENTS) FROM DOM ELEMENTS. THIS IS BECAUSE:1) THE PREFIX USED IN THE DOM ELEMENT IS IGNORED BY SERIALIZATIONCONTEXTIMPL.WRITEDOMELEMENT(). IT DOES NOT CALL REGISTERPREFIXFORURI().AND2) MESSAGEELEMENT.SETPREFIX() IS ALSO IGNORED IN THIS CASE. THIS IS BECAUSE, WHEN THE MESSAGEELEMENT HAS BEEN CONSTRUCTED FROM DOM, MESSAGEELEMENT.OUTPUTIMPL() SHORT CIRCUITS IMMEDIATELY *BEFORE* GETTING TO THE LINE WHERE REGISTERPREFIXFORURI() IS CALLED BASED ON THE PREFIX VALUE (LINE 806 & 807 IN MESSAGEELEMENT.JAVA). NOTE THAT THIS COULD EASILY BE FIXED BY MOVING LINES 806-821 TO THE *BEGINNING* OF THE MESSAGEELEMENT.OUTPUTIMPL() METHOD. I.E.:    PROTECTED VOID OUTPUTIMPL(SERIALIZATIONCONTEXT CONTEXT) THROWS EXCEPTION            IF (PREFIX != NULL)            CONTEXT.REGISTERPREFIXFORURI(PREFIX, NAMESPACEURI);        IF (NAMESPACES != NULL)             FOR (ITERATOR I = NAMESPACES.ITERATOR(); I.HASNEXT();)                 MAPPING MAPPING = (MAPPING) I.NEXT();                CONTEXT.REGISTERPREFIXFORURI(MAPPING.GETPREFIX(), MAPPING.GETNAMESPACEURI());                                        IF (ELEMENTREP != NULL)             BOOLEAN OLDPRETTY = CONTEXT.GETPRETTY();            CONTEXT.SETPRETTY(FALSE);            CONTEXT.WRITEDOMELEMENT(ELEMENTREP);            CONTEXT.SETPRETTY(OLDPRETTY);            RETURN;                IF (TEXTREP != NULL)             BOOLEAN OLDPRETTY = CONTEXT.GETPRETTY();            CONTEXT.SETPRETTY(FALSE);            CONTEXT.WRITESAFESTRING(TEXTREP.GETDATA());            CONTEXT.SETPRETTY(OLDPRETTY);            RETURN;                IF (OBJECTVALUE != NULL)             CONTEXT.SERIALIZE(NEW QNAME(NAMESPACEURI, NAME),                              ATTRIBUTES,                              OBJECTVALUE, NULL, FALSE, BOOLEAN.TRUE);            RETURN;                CONTEXT.STARTELEMENT(NEW QNAME(NAMESPACEURI, NAME), ATTRIBUTES);        IF (CHILDREN != NULL)             FOR (ITERATOR IT = CHILDREN.ITERATOR(); IT.HASNEXT();)                 ((MESSAGEELEMENT)IT.NEXT()).OUTPUT(CONTEXT);                            CONTEXT.ENDELEMENT();    ","SUMMARY":"NO WAY TO NON-DEFAULT NAMESPACE PREFIXES WHEN CREATING MESSAGEELEMENTS FROM DOM ELEMENTS","CLASS":1}
{"ID_DEFECT":"AXIS-1062","DESCRIPTION":"THERES PROBABLY A BUG IN THE SERIALIZATION OF DOM DOCUMENTS. IN THE DESERIALIZED DOCUMENTS THERE IS SOME EXTRA WHITESPACE THAT WASNT IN DOCUMENT WHEN IT HAS BEEN SENDED FROM THE WEB SERVICE. I THINK ITS A PROBLEM WITH THE SERIALIZATION OF DOM ELEMENTS SO THAT WHITESPACE WILL BE GENERATED DURING SERIALIZATION ON THE WEB SERVICE SIDE AND THEN THE WHITESPACE WONT BE REMOVED FROM THIS DOCUMENT ON THE CLIENT SIDE.","SUMMARY":"WHITESPACE IN SERIALIZED DOM DOCUMENTS","CLASS":1}
{"ID_DEFECT":"AXIS-1066","DESCRIPTION":"I CREATED A JAVA BEAN (TV.NAVIC.SOAP.MESSAGE) THAT EXPLICITLY ASSIGNS THE XML TYPES TO ITS PROPERTIES. I ASSIGNED TWO BYTE [] FIELDS XSD:HEXBINARY TYPES SO THAT I COULD EYEBALL THE RESULT. THE BEAN CORRECTLY SERIALIZES AND DESERIALIZES IN HEXBINARY, BUT THE WSDL THATS GENERATED SPECIFIES A TYPE OF BASE64BINARY TO THE FIELD.IF YOU LOOK AT ORG.APACHE.AXIS.ENCODING.SER.BEANSERIALIZER AT THE BOTTOM OF THE WRITESCHEMA METHOD, YOULL SEE THAT THE CALLS TO WRITEFIELD DO NOT MAKE USE OF NON-NULL XML TYPES. I WILL INCLUDE THE FILES TO DEMONSTRATE THE PROBLEM, THE GENERATED WSDL AND A VERSION OF BEANSERIALIZER THAT REWORKS THE WRITEFIELD METHOD SLIGHTLY TO TAKE THE OVERRIDDEN XML TYPE INTO ACCOUNT.","SUMMARY":"WSDL ASSIGNS BASE64BINARY TYPE TO HEXBINARY FIELD","CLASS":1}
{"ID_DEFECT":"AXIS-1104","DESCRIPTION":"APPLICATION SERVER: JBOSS 3.2.2 USING JBOSSNET AND AXIS 1.1WE HAVE AN EAR THAT CONTAINS AN EJB MODULE (ENTITY BEANS AND A STATELESS SESSIONBEAN USED A SOAP DISPATCHER) AND A WSR MODULE (WEB SERVICE DEFINITION). IF WEDEPLOY AND RAN SOME SOAP CALLS FROM AN EXTERNAL CLIENT, EVERYTHING IS OKIF WE THEN HOT REDEPLOY THE APPLICATION (MEANING REMOVE THE ENTITY BEANS AND SBFROM THE SYSTEM AND REDEPLOYS THEM + REMOVING AND REGISTERING AGAIN THE WEBSERVICE) WE HAVE A PROBLEM IN EJBPROVIDER.JAVA, LINE 196:EHOME = JAVAX.RMI.PORTABLEREMOTEOBJECT.NARROW(EJBHOME, HOMECLASS);WEB SERVICE DEPLOYMEN DESCRIPTOR:<?XML VERSION=1.0 ENCODING=UTF-8?><DEPLOYMENT XMLNS=HTTP:XML.APACHE.ORGAXISWSDD    XMLNS:JAVA=HTTP:XML.APACHE.ORGAXISWSDDPROVIDERSJAVA>    <SERVICE NAME=KPSYNCHERSERVICE PROVIDER=JAVA:EJB>        <REQUESTFLOW>            <HANDLER TYPE=SOAPMONITOR>        <REQUESTFLOW>        <RESPONSEFLOW>            <HANDLER TYPE=SOAPMONITOR>        <RESPONSEFLOW>        <PARAMETER NAME=BEANJNDINAMEVALUE=EJBKIALANODESYNCHNODESYNCHERLOCAL>        <PARAMETER NAME=HOMEINTERFACENAMEVALUE=COM.KIALA.KSERVER.DRIVER.NODESYNCH.NODESYNCHERLOCALHOME>        <PARAMETER NAME=REMOTEINTERFACENAMEVALUE=COM.KIALA.KSERVER.DRIVER.NODESYNCH.NODESYNCHERLOCAL>        <PARAMETER NAME=ALLOWEDMETHODS VALUE=LOGIN, LOGOUT,GETSOFTWAREUPDATEURLS, RESETTRANSACTIONS, RETRIEVETRANSACTIONS,UPDATETRANSACTIONS>        <PARAMETER NAME=JNDIURL VALUE=JNP:LOCALHOST:1099>        <PARAMETER NAME=JNDICONTEXTCLASSVALUE=ORG.JNP.INTERFACES.NAMINGCONTEXTFACTORY>        <BEANMAPPING QNAME=POCNS:LOGINRESPONSE XMLNS:POCNS=URN:BEANSERVICELANGUAGESPECIFICTYPE=JAVA:COM.KIALA.KSERVER.DRIVER.NODESYNCH.SYNCHDATA.LOGINRESPONSE>        <BEANMAPPING QNAME=POCNS:LOGOUTREQUEST XMLNS:POCNS=URN:BEANSERVICELANGUAGESPECIFICTYPE=JAVA:COM.KIALA.KSERVER.DRIVER.NODESYNCH.SYNCHDATA.LOGOUTREQUEST>        <BEANMAPPING QNAME=POCNS:TRANSACTIONRESPONSEXMLNS:POCNS=URN:BEANSERVICELANGUAGESPECIFICTYPE=JAVA:COM.KIALA.KSERVER.DRIVER.NODESYNCH.SYNCHDATA.TRANSACTIONRESPONSE>        <BEANMAPPING QNAME=POCNS:TRANSACTIONITEM XMLNS:POCNS=URN:BEANSERVICELANGUAGESPECIFICTYPE=JAVA:COM.KIALA.KSERVER.DRIVER.NODESYNCH.SYNCHDATA.TRANSACTIONITEM>        <BEANMAPPING QNAME=POCNS:SOFTWAREUPDATERESPONSEXMLNS:POCNS=URN:BEANSERVICELANGUAGESPECIFICTYPE=JAVA:COM.KIALA.KSERVER.DRIVER.NODESYNCH.SYNCHDATA.SOFTWAREUPDATERESPONSE>        <BEANMAPPING QNAME=POCNS:SOFTWAREUPDATEITEMXMLNS:POCNS=URN:BEANSERVICELANGUAGESPECIFICTYPE=JAVA:COM.KIALA.KSERVER.DRIVER.NODESYNCH.SYNCHDATA.SOFTWAREUPDATEITEM>    <SERVICE><DEPLOYMENT>THE ERROR IS (AFTER HOT REDEPLOYMENT):2003-10-24 13:44:06,230 INFO [ORG.APACHE.AXIS.UTILS.BYTECODE.PARAMNAMEEXTRACTOR] AXISERROR:JAVA.IO.IOEXCEPTION: UNABLE TO LOAD BYTECODE FOR CLASSCOM.KIALA.KSERVER.DRIVER.NODESYNCH.NODESYNCHERLOCALJAVA.LANG.CLASSCASTEXCEPTION        AT ORG.APACHE.AXIS.AXISFAULT.MAKEFAULT(AXISFAULT.JAVA:129)        AT ORG.APACHE.AXIS.PROVIDERS.JAVA.JAVAPROVIDER.INVOKE(JAVAPROVIDER.JAVA:343)        ATORG.APACHE.AXIS.STRATEGIES.INVOCATIONSTRATEGY.VISIT(INVOCATIONSTRATEGY.JAVA:71)        AT ORG.APACHE.AXIS.SIMPLECHAIN.DOVISITING(SIMPLECHAIN.JAVA:150)        AT ORG.APACHE.AXIS.SIMPLECHAIN.INVOKE(SIMPLECHAIN.JAVA:120)        AT ORG.APACHE.AXIS.HANDLERS.SOAP.SOAPSERVICE.INVOKE(SOAPSERVICE.JAVA:481)        AT ORG.APACHE.AXIS.SERVER.AXISSERVER.INVOKE(AXISSERVER.JAVA:323)        AT ORG.APACHE.AXIS.TRANSPORT.HTTP.AXISSERVLET.DOPOST(AXISSERVLET.JAVA:854)        AT JAVAX.SERVLET.HTTP.HTTPSERVLET.SERVICE(HTTPSERVLET.JAVA:760)        ATORG.APACHE.AXIS.TRANSPORT.HTTP.AXISSERVLETBASE.SERVICE(AXISSERVLETBASE.JAVA:339)        AT JAVAX.SERVLET.HTTP.HTTPSERVLET.SERVICE(HTTPSERVLET.JAVA:853)        ATORG.APACHE.CATALINA.CORE.APPLICATIONFILTERCHAIN.INTERNALDOFILTER(APPLICATIONFILTERCHAIN.JAVA:247)        ATORG.APACHE.CATALINA.CORE.APPLICATIONFILTERCHAIN.DOFILTER(APPLICATIONFILTERCHAIN.JAVA:193)        ATORG.APACHE.CATALINA.CORE.STANDARDWRAPPERVALVE.INVOKE(STANDARDWRAPPERVALVE.JAVA:256)        ATORG.APACHE.CATALINA.CORE.STANDARDPIPELINE$STANDARDPIPELINEVALVECONTEXT.INVOKENEXT(STANDARDPIPELINE.JAVA:643)        ATORG.APACHE.CATALINA.CORE.STANDARDPIPELINE.INVOKE(STANDARDPIPELINE.JAVA:480)        AT ORG.APACHE.CATALINA.CORE.CONTAINERBASE.INVOKE(CONTAINERBASE.JAVA:995)        ATORG.APACHE.CATALINA.CORE.STANDARDCONTEXTVALVE.INVOKE(STANDARDCONTEXTVALVE.JAVA:191)        ATORG.APACHE.CATALINA.CORE.STANDARDPIPELINE$STANDARDPIPELINEVALVECONTEXT.INVOKENEXT(STANDARDPIPELINE.JAVA:643)        ATORG.JBOSS.WEB.TOMCAT.SECURITY.JBOSSSECURITYMGRREALM.INVOKE(JBOSSSECURITYMGRREALM.JAVA:220)        ATORG.APACHE.CATALINA.CORE.STANDARDPIPELINE$STANDARDPIPELINEVALVECONTEXT.INVOKENEXT(STANDARDPIPELINE.JAVA:641)        ATORG.APACHE.CATALINA.AUTHENTICATOR.AUTHENTICATORBASE.INVOKE(AUTHENTICATORBASE.JAVA:553)        ATORG.APACHE.CATALINA.CORE.STANDARDPIPELINE$STANDARDPIPELINEVALVECONTEXT.INVOKENEXT(STANDARDPIPELINE.JAVA:641)        ATORG.APACHE.CATALINA.VALVES.CERTIFICATESVALVE.INVOKE(CERTIFICATESVALVE.JAVA:246)        ATORG.APACHE.CATALINA.CORE.STANDARDPIPELINE$STANDARDPIPELINEVALVECONTEXT.INVOKENEXT(STANDARDPIPELINE.JAVA:641)        ATORG.JBOSS.WEB.TOMCAT.TC4.STATISTICS.CONTAINERSTATSVALVE.INVOKE(CONTAINERSTATSVALVE.JAVA:76)","SUMMARY":"CACHING LEAD AXIS TO CRASH AFTER A HOT REDEPLOYMENT","CLASS":1}
{"ID_DEFECT":"AXIS-1116","DESCRIPTION":"SUPPOSE THE FOLLOWING WSDL IS GIVEN,<TYPES>...T<XSD:ELEMENT NAME=ADDGROUPS>T<XSD:COMPLEXTYPE>T<XSD:SEQUENCE>        <XSD:ELEMENT NAME=GROUP MAXOCCURS=UNBOUNDED MINOCCURS=1 NILLABLE=TRUE TYPE=XSD:STRING>T<XSD:SEQUENCE>T<XSD:COMPLEXTYPE>T<XSD:ELEMENT>T<XSD:ELEMENT NAME=RETVAL TYPE=XSD:BOOLEAN><TYPES>T<MESSAGE NAME=ADDGROUPSREQ>TT<PART NAME=ADDGROUPREQ ELEMENT=XSD1:ADDGROUPS>T<MESSAGE>T<MESSAGE NAME=ADDGROUPSRES>TT<PART NAME=ADDGROUPRES ELEMENT=XSD1:RETVAL>T<MESSAGE><PORTTYPE NAME=EMPLOYEEDBPORT>...TT<OPERATION NAME=ADDGROUPS>TTT<INPUT MESSAGE=TNS:ADDGROUPSREQ>TTT<OUTPUT MESSAGE=TNS:ADDGROUPSRES>TT<OPERATION><PORTTYPE><BINDING NAME=EMPLOYEEDBBINDING TYPE=TNS:EMPLOYEEDBPORT>T<SOAP:BINDING STYLE=DOCUMENT TRANSPORT=HTTP:SCHEMAS.XMLSOAP.ORGSOAPHTTP>T<OPERATION NAME=ADDGROUPS>TT<SOAP:OPERATION SOAPACTION=HTTP:WWW.SUN.COMJSR172USECASESADDGROUPS>TT<INPUT>TTT<SOAP:BODY USE=LITERAL>TT<INPUT>TT<OUTPUT>TTT<SOAP:BODY USE=LITERAL>TT<OUTPUT>T<OPERATION><BINDING>ADDGROUPS OPERATION IS DETECTED AS WRAPPER STYLE, AND ITS SERVER-CONFIG.WSDD IS  <SERVICE NAME=EMPLOYEEDBPORT PROVIDER=JAVA:RPC STYLE=WRAPPED USE=LITERAL>...      <OPERATION NAME=ADDGROUPS QNAME=OPERNS:ADDGROUPS XMLNS:OPERNS=HTTP:WWW.SUN.COMJSR172APPENDIXA.XSD RETURNQNAME=RETNS:RETVAL XMLNS:RETNS=HTTP:WWW.SUN.COMJSR172APPENDIXA.XSD RETURNTYPE=RTNS:BOOLEAN XMLNS:RTNS=HTTP:WWW.W3.ORG2001XMLSCHEMA >        <PARAMETER QNAME=PNS:GROUP XMLNS:PNS=HTTP:WWW.SUN.COMJSR172APPENDIXA.XSD TYPE=TNS:STRING XMLNS:TNS=HTTP:WWW.W3.ORG2001XMLSCHEMA>      <OPERATION>...IN THIS CASE, A REQUEST SOAP MESSAGE IS OK:<?XML VERSION=1.0 ENCODING=UTF-8?><SOAPENV:ENVELOPE XMLNS:SOAPENV=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENVELOPE XMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMA XMLNS:XSI=HTTP:WWW.W3.ORG2001XMLSCHEMA-INSTANCE> <SOAPENV:BODY>  <ADDGROUPS XMLNS=HTTP:WWW.SUN.COMJSR172APPENDIXA.XSD>   <GROUP>GROUP1<GROUP>   <GROUP>GROUP2<GROUP>   <GROUP>GROUP3<GROUP>  <ADDGROUPS> <SOAPENV:BODY><SOAPENV:ENVELOPE>HOWEVER, THE CURRENT AXIS RETURNS A RESPONSE MESSAGE LIKE<?XML VERSION=1.0 ENCODING=UTF-8?><SOAPENV:ENVELOPE XMLNS:SOAPENV=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENVELOPE XMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMA XMLNS:XSI=HTTP:WWW.W3.ORG2001XMLSCHEMA-INSTANCE> <SOAPENV:BODY>  <ADDGROUPSRESPONSE XMLNS=HTTP:WWW.SUN.COMJSR172APPENDIXA.XSD>    <RETVAL>TRUE<RETVAL>  <ADDGROUPSRESPONSE> <SOAPENV:BODY><SOAPENV:ENVELOPE>THIS IS OBVIOUSLY WRONG SINCE WRAPPED STYLE IS DOCUMENT STYLE AS WELL.WS-I BASIC PROFILE 1.0 ALSO POINTS OUT THIS SITUATION WIT MORE CLARITY:WSDL 1.1 IS NOT COMPLETELY CLEAR WHAT, IN DOCUMENT-LITERAL STYLE BINDINGS, THE CHILD ELEMENT OF SOAP:BODY IS. R2712 A DOCUMENT-LITERAL BINDING MUST BE REPRESENTED ON THE WIRE AS A MESSAGE WITH A SOAP:BODY WHOSE CHILD ELEMENT IS AN INSTANCE OF THE GLOBAL ELEMENT DECLARATION REFERENCED BY THE CORRESPONDING WSDL:MESSAGE PART. (FROMHTTP:WWW.WS-I.ORGPROFILESBASIC2003-08BASICPROFILE-1.0A.HTM#REFINEMENT35113376)ACTUALLY AXIS CLIENT AND SERVER WORK O.K. BECAUSE THEY BOTH ASSUME RESPONSE POSTFIX EVEN THOUGH THEY COMMUNICATE UNDER WRAPPED STYLE.I FOUND THIS TROUBLE WHEN I MADE MY J2ME WEB SERVICES CLIENT, WHICH USES ONLY DOCLITERAL ACCORDING TO JSR-172 SPEC. IN ORDER TO IMPROVE THE INTEROPERABILITY OF AXIS BASED ON DOCLITERAL, SOME CHANGES TO RPCELEMENT ARE NECESSARY. (SEE THE ATTACHED PATCH.)WITH THE MODIFICATION, AXIS REPLYS TO THE PREVIOUS REQUEST EXAMPLE LIKE<?XML VERSION=1.0 ENCODING=UTF-8?><SOAPENV:ENVELOPE XMLNS:SOAPENV=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENVELOPE XMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMA XMLNS:XSI=HTTP:WWW.W3.ORG2001XMLSCHEMA-INSTANCE> <SOAPENV:BODY>  <RETVAL XMLNS=HTTP:WWW.SUN.COMJSR172APPENDIXA.XSD>TRUE<RETVAL> <SOAPENV:BODY><SOAPENV:ENVELOPE>NOTE: THE AUTOMATICALLY GENERATED WSDL BY SERVICE?WSDL IS STILL NOT COMPLIANT WITH THE ABOVE CORRECTION. ILL LOOK INTO THAT, AND YOUR IDEA AND HELP ARE WELCOME.","SUMMARY":"[DOCLIT] RPCELEMENT DOESNT PROCESS A RESPONSE MESSAGE OF WRAPPED STYLE","CLASS":1}
{"ID_DEFECT":"AXIS-1120","DESCRIPTION":"THE CURRENT DEFAULTTYPEMAPPINGIMPLS XML TO JAVA TYPE MAPPING IS NOT ALONG WITH THAT OF JAX RPC 1.1 SPEC. I HEARD FROM JONGJIN THAT SOMEONE SUGGESTED FOLLOWING IT UP, BUT SOME COMPATIBILITY ISSUES HAVE REMAINED SO THAT SUCH CHANGE HASNT BEEN MADE YET.ID LIKE TO PROPOSE THE FOLLOWING STEPS TOWARD THE UPCOMING FUTURE:1. PROVIDING SUPPORT_JAX_RPC_1_1 OPTION TO SWITCH THE FEATURE ON BUILD TIMETHE ATTACHED PATCH IS DESIGNED FOR THE PURPOSE. NOW THE OPTION IS TURNED OFF AND WORKS FINE WITH ALL-TESTS. ITS NO DOUBT THAT SOME OF THE TESTS FAIL IN CASE OF TURN-ON, BUT IT MUST BE HELPFUL TO THOSE WHO WANT TO TRY THE EXACT JAX-RPC 1.1 TYPE MAPPING.2. ADOPTING BY DEFAULTI THINK THIS FEATURE MAY BE CONSIDERED EXPERIMENTAL UNTIL SUFFICIENT DISCUSSION AND CONSENSUS ARE ACHIEVED. I EXPECT THE NEXT VERSION OF AXIS (E.G. 1.2) CAN CHOOSE IT AND ENCOURAGE USERS AND DEVELOPERS TO KEEP UP WITH IT.FINALLY, I FOUND THAT THE PATCH ON DEFAULTTYPEMAPPINGIMPL FROMHTTP:NAGOYA.APACHE.ORGBUGZILLASHOW_BUG.CGI?ID=24382WAS POTENTIALLY PROBLEMATIC BECAUSE OF THE ORDER GAME. I CHANGED THE ORDER OF REGISTERING OF XSD:ANYSIMPLETYPE IN FRONT OF XSD:STRING FOR RIGHT JAVA TO XML MAPPING. IM WILLING TO MAKE A SMALL PATCH ONLY FOR THIS PROBLEM WHEN NECESSARY.THANKS FOR YOUR FEEDBACK IN ADVANCE,IAS","SUMMARY":"DEFAULTTYPEMAPPINGIMPL IS NOT COMPLIANT WITH JAX-RPC 1.1","CLASS":1}
{"ID_DEFECT":"AXIS-1129","DESCRIPTION":"THE SOAP RESPONSE FROM AXIS FOR AN RPC STYLE SERVICE THAT RETURNS COMPLEXTYPES IN THE RESPONSE PLACES A NAMESPACE PREFIX ON THE COMPLEXTYPE ELEMENTS.  .NET CLIENTS CANNOT HANLDE THIS PREFIX.THERE WAS A THREAD ABOUT THIS ON THE USER LIST A WHILE BACK.  APPARENTLY IN APRIL OF 2002, THIS ISSUE WAS FIXED.  THE THREAD IS HERE:  HTTP:MARC.THEAIMSGROUP.COM?L=AXIS-USER&M=101793858607643&W=2.  BUT IN BOTH THE 1.0 AND 1.1 RELEASES, THIS ISSUE REMAINS.  AT THE REQUEST OF DAVANUM, IVE TESTED AGAINST THE LATEST IN CVS.  THE ISSUE REMAINS THERE AS WELL.I KNOW THAT THIS HAS BEEN DISCUSSED BEFORE BUT I WAS UNABLE TO FIND ANY OTHER REFERENCES IN BUGZILLA OR THE AXIS-USER ARCHIVE (SEARCHING FOR .NET, PREFIX, NAMESPACE, COMPLEXTYPE, INTEROP, ETC.).THE RESPONE THAT AXIS (COMPILED FROM THE LATEST CVS) RETURNS:<?XML VERSION=1.0 ENCODING=UTF-8?><SOAPENV:ENVELOPE XMLNS:SOAPENV=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENVELOPE XMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMA XMLNS:XSI=HTTP:WWW.W3.ORG2001XMLSCHEMA-INSTANCE> <SOAPENV:BODY>  <NS1:OP2RESPONSE SOAPENV:ENCODINGSTYLE=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING XMLNS:NS1=HTTP:DEFAULTNAMESPACE>   <NS1:OP2RETURN XSI:TYPE=NS1:MYCUSTOMTYPE>    <NS1:LOTSOFBOB XSI:TYPE=NS1:BOBTYPE>     <NS1:ASTRING XSI:TYPE=XSD:ANYSIMPLETYPE>BOBEL1<NS1:ASTRING>    <NS1:LOTSOFBOB>    <NS1:LOTSOFBOB XSI:TYPE=NS1:BOBTYPE>     <NS1:ASTRING XSI:TYPE=XSD:ANYSIMPLETYPE>BOBEL2<NS1:ASTRING>    <NS1:LOTSOFBOB>    <NS1:BOB XSI:TYPE=NS1:BOBTYPE>     <NS1:ASTRING XSI:TYPE=XSD:ANYSIMPLETYPE>BOB VALUE<NS1:ASTRING>    <NS1:BOB>    <NS1:BAR XSI:TYPE=XSD:ANYSIMPLETYPE>FOOEL1<NS1:BAR>    <NS1:BAR XSI:TYPE=XSD:ANYSIMPLETYPE>FOOEL2<NS1:BAR>    <NS1:BAR XSI:TYPE=XSD:ANYSIMPLETYPE>FOOEL3<NS1:BAR>    <NS1:FOO XSI:TYPE=XSD:ANYSIMPLETYPE>FOO VALUE<NS1:FOO>   <NS1:OP2RETURN>  <NS1:OP2RESPONSE> <SOAPENV:BODY><SOAPENV:ENVELOPE>(AS A SIDE NOTE, IM NOT SURE ABOUT THE ANYSIMPLETYPE, WITH AXIS 1.1 THE TYPE VALUES ARE THE CORRECT XSD TYPES - XSD:STRING).NOTICE THE NS1 PREFIX ON EVERY ELEMENT.  A .NET CLIENT ACCEPTS THE RESPONSE, (NOT THROWING ANY ERRORS) BUT ALL VALUES ARE NULL.  TAKING OUT THE PREFIXES, .NET CORRECTLY UNDERSTANDS THE RESPONSE.  I DONT KNOW WHETHER PREFIXES OR NO PREFIXES IN THE SOAP MESSAGE IS CORRECT OR IF BOTH ARE.  AT THIS POINT THOUGH, WE ARE UNABLE TO INVOKE ANY RPC SERVICE THAT RETURNS A COMPLEX TYPE HOSTED BY AXIS WITH A .NET CLIENT.","SUMMARY":"COMPLEXTYPE IN SOAP RESPONSE HAS NAMESPACE PREFIX, CHOKES .NET CLIENTS","CLASS":1}
{"ID_DEFECT":"AXIS-1139","DESCRIPTION":"THE WSDL FILE CONTAINS :**************************<XS:COMPLEXTYPE NAME=CHANGEREQUESTADJUSTMENT>T<XS:SEQUENCE>TT<XS:ELEMENT MINOCCURS=0 NAME=ORDERDATE TYPE=BO:ORDERDATEDT>T<XS:SEQUENCE><XS:COMPLEXTYPE><XS:SIMPLETYPE NAME=ORDERDATEDT>T<XS:RESTRICTION BASE=XS:DATETIME><XS:SIMPLETYPE>**************************THE JAVA PROXIES ARE GENERATED PROPERLY WITHOUT ANY ERRORS USING THE COMMAND JAVA ORG.APACHE.AXIS.WSDL.WSDL2JAVA.THEN ON TOP OF THE GENERATED PROXIES I MAKE A JAVA CLIENT TO RUN THE WEBSERVICE.I TRY TO SET THE ORDERDATE BY THE FOLLOWING CODE:**************************TCALENDAR CAL = CALENDAR.GETINSTANCE();TCAL.SET(2003, 10, 20, 13, 56, 00);TADJUSTMENT.SETORDERDATE(NEW ORDERDATEDT (CAL));**************************BUT IN THE SOAP MESSAGE THE DATE GOES AS SHOWN BELOW:**************************<ORDERDATE>JAVA.UTIL.GREGORIANCALENDAR[TIME=?,AREFIELDSSET=FALSE,AREALLFIELDSSET=TRUE,LENIENT=TRUE,ZONE=SUN.UTIL.CALENDAR.ZONEINFO[ID=&QUOT;GMT+05:30&QUOT;,OFFSET=19800000,DSTSAVINGS=0,USEDAYLIGHT=FALSE,TRANSITIONS=0,LASTRULE=NULL],FIRSTDAYOFWEEK=1,MINIMALDAYSINFIRSTWEEK=1,ERA=1,YEAR=2003,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=5,DAY_OF_MONTH=20,DAY_OF_YEAR=330,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=5,HOUR_OF_DAY=13,MINUTE=56,SECOND=0,MILLISECOND=813,ZONE_OFFSET=19800000,DST_OFFSET=0]<ORDERDATE> ***************************I TRIED TO CHANGE THE WSDL BY DOING THE FOLOWING :**************************T<XS:ELEMENT MINOCCURS=0 NAME=ORDERDATE TYPE=XS:DATETIME>**************************THEN REGENERATED THE PROXIES.SO IN THE CLIENT THE CODE CHANGED AS FOLLOWS:**************************TCALENDAR CAL = CALENDAR.GETINSTANCE();TCAL.SET(2003, 10, 20, 13, 56, 00);TADJUSTMENT.SETORDERDATE(CAL);**************************IN THIS CASE THE DATE WAS PASSED PROPERLY AND THERE WAS NO ERROR. THE PROBLEM HERE IS WE NEED TO GO WITH THE FIRST DEFINATION  OF ORDERDATE WITH THE RESTRICTION SINCE THE WSDL IS AUTO GENERATED AND USES A TEMPLATE .","SUMMARY":"DATETIME NOT PARSED PROPERLY IN THE SOAP MESSAGE","CLASS":1}
{"ID_DEFECT":"AXIS-1146","DESCRIPTION":"WHEN CALLING INVOKE() TO CREATE THE SOAP ENVELOPE AND SEND IT TO THE TARGET WEBSERVICE, FOR EACH BODY ELEMENT AFTER THE SERVICE TAG, AXIS GENERATES AN EMPTYXMLNS PARAMETER FOLLOWED BY THE CORRECT NAMESPACE AND TYPE.  THIS BREAKSWEBLOGICS SOAP CONTAINER. IF I TEST THE XML AGAINST WEBLOGIC CONTAINER WITHTHEIR ONLINE XML TEST TOOL, AND REMOVE THE EMPTY NAMESPACE PARAMS, IT WORKS FINE.I TRIED SETTING SEND_TYPE_ATTR PROPERTY TO FALSE BUT IT DOES NOT SEEM TO HAVEANY EFFECT ON THE GENERATED XML.EXAMPLE:<SOAPENV:BODY><SERVICE_NAME XMLNS=HTTP:MY.NAMESPACEPATH><COMHDR XMLNS= XMLNS:NS1=HTTP:MY.NAMESPACEPATH            XSI:TYPE=NS1:COMMONHEADER>","SUMMARY":"CALL INVOKE() METHOD GENERATES SOAP ENV WITH EMPTY XMLNS ELEMENTS","CLASS":1}
{"ID_DEFECT":"AXIS-1152","DESCRIPTION":"SEE THE FOLLOWING WSDL SNIPPET(FOR FULL WSDL SEE THE ATTACHMENTS)***************<XS:COMPLEXTYPE NAME=SYNCALLRESPONSEUNITSZENOSH><XS:SEQUENCE><XS:CHOICE>   <XS:SEQUENCE>      <XS:ELEMENT MINOCCURS=0 NAME=PREVIOUSVALUES            TYPE=BO:PREVIOUSVALUESMAIN>      <XS:GROUP REF=AVMAIN>   <XS:SEQUENCE>   <XS:SEQUENCE>      <XS:ELEMENT NAME=PREVIOUSVALUES TYPE=BO:PREVIOUSVALUESMAIN>      <XS:GROUP REF=AVMAIN>   <XS:SEQUENCE>   <XS:SEQUENCE>      <XS:ELEMENT NAME=PREVIOUSVALUES TYPE=BO:PREVIOUSVALUESMAIN>   <XS:SEQUENCE><XS:CHOICE><XS:SEQUENCE>............<XS:COMPLEXTYPE>*****END**********IF YOU SEE - THE TAG PREVIOUSVALUES IS REPEATED THRICE IN THE XS:CHOICE , BUT ALL 3 OCCURANCES ARE IN DIFFERENT SEQUENCES.SO ITS A VALID XSD.I GENERATE THE TYPE SAFE PROXIES OF THE WSDL USING JAVA ORG.APACHE.AXIS.WSDL.WSDL2JAVA. THE PROXIES ARE GENERATED WITHOUT ERROR.WHEN I TRY TO COMPILE THE JAVA FILES - I GET THE FOLLOWING ERROR REDECLARATION OF MEMBER PREVIOUSVALUES . THIS ERROR COMES DUE TO THE FACT THAT THE PREVIOUSVALUES IS DECLARED THRICE IN THE SYNCALLRESPONSEUNITSZENOSH , SYNCCHANGESRESPONSEUNITSZENOSH , SYNCONERESPONSEUNITSZENOSH CLASSES . ANY MORE INFORMATION NEEDED - PLEASE LET ME KNOW ON ZPATEL@BAAN.COM .","SUMMARY":"SAME ELEMENT IN DIFFERENT XS:SEQUENCE NOT ALLOWED IN XS:CHOICE","CLASS":1}
{"ID_DEFECT":"AXIS-1157","DESCRIPTION":"OVERVIEW DESCRIPTION: ---------------------PROBLEM:CONSTRUCTION OF QNAMES (IN GENERATED ENUMERATED TYPES, AT LEAST) IS DONE BYMERELY PASSING THE CONSTANT QNAME STRING VALUE TO THE QNAME CONSTRUCTOR, WHICHINTERPRETS IT AS A LOCAL NAME, CONSEQUENTLY THE NAMESPACE URI IS EMPTY ().EXAMPLE:GIVEN THE SCHEMA TYPE USAGETYPE A RESTRICTION OF XSD:QNAME,USAGETYPE.JAVA (WSP) CONSTRUCTS QNAME INSTANCES WITH STRING VALUES  PASSED TO THE QNAME CONSTRUCTOR AS IS (<PREFIX>:<LOCAL NAME>) INSTEAD OF BEING PARSED IN ORDER TO EXTRACT THE NAMESPACE URI (FROM SOME MAPPING RECORDED BY THE IN-MEMORY SCHEMA OBJECT MODEL) AND THE LOCAL NAME. EXAMPLE INPUT SCHEMA--------------------T<XS:SIMPLETYPE NAME=USAGETYPE>TT[...]TT<XS:RESTRICTION BASE=XS:QNAME>TTT<XS:ENUMERATION VALUE=WSP:REQUIRED>TTT<XS:ENUMERATION VALUE=WSP:OPTIONAL>TTT<XS:ENUMERATION VALUE=WSP:REJECTED>TTT<XS:ENUMERATION VALUE=WSP:IGNORED>TTT<XS:ENUMERATION VALUE=WSP:OBSERVED>TT<XS:RESTRICTION>T<XS:SIMPLETYPE>THE FULL SCHEMA IS AT: HTTP:SCHEMAS.XMLSOAP.ORGWS200212POLICYGENERATED JAVA CODE:--------------------PACKAGE ORG.XMLSOAP.POLICY;PUBLIC CLASS USAGETYPE IMPLEMENTS JAVA.IO.SERIALIZABLE     PRIVATE JAVAX.XML.NAMESPACE.QNAME _VALUE_;[...]    PUBLIC STATIC FINAL JAVAX.XML.NAMESPACE.QNAME _VALUE1 = NEWJAVAX.XML.NAMESPACE.QNAME(WSP:REQUIRED);    PUBLIC STATIC FINAL JAVAX.XML.NAMESPACE.QNAME _VALUE2 = NEWJAVAX.XML.NAMESPACE.QNAME(WSP:OPTIONAL);[...]    PUBLIC STATIC USAGETYPE FROMSTRING(JAVA.LANG.STRING VALUE)          THROWS JAVA.LANG.ILLEGALSTATEEXCEPTION         TRY             RETURN FROMVALUE(NEW JAVAX.XML.NAMESPACE.QNAME(VALUE));         CATCH (EXCEPTION E)             THROW NEW JAVA.LANG.ILLEGALSTATEEXCEPTION();            [...]CONSEQUENCES:-------------  THIS WILL LEAD TO RUN-TIME DESERIALIZATION ERRORS, FOR INSTANCE WHEN THE   PREFIX-TO-NAMESPACE ASSIGNEMENT IS DIFFERENT IN THE XML DOCUMENTPAYLOAD   RECEIVED THAN IN THE SCHEMA USED TO GENERATE THE JAVA CODE ON THE   RECEIVING SIDE.   ALSO, FOR THE SAME REASONS, THE FROMSTRING(STRING) STATIC METHODS SHOULD BE   DEPRECATED IN QNAME-BASED ENUMERATED TYPES IN FAVOR OF METHODS LIKE:  FROMQNAME(QNAME) OR FROM(STRING NSURI, STRING LOCALNAME).PROPOSALEXPECTED BEHAVIOR--------------------------THE CODE  GENERATOR SHOULD INSERT THE NAMESPACE URI FROM THE PREFIX READ IN THE QNAME VALUE (IN THE SCHEMA) SO THAT THE GENERATED CODE USE IT WHEN CONSTRUCTINGTHE QNAME. AS IN:     NEW QNAME(HTTP:SCHEMAS.XMLSOAP.ORGWS200212POLICY,REQUIRED);       INSTEAD OF      NEW QNAME(WSP:REQUIRED);BUILD DATE: -----------I BUILD SOURCE FROM A CVS CHECK OUT MADE ON 12102003, AROUND 2:00 AM","SUMMARY":"QNAME CONSTANTS CONSTRUCTED WITHOUT SCHEMA-SPECIFIED NAMESPACE","CLASS":1}
{}
{"ID_DEFECT":"AXIS-1162","DESCRIPTION":"AS MESSAGECONTEXT.GETCURRENTMESSAGECONTEXT ANDAXISENGINE.GETCURRENTMESSAGECONTEXT DEPEND ON THREADLOCAL VARIABLES, SEEMS LIKEONE CAN NEVER EMBED A CLIENT WITHIN A SERVER WITHOUT MESSING IT ALL UP. E.G., APROXYING SERVER MIGHT HAVE AN EMBEDDED CLIENT IN ORDER TO FORWARD REQUESTS.","SUMMARY":"A SERVER CAN NEVER EMBED A CLIENT (E.G. FOR PROXYING) WITHOUT MESSING UP MESSAGECONTEXT","CLASS":1}
{"ID_DEFECT":"AXIS-1170","DESCRIPTION":"WHEN A COMPLEXTYPE IS SPECIFIED WITH MIXED=TRUE, WSDL2JAVA GENERATES NOACCESS METHOD FOR THE TEXT CONTENTS OF THE CORRESPONDING ELEMENT.","SUMMARY":"MIXED=TRUE ON COMPLEX TYPES NOT SUPPORTED","CLASS":1}
{"ID_DEFECT":"AXIS-1175","DESCRIPTION":"WHEN ORG.APACHE.AXIS.MESSAGE IS CONSTRUCTED FROM AN INPUTSTREAM THAT IS EMPTY,NO EXCEPTION IS THROWN.  HOWEVER, WHEN THE GETSOAPENVELOPE() METHOD IS CALLED, THEN THE FOLLOWING SAX EXCEPTION GETS THROWN:ORG.XML.SAX.SAXPARSEEXCEPTION: PREMATURE END OF FILE.THIS BEHAVIOR IS A PROBLEM, BECAUSE IT CAUSES THE AXIS (SEE: ORG.APACHE.AXIS.CLIENT LINE 2583) CLIENT OBJECT TO CHOKE ON HTTP RESPONSES TO SOAP REQUESTS WHEN THERE IS NO SOAP RESPONSE.  THIS SCENARIO HAPPENS WHENEVER THE ORG.APACHE.AXIS.CLIENT IS USED TO CALL A ONE-WAY SOAP SERVICE.  PER WS-I, THE ONE-WAY SOAP SERVICE SHOULD *NOT* INCLUDE ANY SOAP ENVELOPE IN THE HTTP RESPONSE.THIS CODE SAMPLE PRODUCES THE ERROR:    BYTE[] BUF;    JAVA.IO.BYTEARRAYINPUTSTREAM INSTR;    ORG.APACHE.AXIS.MESSAGE MSG;    JAVAX.XML.SOAP.SOAPENVELOPE ENV;    BUF = (NEW STRING()).GETBYTES();    INSTR = NEW JAVA.IO.BYTEARRAYINPUTSTREAM(BUF);    MSG = NEW ORG.APACHE.AXIS.MESSAGE(INSTR);    TRY       ENV = MSG.GETSOAPENVELOPE();     CATCH (EXCEPTION E)       LOG.ERROR((NEW UTILITIES()).STACKTRACE(E));        SYSTEM.EXIT(1);HERE IS THE STACK TRACE:ORG.XML.SAX.SAXPARSEEXCEPTION: PREMATURE END OF FILE.TAT ORG.APACHE.AXIS.AXISFAULT.MAKEFAULT(AXISFAULT.JAVA:129)TAT ORG.APACHE.AXIS.SOAPPART.GETASSOAPENVELOPE(SOAPPART.JAVA:543)TAT ORG.APACHE.AXIS.MESSAGE.GETSOAPENVELOPE(MESSAGE.JAVA:376)TAT COM.JAVECTOR.CHAP6.WSMF.TESTRELIABLECLIENT.MAIN(TESTRELIABLECLIENT.JAVA:71)TAT SUN.REFLECT.NATIVEMETHODACCESSORIMPL.INVOKE0(NATIVE METHOD)TAT SUN.REFLECT.NATIVEMETHODACCESSORIMPL.INVOKE(NATIVEMETHODACCESSORIMPL.JAVA:39)TAT SUN.REFLECT.DELEGATINGMETHODACCESSORIMPL.INVOKE(DELEGATINGMETHODACCESSORIMPL.JAVA:25)TAT JAVA.LANG.REFLECT.METHOD.INVOKE(METHOD.JAVA:324)TAT ORG.APACHE.TOOLS.ANT.TASKDEFS.EXECUTEJAVA.RUN(EXECUTEJAVA.JAVA:208)TAT ORG.APACHE.TOOLS.ANT.TASKDEFS.EXECUTEJAVA.EXECUTE(EXECUTEJAVA.JAVA:150)TAT ORG.APACHE.TOOLS.ANT.TASKDEFS.JAVA.RUN(JAVA.JAVA:443)TAT ORG.APACHE.TOOLS.ANT.TASKDEFS.JAVA.EXECUTEJAVA(JAVA.JAVA:163)TAT ORG.APACHE.TOOLS.ANT.TASKDEFS.JAVA.EXECUTE(JAVA.JAVA:108)TAT ORG.APACHE.TOOLS.ANT.TASK.PERFORM(TASK.JAVA:341)TAT ORG.APACHE.TOOLS.ANT.TARGET.EXECUTE(TARGET.JAVA:309)TAT ORG.APACHE.TOOLS.ANT.TARGET.PERFORMTASKS(TARGET.JAVA:336)TAT ORG.APACHE.TOOLS.ANT.PROJECT.EXECUTETARGET(PROJECT.JAVA:1339)TAT ORG.APACHE.TOOLS.ANT.PROJECT.EXECUTETARGETS(PROJECT.JAVA:1255)TAT ORG.APACHE.TOOLS.ANT.MAIN.RUNBUILD(MAIN.JAVA:609)TAT ORG.APACHE.TOOLS.ANT.MAIN.START(MAIN.JAVA:196)TAT ORG.APACHE.TOOLS.ANT.MAIN.MAIN(MAIN.JAVA:235)CAUSED BY: ORG.XML.SAX.SAXPARSEEXCEPTION: PREMATURE END OF FILE.TAT ORG.APACHE.XERCES.PARSERS.ABSTRACTSAXPARSER.PARSE(ABSTRACTSAXPARSER.JAVA:1139)TAT JAVAX.XML.PARSERS.SAXPARSER.PARSE(SAXPARSER.JAVA:345)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZATIONCONTEXTIMPL.PARSE(DESERIALIZATIONCONTEXTIMPL.JAVA:242)TAT ORG.APACHE.AXIS.SOAPPART.GETASSOAPENVELOPE(SOAPPART.JAVA:538)T... 19 MORE","SUMMARY":"MESSAGE.GETSOAPENVELOPE() FAILS WHEN MESSAGE IS CONSTRUCTED FROM EMPTY INPUTSTREAM","CLASS":1}
{"ID_DEFECT":"AXIS-1184","DESCRIPTION":"THE ORG.APACHE.AXIS.CLIENT.CALL DUMPS THE SOAP REQUEST TO BE SENT TO THE LOGS,IF THE DEBUG LEVEL HAS BEEN ENABLED.  IN OTHER WORDS, THE SOAP REQUEST MUST BESERIALIZED (FOR THE FIRST TIME).   THE DEBUG DUMP OCCURS APPROXIMATELY ON LINE2655 IN CALL.JAVA BY THE WAY.  HOWEVER, THE ACTUAL TRANSPORT (HTTP IN THIS CASE)ALSO SERIALIZES THE SOAP REQUEST (NOW FOR THE SECOND TIME DURING A SINGLE SOAPCALL).  UNFORTUNATELY, IT SEEMS THAT ONLY THE FIRST SERIALIZATION PRODUCES ALEGITIMATE SOAP REQUEST; IN THE SECOND RUN, USER SPECIFIED ATTRIBUTES INSIDESOAP HEADERS GET ADDED _TWICE_ TO THE PRODUCED XML! FOR EXAMPLE:<SOAPENV:HEADER>  <NS1:HEADERXYZ SOAPENV:ACTOR=HTTP:SCHEMAS.XMLSOAP.ORGSOAPACTORNEXT SOAPENV:MUSTUNDERSTAND=0 MYERROR=FALSE MYERROR=FALSE  <-- TWICE!XMLNS:NS1=HTTP:FOOBAR.ORGFOO#>FOO  <NS1:HEADERXYZ><SOAPENV:HEADER>A QUICK LOOK TO THE CODE SUGGESTS THATORG.APACHE.AXIS.ENCODING.SER.BEANSERIALIZERS GETOBJECTATTRIBUTES() MODIFIES THEATTRIBUTES INSTANCE SERIALIZE() GETS BY ADDING THE ATTRIBUTES OF THE VALUEOBJECT THERE _REGARDLESS_ WHETHER THE ATTRIBUTES ARE ALREADY INSIDE THEATTRIBUTES INSTANCE.  MOREOVER, THE ATTRIBUTES INSTANCE IS THE VERY SAME IN BOTHSERIALIZATION RUNS, AS ITS STORED INTO THE SAME MESSAGEELEMENT INSTANCE. AS ARESULT, ONLY THE FIRST SERIALIZATION RESULTS IN A VALID OUTPUT.CVS SNAPSHOT CHECKED OUT ON 20040113 WAS USED.","SUMMARY":"SERIALIZATION OF HEADERS IN A SOAP REQUEST FAILS IF DEBUGS ARE ENABLED","CLASS":1}
{"ID_DEFECT":"AXIS-1185","DESCRIPTION":"THE METHOD GETDATASIZE() IN ORG.APACHE.AXIS.ATTACHMENTS.DIMEBODYPART THROWS ANIOEXCEPTION WHEN THE RESET() IS CALLED ON THE INPUTSTREAM BECAUSE NO MARK HASBEEN SET.","SUMMARY":"IOEXCEPTION IN SENDING A DIME ATTACHMENT","CLASS":1}
{"ID_DEFECT":"AXIS-1191","DESCRIPTION":"THE CURRENT VERSION OF JAX-RPC SAYS:THERE ARE A NUMBER OF CASES IN WHICH A BUILT-IN SIMPLE XML DATA TYPE MUST BEMAPPED TO THE CORRESPONDING JAVA WRAPPER CLASS FOR THE JAVA PRIMITIV TYPE:* AN ELEMENT DECLARATION WITH THE NILLABLE ATTRIBUTE SET TO TRUE* AN ELEMENT DECLARATION WITH THE MINOCCURS ATTRIBUTE SET TO 0 (ZERO)  AND THE MAXOCCURS ATTRIBUTE SET TO 1 (ONE)OR ABSENT;* AN ATTRIBUTE DECLARATION WITH THE USE ATTRIBUTE SET TO OPTIONAL OR  ABSENT AND CARRYING NEITHER THE DEFAULT NOR THE FIXED ATTRIBUTE;HOWEVER, THIS DOESNT SEEM TO BE THE APPROACH THAT AXIS TAKES. WHEN THE GLOBAL ELEMENT DOEXAMPLE IS REFERENCED, WSDL2JAVA MAPS THE LOCAL ELEMENT VALUE2 TO THE PRIMITIVE TYPE LONG, INSTEAD OF MAPPING IT TO JAVA.LANG.LONG, AS IT SHOULD BE.  <ELEMENT NAME=OUT TYPE=XSD:LONG>  <ELEMENT NAME=DOEXAMPLE>    <COMPLEXTYPE>      <SEQUENCE>        <ELEMENT NAME=VALUE1 NILLABLE=TRUE MAXOCCURS=UNBOUNDEDTYPE=XSD:BASE64BINARY>        <ELEMENT NAME=VALUE2 MINOCCURS=0 MAXOCCURS=1REF=TYPENS:OUT>      <SEQUENCE>    <COMPLEXTYPE>  <ELEMENT>WHEN THE ATTACHED WSDL DOCUMENT IS FED TO WSDL2JAVA, THE FOLLOWING SERVICE ENDPOINT INTERFACE IS GENERATED:PUBLIC INTERFACE EXAMPLESOAP EXTENDS JAVA.RMI.REMOTE     PUBLIC VOID DOEXAMPLE(BYTE[][] VALUE1,                          LONG OUT,                          JAVAX.XML.RPC.HOLDERS.BYTEARRAYHOLDER RET,                          JAVAX.XML.RPC.HOLDERS.LONGHOLDER OUT2)    THROWS JAVA.RMI.REMOTEEXCEPTION;WHEREAS THE PROPER MAPPING IS:PUBLIC INTERFACE EXAMPLESOAP EXTENDS JAVA.RMI.REMOTE     PUBLIC VOID DOEXAMPLE(BYTE[][] VALUE1,                          JAVA.LANG.LONG OUT,                          JAVAX.XML.RPC.HOLDERS.BYTEARRAYHOLDER RET,                          JAVAX.XML.RPC.HOLDERS.LONGWRAPPERHOLDER OUT2)    THROWS JAVA.RMI.REMOTEEXCEPTION;","SUMMARY":"INCORRECT MAPPING OF LOCAL ELEMENTS WITH MINOCCURS=0 MAXOCCURS=1","CLASS":1}
{"ID_DEFECT":"AXIS-1192","DESCRIPTION":"WHEN TRIED TO DESERIALIZE A DATE OF JAVA.SQL.DATE THIS ERROR OCCURES.NOTE. IN THE CLIENT_CONFIG.WSDD AND IN THE SERVER_CONFIG.WSDD THE TYPE MAPPING FOR THE DATE IS GIVEN AS <TYPEMAPPING ENCODINGSTYLE=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING SERIALIZER=ORG.APACHE.AXIS.ENCODING.SER.DATESERIALIZERFACTORY DESERIALIZER=ORG.APACHE.AXIS.ENCODING.SER.DATEDESERIALIZERFACTORY TYPE=JAVA:JAVA.SQL.DATE QNAME=NS16:SQLDATE XMLNS:NS16=HTTP:WWW.TESTER.COM>AND THE SERIALIZATION WORKS FINE, BELOW IS A PART OF THE GENERATED MESSAGE<CREATIONDATE XSI:TYPE=XSD:DATE>2003-08-05<CREATIONDATE><DELETEENABLED XSI:TYPE=XSD:BOOLEAN>TRUE<DELETEENABLED><DIRTY XSI:TYPE=XSD:BOOLEAN>TRUE<DIRTY><DISTRIBUTIONCENTERID XSI:TYPE=XSD:STRING XSI:NIL=TRUE><EMAIL XSI:TYPE=XSD:STRING>EMAIL@1.COM<EMAIL>THE STACKTRACE2004-01-17 01:36:29,290 ERROR ORG.APACHE.AXIS.ENCODING.SER.BEANPROPERTYTARGET  - COULD NOT CONVERT JAVA.UTIL.DATE TO BEAN FIELD CREATIONDATE, TYPE JAVA.SQL.DATE2004-01-17 01:36:29,290 ERROR ORG.APACHE.AXIS.CLIENT.CALL  - EXCEPTION:JAVA.LANG.ILLEGALARGUMENTEXCEPTION: ARGUMENT TYPE MISMATCHTAT ORG.APACHE.AXIS.ENCODING.SER.BEANPROPERTYTARGET.SET(BEANPROPERTYTARGET.JAVA:181)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZERIMPL.VALUECOMPLETE(DESERIALIZERIMPL.JAVA:282)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZERIMPL.ENDELEMENT(DESERIALIZERIMPL.JAVA:541)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZATIONCONTEXTIMPL.ENDELEMENT(DESERIALIZATIONCONTEXTIMPL.JAVA:1015)TAT ORG.APACHE.AXIS.MESSAGE.SAX2EVENTRECORDER.REPLAY(SAX2EVENTRECORDER.JAVA:204)TAT ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT.PUBLISHTOHANDLER(MESSAGEELEMENT.JAVA:722)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZERIMPL.STARTELEMENT(DESERIALIZERIMPL.JAVA:404)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZATIONCONTEXTIMPL.STARTELEMENT(DESERIALIZATIONCONTEXTIMPL.JAVA:976)TAT ORG.APACHE.AXIS.MESSAGE.SAX2EVENTRECORDER.REPLAY(SAX2EVENTRECORDER.JAVA:198)TAT ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT.PUBLISHTOHANDLER(MESSAGEELEMENT.JAVA:722)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZERIMPL.STARTELEMENT(DESERIALIZERIMPL.JAVA:404)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZATIONCONTEXTIMPL.STARTELEMENT(DESERIALIZATIONCONTEXTIMPL.JAVA:976)TAT ORG.APACHE.AXIS.MESSAGE.SAX2EVENTRECORDER.REPLAY(SAX2EVENTRECORDER.JAVA:198)TAT ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT.PUBLISHTOHANDLER(MESSAGEELEMENT.JAVA:722)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZERIMPL.STARTELEMENT(DESERIALIZERIMPL.JAVA:404)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZATIONCONTEXTIMPL.STARTELEMENT(DESERIALIZATIONCONTEXTIMPL.JAVA:976)TAT ORG.APACHE.AXIS.MESSAGE.SAX2EVENTRECORDER.REPLAY(SAX2EVENTRECORDER.JAVA:198)TAT ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT.PUBLISHTOHANDLER(MESSAGEELEMENT.JAVA:722)TAT ORG.APACHE.AXIS.MESSAGE.RPCELEMENT.DESERIALIZE(RPCELEMENT.JAVA:323)TAT ORG.APACHE.AXIS.MESSAGE.RPCELEMENT.GETPARAMS(RPCELEMENT.JAVA:347)TAT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2272)TAT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2171)TAT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2196)","SUMMARY":"JAVA.SQL.DATE DESERIALIZATION PROBLEM","CLASS":1}
{"ID_DEFECT":"AXIS-1203","DESCRIPTION":"I REDIRECT THE INPUTSTREAM I GET FROM URLCONNECTION.GETINPUTSTREAM() TOJAVAX.XML.SOAP.SOAPMESSAGE.CREATEATTACHMENTPART() AS IN THE EXAMPLE BELOW.    FINAL SOAPMESSAGE SOAPMSG = MSGCONTEXT.GETRESPONSEMESSAGE();    FINAL URL FILEURL = NEW URL(FILESERVERURLCONTEXT, SPEC);    FINAL URLCONNECTION CONNECTION = FILEURL.OPENCONNECTION();    CONNECTION.CONNECT();    FINAL INPUTSTREAM FILESTREAM = CONNECTION.GETINPUTSTREAM();    FINAL JAVAX.XML.SOAP.ATTACHMENTPART ATTACHPART =SOAPMSG.CREATEATTACHMENTPART(FILESTREAM,        APPLICATIONOCTET-STREAM);    SOAPMSG.ADDATTACHMENTPART(ATTACHPART);FOR SOME REASON, CREATEATTACHMENTPART OR ADDATTACHMENTPART (PROBABLY THE FORMER)MESS UP LARGER ATTACHMENTS BY REPLACING PARTS OF THE CONTENT WITH NULL-BYTES.FOR EXAMPLE, THE FIRST 2920 BYTES MAY COME OUT CORRECT, AND THEN A COUPLEHUNDRED OR THOUSAND BYTES ARE REPLACED BY NULL VALUES, AFTER WHICH NON-NULLBYTES APPEAR AGAIN.HOWEVER, THIS ONLY OCCURS WHEN DIRECTLY FEEDING THE INPUTSTREAM FROMURLCONNECTION.GETINPUTSTREAM() TO CREATEATTACHMENTPART(). IF I FIRST STORE THEURLCONNECTIONS INPUTSTREAM IN A FILE AND THEN FEED THE FILE TOCREATEATTACHMENTPART(),  THE PROBLEM DISAPPEARS.THIS PROBLEM ALSO DEPENDS ON THE FILE SIZE. FOR EXAMPLE, A 14KB FILE AND A FEWSMALLER FILES CAME THROUGH ALRIGHT, BUT A 153KB AND A 61KB FILES WERE BROKEN.","SUMMARY":"ATTACHMENTS: CREATEATTACHMENTPART BROKEN (OR SETCONTENT)","CLASS":1}
{"ID_DEFECT":"AXIS-1217","DESCRIPTION":"THE AXIS ENGINE IGNORES THE QUALIFYING NAMESPACE OF AN OPERATION WHEN IT PROCESSES THE OPERATION.  FOR EXAMPLE, THE CLIENT CODE OF SAMPLESUSERGUIDEEXAMPLE3 SETS THE OPERATION NAME TO SERVICEMETHOD QUALIFIED BY THE NAMESPACE MYSERVICE.  HOWEVER, ACCORDING TO THE WSDL FILE, THE CORRECT NAMESPACE FOR QUALIFYING THE OPERATION IS HTTP:EXAMPLE3.USERGUIDE.SAMPLES.  TO CORRECTLY FOLLOW THE WSDL SPECIFICATION, AXIS SHOULD REJECT THE REQUEST SINCE IT IS NOT QUALIFIED BY THE APPROPRIATE NAMESPACE.","SUMMARY":"AXIS ACCEPTS CLIENT REQUESTS FOR OPERATIONS THAT ARE QUALIFIED WITH THE INCORRECT NAMESPACE","CLASS":1}
{"ID_DEFECT":"AXIS-1227","DESCRIPTION":"JBOSS IS INFAMOUS FOR ITS UNIFIEDCLASSLOADER, WHICH DOESNT SEEM TO BEHAVE LIKEA TYPICAL J2EE CLASSLOADER.  IVE TRIED NUMEROUS JBOSS CONFIGURATIONS, BUT NONEOF THEM SEEM TO DO EVERYTHING THAT I NEED.IVE CHECKED THEIR BUG REPORTS AND THEY SEEM TO THINK ITS A PROBLEM WITH THEAPACHE GUYS CACHING CLASSES.I AM DEPLOYING SESSION BEANS IN AN  EAR FILE, AND USING THE JAVA:EJB PROVIDER TOINVOKE THEM AS WEB SERVICES.  THIS WORKS GREAT ON A FRESH DEPLOYMENT WITH ANEWLY STARTED SERVER, BUT WHEN I REDEPLOY, I FREQUENTLY HAVE PROBLEMS WITHNULLPOINTEREXCEPTIONS.DOES ANYONE HAVE A THOUGHT OR SUGGESTION ABOUT THIS PROBLEM?  I WOULD BE WILLINGTO HELP OUT WITH TESTING IN JBOSS.THANKS FOR ANY HELP OR INFO THAT YOU CAN PROVIDE!JAVA.LANG.NULLPOINTEREXCEPTION    ATORG.JBOSS.MX.LOADING.UNIFIEDCLASSLOADER.FINDRESOURCES(UNIFIEDCLASSLOADER.JAVA:374)    AT JAVA.LANG.CLASSLOADER.GETRESOURCES(CLASSLOADER.JAVA:825)    AT JAVA.LANG.CLASSLOADER.GETRESOURCES(CLASSLOADER.JAVA:821)    AT JAVA.LANG.CLASSLOADER.GETRESOURCES(CLASSLOADER.JAVA:821)    AT ORG.APACHE.COMMONS.DISCOVERY.JDK.JDK12HOOKS.GETRESOURCES(JDK12HOOKS.JAVA:150)    ATORG.APACHE.COMMONS.DISCOVERY.RESOURCE.DISCOVERRESOURCES$1.GETNEXTRESOURCES(DISCOVERRESOURCES.JAVA:153)    ATORG.APACHE.COMMONS.DISCOVERY.RESOURCE.DISCOVERRESOURCES$1.GETNEXTRESOURCE(DISCOVERRESOURCES.JAVA:129)    ATORG.APACHE.COMMONS.DISCOVERY.RESOURCE.DISCOVERRESOURCES$1.HASNEXT(DISCOVERRESOURCES.JAVA:116)    ATORG.APACHE.COMMONS.DISCOVERY.RESOURCE.NAMES.DISCOVERNAMESINFILE$1.GETNEXTCLASSNAMES(DISCOVERNAMESINFILE.JAVA:186)    ATORG.APACHE.COMMONS.DISCOVERY.RESOURCE.NAMES.DISCOVERNAMESINFILE$1.GETNEXTCLASSNAME(DISCOVERNAMESINFILE.JAVA:170)    ATORG.APACHE.COMMONS.DISCOVERY.RESOURCE.NAMES.DISCOVERNAMESINFILE$1.HASNEXT(DISCOVERNAMESINFILE.JAVA:157)    ATORG.APACHE.COMMONS.DISCOVERY.RESOURCE.NAMES.NAMEDISCOVERERS$1.GETNEXTITERATOR(NAMEDISCOVERERS.JAVA:143)    ATORG.APACHE.COMMONS.DISCOVERY.RESOURCE.NAMES.NAMEDISCOVERERS$1.HASNEXT(NAMEDISCOVERERS.JAVA:126)    ATORG.APACHE.COMMONS.DISCOVERY.RESOURCE.CLASSES.RESOURCECLASSDISCOVERIMPL$1.GETNEXTRESOURCE(RESOURCECLASSDISCOVERIMPL.JAVA:159)    ATORG.APACHE.COMMONS.DISCOVERY.RESOURCE.CLASSES.RESOURCECLASSDISCOVERIMPL$1.HASNEXT(RESOURCECLASSDISCOVERIMPL.JAVA:147)    ATORG.APACHE.AXIS.CONFIGURATION.ENGINECONFIGURATIONFACTORYFINDER$1.RUN(ENGINECONFIGURATIONFACTORYFINDER.JAVA:159)    AT JAVA.SECURITY.ACCESSCONTROLLER.DOPRIVILEGED(NATIVE METHOD)    ATORG.APACHE.AXIS.CONFIGURATION.ENGINECONFIGURATIONFACTORYFINDER.NEWFACTORY(ENGINECONFIGURATIONFACTORYFINDER.JAVA:152)    ATORG.APACHE.AXIS.TRANSPORT.HTTP.AXISSERVLETBASE.GETENGINEENVIRONMENT(AXISSERVLETBASE.JAVA:285)    ATORG.APACHE.AXIS.TRANSPORT.HTTP.AXISSERVLETBASE.GETENGINE(AXISSERVLETBASE.JAVA:208)    ATORG.APACHE.AXIS.TRANSPORT.HTTP.AXISSERVLETBASE.GETENGINE(AXISSERVLETBASE.JAVA:187)    AT ORG.APACHE.AXIS.TRANSPORT.HTTP.AXISSERVLET.DOPOST(AXISSERVLET.JAVA:785)    AT JAVAX.SERVLET.HTTP.HTTPSERVLET.SERVICE(HTTPSERVLET.JAVA:760)","SUMMARY":"NULLPOINTEREXCEPTIONS FOR UPDATED CLASSES FROM JBOSS CLASSLOADER.","CLASS":1}
{"ID_DEFECT":"AXIS-1240","DESCRIPTION":"THIS ENHANCEMENT REQUEST AND POSTED SOLUTION HAS TO DO WITH THE DESIRE FOR ASTRAIGHT FORWARD WAY TO DELETIVELY GENERATE CERTAIN CLASSES FROM A WSDL FILE, SOTHAT WE CAN USE EXTERNALLY GENERATED BEANS WITH OUR GENERATED STATICSTUBSSKELETION CODE.ONE HAS THE ABILITY TO CREATE ANY NUMBER OF NAMESPACES WITHIN THE WSDL ANDASSIGN EACH NAMESPACE A SEPARATE JAVA PACKAGE. THE CURRENT APPROACH IS TO HAVETHE CODE GENERATION GENERATE ALL OCDE TO A TEMPROARY DIRECTORY AND THEN COPY OUTTHE CLASSES THAT ARE NEEDED AND LEAVE BEHIND THE CLASSES THAT ARE EXTERNALLYGENERATED.THE REQUESTEDSUPPLIED APPROACH ADDS A FEW ADDITIONAL OPTIONS TO THE WSDL TOJAVA GENERATION. AN NSEXCLUDE OPTION SPECIFICALLY EXCLUDES NAMED NAMESPACES FROMBEING GENERATED AND A NSINCLUDE OPTION SPECIFICALLY INCLUDES NAMED NAMESPACES(DEFAULTS TO ALL THAT WERE NOT EXCLUDED) IN THE GENERATED CODE.THIS MIGHT HAVE BEEN DONE AS A CUSTOM JAVAGENERATORFACTORY EXCEDPT THAT THECURRENT DESIGN OF THE WSDL TO JAVA GENERATION DOES NOT ALLOW PROPERTIES TO BEDEFINEDPASSED TO THE FACTORY. A THIRD PARAMETER WAS ADDED TO THE CANDIDATESOLUTION WHICH ALLOWS AN UNDEFINED NAMEVALUE SET OF PROPERTIES TO BE ASSIGNEDTO THE EMITTER AND USABLE BY THE CUSTOM FACTORY.","SUMMARY":"ENHANCE WSDL2JAVA GENERATION TO SELECTIVELY GENERATE CLASSES","CLASS":1}
{"ID_DEFECT":"AXIS-1242","DESCRIPTION":"WHEN USING JMS TRANSPORT, THE MIME TYPE OF ATTACHMENTS IS NOT PASSED FROMTHE JMS BYTESMESSAGE TO THE MESSAGE CREATED IN SIMPLEJMSWORKER. THEFOLLOWING PATCH TO JMSSENDER SETS A CONTENTTYPE PROPERTY IN THE SENDPROPERTIES OF THE OUTGOING MESSAGE. WHEN THE BYTESMESSAGE IS RECEIVEDBY THE SIMPLEJMSWORKER, IT LOOKS FOR THE CONTENTTYPE PROPERTY AND IF SET,CREATES A NEW MESSAGE WITH THE CONTENTTYPE SET. THIS CHANGE ALLOWSMESSAGES WITH OR WITHOUT ATTACHMENTS TO BE PARSED CORRECTLY.TOM NELSONRABA TECHNOLOGIESINDEX: JMSSENDER.JAVA===================================================================RCS FILE: HOMECVSPUBLICWS-AXISJAVASRCORGAPACHEAXISTRANSPORTJMSJMSSENDER.JAVA,VRETRIEVING REVISION 1.7DIFF -U -P -R1.7 JMSSENDER.JAVA--- JMSSENDER.JAVAT25 FEB 2004 14:02:46 -0000T1.7+++ JMSSENDER.JAVAT27 FEB 2004 14:30:18 -0000@@ -20,6 +20,7 @@ IMPORT ORG.APACHE.AXIS.AXISFAULT; IMPORT ORG.APACHE.AXIS.MESSAGE; IMPORT ORG.APACHE.AXIS.MESSAGECONTEXT; IMPORT ORG.APACHE.AXIS.HANDLERS.BASICHANDLER;+IMPORT ORG.APACHE.AXIS.ATTACHMENTS.ATTACHMENTS;  IMPORT JAVAX.JMS.DESTINATION; IMPORT JAVA.IO.BYTEARRAYOUTPUTSTREAM;@@ -69,6 +70,21 @@ PUBLIC CLASS JMSSENDER EXTENDS BASICHAND             MSGCONTEXT.GETREQUESTMESSAGE().WRITETO(OUT);              HASHMAP PROPS = CREATESENDPROPERTIES(MSGCONTEXT);++             IF THE REQUEST MESSAGE CONTAINS ATTACHMENTS, SET+             A CONTENTTYPE PROPERTY TO GO IN THE OUTGOING MESSAGE HEADER+            STRING RET = NULL;+            MESSAGE MESSAGE = MSGCONTEXT.GETREQUESTMESSAGE();+            ATTACHMENTS MATTACHMENTS = MESSAGE.GETATTACHMENTSIMPL();+            IF (MATTACHMENTS != NULL && 0 != MATTACHMENTS.GETATTACHMENTCOUNT()) +            +                STRING CONTENTTYPE = MATTACHMENTS.GETCONTENTTYPE();+                IF(CONTENTTYPE != NULL && !CONTENTTYPE.TRIM().EQUALS()) +                +                    PROPS.PUT(CONTENTTYPE, CONTENTTYPE);+                +            +             BOOLEAN WAITFORRESPONSE = TRUE;             IF(MSGCONTEXT.CONTAINSPROPERTY(JMSCONSTANTS.WAIT_FOR_RESPONSE))                 WAITFORRESPONSE =INDEX: SIMPLEJMSWORKER.JAVA===================================================================RCS FILE: HOMECVSPUBLICWS-AXISJAVASRCORGAPACHEAXISTRANSPORTJMSSIMPLEJMSWORKER.JAVA,VRETRIEVING REVISION 1.6DIFF -U -P -R1.6 SIMPLEJMSWORKER.JAVA--- SIMPLEJMSWORKER.JAVAT25 FEB 2004 14:02:46 -0000T1.6+++ SIMPLEJMSWORKER.JAVAT27 FEB 2004 14:30:18 -0000@@ -80,7 +80,29 @@ PUBLIC CLASS SIMPLEJMSWORKER IMPLEMENTS            CREATE THE MSG AND CONTEXT AND INVOKE THE SERVER         AXISSERVER SERVER = SIMPLEJMSLISTENER.GETAXISSERVER();-        MESSAGE MSG = NEW MESSAGE(IN);++         IF THE INCOMING MESSAGE HAS A CONTENTTYPE SET,+         PASS IT TO MY NEW MESSAGE+        STRING CONTENTTYPE = NULL;+        TRY +         +            CONTENTTYPE = MESSAGE.GETSTRINGPROPERTY(CONTENTTYPE);+         +        CATCH(EXCEPTION E) +         +            E.PRINTSTACKTRACE();+        ++        MESSAGE MSG = NULL;+        IF(CONTENTTYPE != NULL && !CONTENTTYPE.TRIM().EQUALS()) +        +            MSG = NEW MESSAGE(IN, TRUE, CONTENTTYPE, NULL);+         +        ELSE +        +            MSG = NEW MESSAGE(IN);+        +         MESSAGECONTEXT  MSGCONTEXT = NEW MESSAGECONTEXT(SERVER);         MSGCONTEXT.SETREQUESTMESSAGE( MSG );         TRY","SUMMARY":"MULTIPART MESSAGES USING JMS TRANSPORT LACK A CONTENTTYPE SETTING AND FAIL TO PARSE","CLASS":1}
{"ID_DEFECT":"AXIS-1246","DESCRIPTION":"WHEN SENDING AN ORG.APACHE.AXIS.MESSAGE WITH A JAVAX.ACTIVATION.DATAHANDLERATTACHMENT, THE ORG.APACHE.AXIS.ATTACHMENTS.ATTACHMENTSIMPL.CREATEATTACHMENT() CALL IS DEFERRED UNTIL THE ATTACHMENTS AREFIRST SERIALIZED. THE PROBLEM IS THAT, WHENORG.APACHE.AXIS.MESSAGE.WRITETO() IS FIRST CALLED, IT DETERMINES IF ATTACHMENTSEXIST BY CALLING ATTACHMENTS.GETATTACHMENTCOUNT(), AND COMPARING TO ZERO.UNFORTUNATELY, AT THAT TIME, THE ATTACHMENTS HAVE NOT YET BEEN ADDED.I PROPOSE THAT THE ORG.APACHE.AXIS.ATTACHMENTS.ATTACHMENTSIMPL.GETATTACHMENTCOUNT() METHOD BE MODIFIED SO THAT IT INDIRECTLY CAUSES THE ATTACHMENTS TO BE ADDED. THEMODIFICATION WOULD FOLLOW THE EXAMPLE IN SEVERAL OTHER ATTACHMENTSIMPL METHODS (GETCONTENTLENGTH(), WRITECONTENTTOSTREAM(), GETCONTENTTYPE()) WHERE THE MULTIREF OBJECT IS LAZILY CREATED, AND SOAPPART.GETASSTRING() IS CALLED AS ANARGUMENT TO MIMEUTILS.CREATEMP().THIS PROBLEM SHOWS UP WHEN USING JMS TRANSPORT IF THE LOG LEVEL ISSET HIGHER THAN DEBUG BECAUSE A DEBUG CALL CAUSES THE MESSAGE TO BE SERIALIZED ONCE TO A LOG FILE (THUS ADDING THE ATTACHMENTS) BEFORE THE MESSAGE IS SERIALIZEDAND SENT TO THE RECIPIENT. IN THE HTTP CASE, I BELIEVE THAT THIS PROBLEM IS MASKED BECAUSE OF ACALL TO GETCONTENTLENGTH() PRIOR TO THE MESSAGE.WRITETO CALL. AS NOTED ABOVE, THE GETCONTENTLENGTH() CALL INDIRECTLY CAUSES THE ATTACHMENTS TO BE ADDED.I WILL ATTACH A PATCH FILE FOR THE ATTACHMENTSIMPL CLASSTOM NELSONRABA TECHMOLOGIES","SUMMARY":"ATTACHMENTSIMPL.GETATTACHMENTCOUNT() MAY REPORT 0 ATTACHMENTS FOR MESSAGE THAT HAS >0 ATTACHMENTS","CLASS":1}
{"ID_DEFECT":"AXIS-1247","DESCRIPTION":"WHEN YOU RUN THE SELF CONTAINED SIMPLEAXISSERVER SERVER YOU GET A START PAGE THAT LISTS THE SERVICES. BUT THE URLS TO EACH SERVICE IS BROKEN, AS THE URL IS WRONGE.G. HTTP:LOCALHOST:5050 POINTS TO HTTP:LOCALHOST:5050SERVICESVERSION?WSDLINSTEAD OF HTTP:LOCALHOST:5050AXISSERVICESVERSION?WSDL","SUMMARY":"SIMPLE AXIS SERVER LINKS FROM FRONT PAGE TO WSDL ARE WRONG","CLASS":1}
{"ID_DEFECT":"AXIS-1249","DESCRIPTION":"1. STARTED WITH WSDL AND XML SCHEMAS.  THE RELEVANT PART OF THE XML SCHEMA IS LISTED AS FOLLOWS (NOTE THE XS:LANGUAGE DEFN):<XS:COMPLEXTYPE NAME=LANGUAGECODELIST_TYPE>        <XS:ANNOTATION>            <XS:DOCUMENTATION>AN LIST OF LANGAUGE CODES.<XS:DOCUMENTATION>        <XS:ANNOTATION>        <XS:SEQUENCE>            <XS:ELEMENT NAME=LANGUAGECODE TYPE=XS:LANGUAGE MAXOCCURS=UNBOUNDED>        <XS:SEQUENCE>    <XS:COMPLEXTYPE>2. THEN USING AXIS WSDL2JAVA UTILITY CREATED THE JAVA CODE.  THE JAVA CLASS HAD THE FOLLOWING RELEVANT CODE:PRIVATE LANGUAGE[] LANGUAGECODE;3. NOW WHEN THE CLIENT ACCESSES THE WSDL USING AXISSERVLET TO GENERATE THE CLIENT JAVA CODE THEY GET AN ERROR AS FOLLOWS:UNDEFINED TYPE - LANG.IN LOOKING AT THE WSDL THAT IS BEING GENERATED IT LOOKS AS FOLLOWS:- <COMPLEXTYPE NAME=LANGUAGECODELIST_TYPE>- <SEQUENCE>  <ELEMENT MAXOCCURS=UNBOUNDED NAME=LANGUAGECODE NILLABLE=TRUE TYPE=XSD:LANG >   <SEQUENCE>  <COMPLEXTYPE>","SUMMARY":"ORG.APACHE.AXIS.TYPES.LANGUAGE TRANSLATING TO UNKNOWN TYPE LANG IN WSDL","CLASS":1}
{"ID_DEFECT":"AXIS-1250","DESCRIPTION":"HI:WHEN A SOAPSERVICE RECEIVES A SOAPFAULTEXCEPTION WHEN INVOKING IN THE REQUEST HANDLER CHAIN, LINE 408 - 500 OF SOAPSERVICE (ORG.APACHE.AXIS.HANDLERS.SOAP.SOAPSERVICE) HAVE IT AS:    CATCH (SOAPFAULTEXCEPTION E)             MSGCONTEXT.SETPASTPIVOT(TRUE);            THROW NEW AXISFAULT(E.GETMESSAGE());    ALL THE SOAP FAULT SPECIFIC INFORMATION IN THE SOAPFAULTEXEPTION GOT LOST EXCEPT THE MESSAGE. LINE 500 SHOULD BE CHANGED TO:             THROW AXISFAULT.MAKEFAULT(E);WHICH WILL CORRECTLY POPULATE THE SOAP FAULT RETURNED TO THE CLIENT.THANKS,--JIN","SUMMARY":"SOAPSERVICE MAKE AXISFAULT FROM SOAPFAULTEXCEPTION","CLASS":1}
{"ID_DEFECT":"AXIS-1251","DESCRIPTION":"WHEN USING HTTP 1.1 TRANSPORT AND THE SERVER RESPONSE WITH A CHUNKED RESPONSE I GET SOME INVOLVED RESPONSE ABOUT A LACK OF ROCUMENT ELEMENT.  THE CHUNKING MARKERS ARE NOTE BEING PROCESSED AND BEING INCLUDED IN THE HTTP RESPONSE.THIS IS BECAUSE THE HEADER IS PALCED IN THE CACHE AS LOWER CASE BUT THE KEY TO FETCH IT IS MIXED CASE.PATCH IS ATTACHED","SUMMARY":"TRANSFER-ENCODING NOT PRPERLY DETECTED ON A RESPONSE STREAM","CLASS":1}
{"ID_DEFECT":"AXIS-1252","DESCRIPTION":"WHEN ADDING THE HTTP 1.1 OPTION TO THE SERVICE PROPERTIES THE USER IS UNABLE TO ADD THE EXPECT 100 CONTINUE OPTION WITOUT ALSO ADDING THE CONTENT-TRANSFER CHUNKED AS WELL.THE HEADERS ARE NOT OUTPUT BEFORE THE STREAM IS FLUSHED UNLESS CHUNKED IS ALSO TURNED ON.  PATCH TO FOLLOW.","SUMMARY":"USING HTTP1.1 ENABLEING 100_CONTINUE ALONE FAILS WITHOUT CHUNKED","CLASS":1}
{"ID_DEFECT":"AXIS-1257","DESCRIPTION":"AXIS-SNAPSHOT.JAR AS OF JAN 30 2004 PRODUCES THE FOLLOWING EXCEPTION. A CURRENT CVS VERSION OF MAR 21 2004 PRODUCES THE SAME EXCEPTIONS. I JUST DONT WANT TO REVERT MY WHOLE INSTALLATION TO CVS. THE POSITION WHERE THE EXCEPTION IS RISEN DIFFERS SLIGHTLY. FOR YOUR CONVENIENCE I  HAVE INCLUDED THE CODE SNIPPETS, WHERE THE EXCEPTION IS RISEN.FAILURE TRYING TO GET THE CALL OBJECT; NESTED EXCEPTION IS:        JAVA.LANG.NULLPOINTEREXCEPTIONAXISFAULT FAULTCODE: HTTP:SCHEMAS.XMLSOAP.ORGSOAPENVELOPESERVER.GENERALEXCEPTION FAULTSUBCODE: FAULTSTRING: FAILURE TRYING TO GET THE CALL OBJECT; NESTED EXCEPTION IS:        JAVA.LANG.NULLPOINTEREXCEPTION FAULTACTOR: FAULTNODE: FAULTDETAIL:FAILURE TRYING TO GET THE CALL OBJECT; NESTED EXCEPTION IS:        JAVA.LANG.NULLPOINTEREXCEPTION        ATORG.GGF.WWW.NAMESPACES.WS_AGREEMENT.RESPONDERSOAPBINDINGSTUB.CREATECALL(RESPONDERSOAPBINDINGSTUB.JAVA:586)        ATORG.GGF.WWW.NAMESPACES.WS_AGREEMENT.RESPONDERSOAPBINDINGSTUB.STARTNEGOTIATION(RESPONDERSOAPBINDINGSTUB.JAVA:622)        AT TEST.MAIN(TEST.JAVA:16)CAUSED BY: JAVA.LANG.NULLPOINTEREXCEPTION        ATORG.APACHE.AXIS.ENCODING.SER.BASESERIALIZERFACTORY.CREATEFACTORY(BASESERIALIZERFACTORY.JAVA:270)        AT ORG.APACHE.AXIS.CLIENT.CALL.REGISTERTYPEMAPPING(CALL.JAVA:2227)        ATORG.GGF.WWW.NAMESPACES.WS_AGREEMENT.RESPONDERSOAPBINDINGSTUB.CREATECALL(RESPONDERSOAPBINDINGSTUB.JAVA:579)        ... 2 MORERESPONDERSOAPBINDINGSTUB WAS CREATED BY WSDL2JAVA. THE PARAMETERS OF THE REGISTERTYPEMAPPING CALL ARE:_CALL.REGISTERTYPEMAPPING(CLASS JAVA.LANG.OBJECT,HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES>QUERYRESOURCEPROPERTIESRESPONSE, NULL, CLASS ORG.APACHE.AXIS.ENCODING.SER.SIMPLEDESERIALIZERFACTORY, FALSE)(JUST PRINTED WITH SYSTEM.OUT.PRINTLN)LOOKING AT RESPONDERSOAPBINDINGSTUB._INITOPERATIONDESC1() THIS CODE IS GENERATEDBY WSDL2JAVA (CURRENT CVS VERSION):        OPER = NEW ORG.APACHE.AXIS.DESCRIPTION.OPERATIONDESC();        OPER.SETNAME(QUERYRESOURCEPROPERTIES);        OPER.ADDPARAMETER(NEWJAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES,QUERYRESOURCEPROPERTIESREQUEST), NEW JAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES,>QUERYRESOURCEPROPERTIESREQUEST),COM.IBM.WWW.XMLNS.STDWIP.WEB_SERVICES.WS_RESOURCEPROPERTIES._QUERYRESOURCEPROPERTIESREQUEST.CLASS,ORG.APACHE.AXIS.DESCRIPTION.PARAMETERDESC.IN, FALSE, FALSE);        OPER.SETRETURNTYPE(NEWJAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES,>QUERYRESOURCEPROPERTIESRESPONSE));        OPER.SETRETURNCLASS(JAVA.LANG.OBJECT.CLASS);        OPER.SETRETURNQNAME(NEWJAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES,QUERYRESOURCEPROPERTIESRESPONSE));        OPER.SETSTYLE(ORG.APACHE.AXIS.ENUM.STYLE.DOCUMENT);        OPER.SETUSE(ORG.APACHE.AXIS.ENUM.USE.ENCODED);        _OPERATIONS[4] = OPER;THIS DIFFERS FROM THE CODE THAT IS GENERATED BY WSDL2JAVA (VERSION 1.1):        OPER = NEW ORG.APACHE.AXIS.DESCRIPTION.OPERATIONDESC();        OPER.SETNAME(QUERYRESOURCEPROPERTIES);        OPER.ADDPARAMETER(NEWJAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES,QUERYRESOURCEPROPERTIESREQUEST), NEWJAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES,>QUERYRESOURCEPROPERTIESREQUEST),COM.IBM.WWW.XMLNS.STDWIP.WEB_SERVICES.WS_RESOURCEPROPERTIES._QUERYRESOURCEPROPERTIESREQUEST.CLASS,ORG.APACHE.AXIS.DESCRIPTION.PARAMETERDESC.IN, FALSE, FALSE);        OPER.SETRETURNTYPE(NEWJAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES,>QUERYRESOURCEPROPERTIESRESPONSE));       OPER.SETRETURNCLASS(COM.IBM.WWW.XMLNS.STDWIP.WEB_SERVICES.WS_RESOURCEPROPERTIES._QUERYRESOURCEPROPERTIESRESPONSE.CLASS);        OPER.SETRETURNQNAME(NEWJAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES,QUERYRESOURCEPROPERTIESRESPONSE));        OPER.SETSTYLE(ORG.APACHE.AXIS.ENUM.STYLE.DOCUMENT);        OPER.SETUSE(ORG.APACHE.AXIS.ENUM.USE.ENCODED);        _OPERATIONS[4] = OPER;AND LATER IN THE CONSTRUCTOR RESPONDERSOAPBINDINGSTUB(JAVAX.XML.RPC.SERVICE SERVICE)VERSION 1.2 CVS:            QNAME = NEWJAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES,>QUERYRESOURCEPROPERTIESRESPONSE);            CACHEDSERQNAMES.ADD(QNAME);            CLS = JAVA.LANG.OBJECT.CLASS;            CACHEDSERCLASSES.ADD(CLS);            CACHEDSERFACTORIES.ADD(NULL);            CACHEDDESERFACTORIES.ADD(SIMPLEDF);VERSION 1.1:            QNAME = NEWJAVAX.XML.NAMESPACE.QNAME(HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES,>QUERYRESOURCEPROPERTIESRESPONSE);            CACHEDSERQNAMES.ADD(QNAME);            CLS =COM.IBM.WWW.XMLNS.STDWIP.WEB_SERVICES.WS_RESOURCEPROPERTIES._QUERYRESOURCEPROPERTIESRESPONSE.CLASS;            CACHEDSERCLASSES.ADD(CLS);            CACHEDSERFACTORIES.ADD(BEANSF);            CACHEDDESERFACTORIES.ADD(BEANDF);THIS IS WHAT THE IMPORTED SCHEMA LOOKS LIKE:<WSDL:DEFINITIONS NAME=WS-RESOURCEPROPERTIES  XMLNS=HTTP:SCHEMAS.XMLSOAP.ORGWSDL ...>  ...         <XSD:ELEMENT NAME=QUERYRESOURCEPROPERTIESRESPONSE >         <XSD:COMPLEXTYPE>           <XSD:COMPLEXCONTENT MIXED=TRUE>             <XSD:RESTRICTION BASE=XSD:ANYTYPE>               <XSD:SEQUENCE>                 <XSD:ANY PROCESSCONTENTS=LAX                          MINOCCURS=1 MAXOCCURS=UNBOUNDED>               <XSD:SEQUENCE>             <XSD:RESTRICTION>           <XSD:COMPLEXCONTENT>         <XSD:COMPLEXTYPE>       <XSD:ELEMENT>   ...  <WSDL:MESSAGE NAME=QUERYRESOURCEPROPERTIESRESPONSE>    <WSDL:PART NAME=QUERYRESOURCEPROPERTIESRESPONSE               ELEMENT=WSRP:QUERYRESOURCEPROPERTIESRESPONSE >  <WSDL:MESSAGE>   ...  <WSDL:PORTTYPE NAME=QUERYRESOURCEPROPERTIES>    <WSDL:OPERATION NAME=QUERYRESOURCEPROPERTIES>      <WSDL:INPUT  NAME=QUERYRESOURCEPROPERTIESREQUEST                   MESSAGE=WSRP:QUERYRESOURCEPROPERTIESREQUEST >      <WSDL:OUTPUT NAME=QUERYRESOURCEPROPERTIESRESPONSE                   MESSAGE=WSRP:QUERYRESOURCEPROPERTIESRESPONSE >      <WSDL:FAULT  NAME=RESOURCEUNKNOWNFAULT                   MESSAGE=WSRP:RESOURCEUNKNOWNFAULT >      <WSDL:FAULT  NAME=INVALIDRESOURCEPROPERTYQNAMEFAULT                   MESSAGE=WSRP:INVALIDRESOURCEPROPERTYQNAMEFAULT >      <WSDL:FAULT  NAME=UNKNOWNQUERYEXPRESSIONDIALECTFAULT                   MESSAGE=WSRP:UNKNOWNQUERYEXPRESSIONDIALECTFAULT >      <WSDL:FAULT  NAME=INVALIDQUERYEXPRESSIONFAULT                   MESSAGE=WSRP:INVALIDQUERYEXPRESSIONFAULT >      <WSDL:FAULT  NAME=QUERYEVALUATIONERRORFAULT                   MESSAGE=WSRP:QUERYEVALUATIONERRORFAULT >    <WSDL:OPERATION>  <WSDL:PORTTYPE>AND THESE ARE THE THE LOCATIONS THAT RAISE THE EXCEPTION:_CALL.REGISTERTYPEMAPPING(CLASS JAVA.LANG.OBJECT,HTTP:WWW.IBM.COMXMLNSSTDWIPWEB-SERVICESWS-RESOURCEPROPERTIES>QUERYRESOURCEPROPERTIESRESPONSE,NULL, CLASS ORG.APACHE.AXIS.ENCODING.SER.SIMPLEDESERIALIZERFACTORY, FALSE)ORG.APACHE.AXIS.CLIENT.CALL.REGISTERTYPEMAPPING(CALL.JAVA:2227):    PUBLIC VOID REGISTERTYPEMAPPING(CLASS JAVATYPE,                                    QNAME XMLTYPE,                                    CLASS SFCLASS,                                    CLASS DFCLASS,                                    BOOLEAN FORCE)          INSTANTIATE THE FACTORY USING INTROSPECTION.        SERIALIZERFACTORY   SF =                BASESERIALIZERFACTORY.CREATEFACTORY(SFCLASS, JAVATYPE, XMLTYPE);  <- HERE        DESERIALIZERFACTORY DF =                BASEDESERIALIZERFACTORY.CREATEFACTORY(DFCLASS,                                                      JAVATYPE,                                                      XMLTYPE);        IF (SF != NULL || DF != NULL)             REGISTERTYPEMAPPING(JAVATYPE, XMLTYPE, SF, DF, FORCE);            ORG.APACHE.AXIS.ENCODING.SER.BASESERIALIZERFACTORY.CREATEFACTORY(BASESERIALIZERFACTORY.JAVA:270):    PUBLIC STATIC SERIALIZERFACTORY CREATEFACTORY(CLASS FACTORY,                                                   CLASS JAVATYPE,                                                   QNAME XMLTYPE)         SERIALIZERFACTORY SF = NULL;        TRY             METHOD METHOD =                 FACTORY.GETMETHOD(CREATE, CLASS_QNAME_CLASS);  <- HERE            SF = (SERIALIZERFACTORY)                 METHOD.INVOKE(NULL,                               NEW OBJECT[] JAVATYPE, XMLTYPE);FWIW: THE FOLLOWING PATCH FIXES THE PROBLEM BUT I DONT KNOW HOW MANY NEW ONES ARE CREATED AS I DONT UNDERSTAND THE CODE ;-)CVS SERVER: DIFFING .INDEX: JAVASTUBWRITER.JAVA===================================================================RCS FILE:HOMECVSPUBLICWS-AXISJAVASRCORGAPACHEAXISWSDLTOJAVAJAVASTUBWRITER.JAVA,VRETRIEVING REVISION 1.129DIFF -U2 -R1.129 JAVASTUBWRITER.JAVA--- JAVASTUBWRITER.JAVA 25 FEB 2004 14:02:52 -0000      1.129+++ JAVASTUBWRITER.JAVA 22 MAR 2004 22:49:45 -0000@@ -961,5 +961,5 @@              WILL BE CHECKED, THE END DELEGATE IS DEFAULTTYPEMAPPINGIMPL              THATLL GET IT RIGHT WITH THE BASE TYPE NAME-            PW.PRINTLN(            CACHEDSERFACTORIES.ADD(NULL););+            PW.PRINTLN(            CACHEDSERFACTORIES.ADD(SIMPLESF););             PW.PRINTLN(            CACHEDDESERFACTORIES.ADD(SIMPLEDF););          ELSE ","SUMMARY":"NULLPOINTER EXCEPTION CAUSED BY ...SOAPBINDINGSTUB.CREATECALL","CLASS":1}
{"ID_DEFECT":"AXIS-1258","DESCRIPTION":"THIS IS RESUBMISSION FROM BUGZILLA (HTTP:NAGOYA.APACHE.ORGBUGZILLASHOW_BUG.CGI?ID=27356):THE FOLLOWING DEFINITION:       <XSD:ELEMENT NAME=FOO>          <XSD:SIMPLETYPE>            <XSD:LIST ITEMTYPE=XSD:QNAME >          <XSD:SIMPLETYPE>       <XSD:ELEMENT>WITH VALUES SUCH AS XMLNS:N1=FOO XMLNS:N2=FOO2 N1:BAR N2:BAR2 IS SERIALIZED AS:<FOO>FOOBAR FOO2BAR2<FOO>WHICH IS NOT CORRECT. ALSO EVEN IF SERIALIZED PROPERLY THE DESERIALIZATION IS INVALID. THE SIMPLELISTDESERIALIZER TRIES TO PASS THE TOKEN VALUE OF QNAME(STRING) CONSTRUCTOR BUT THIS IS WRONG SINCE THE QNAME(STRING) CONSTRUCTOR ONLY ACCEPTS A LOCALNAME AND ALSO PROPER NAMESPACE PREFIX RESOLUTION IS NOT PERFORMED.THE ATTACHED PATCH FIXES THE SERIALIZATION AND DESERIALIZATION PROBLEMS.","SUMMARY":"XSD:LIST OF QNAME IS NOT HANDLED PROPERLY","CLASS":1}
{"ID_DEFECT":"AXIS-1265","DESCRIPTION":"THE FOLLOWING ERROR IS LOGGED WHEN A SOAP HEADER DOES NOT CONTAIN A MUSTUNDERSTAND ATTRIBUTE (WHICH IS OPTIONAL):     [JAVA] 791  [MAIN] ERROR ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT  -  IS NOT A VALID VALUE FOR THE MUSTUNDERSTAND ATTRIBUTE ON ELEMENT HTTP:WIDGETS.COMRESOURCEID","SUMMARY":"ERROR LOGGED WHEN A SOAP HEADER DOES NOT CONTAIN A MUSTUNDERSTAND ATTRIBUTE","CLASS":1}
{"ID_DEFECT":"AXIS-1266","DESCRIPTION":"THE METHOD SETDERVICEDESCRIPTION() IN ORG.APACHE.AXIS.HANDLERS.SOAP.SOAPSERVICE ONLY ALLOWS THE ABILITY TO SET AN OBJECT OF TYPE ORG.APACHE.AXIS.DESCRIPTION.JAVASERVICEDESC. THIS SHOULD REALLY ALLOW THE CALLER TO PASS AN OBJECT OF TYPE ORG.APACHE.AXIS.DESCRIPTION.SERVICEDESC. THE INSTANCE VARIABLE BEING SET IS OF TYPE SERVICEDESC. THIS IS PREVENTING ME FROM PROVIDING MY OWN SERVICE DESCRIPTION TO THE SOAPSERVICE OBJECT IN A CLEAN WAY. RIGHT NOW MY ONLY WORKAROUND IS TO EXTEND JAVASERVICEDESC AND TAKE OVER EVERY METHOD.","SUMMARY":"INCORRECT SIGNATURE FOR SOAPSERVICE.SETSERVICEDESCRIPTION()","CLASS":1}
{"ID_DEFECT":"AXIS-1271","DESCRIPTION":"TYPE MAPPINGS IN WSDD ARE REPLICATED EACH TIME A SERVICE IS DEPLOYED.","SUMMARY":"TYPE MAPPINGS IN WSDD ARE REPLICATED EACH TIME A SERVICE IS DEPLOYED","CLASS":1}
{"ID_DEFECT":"AXIS-1273","DESCRIPTION":"THE TARBALL AVAILABLE FROM HTTP:ARCHIVE.APACHE.ORGDISTWSAXIS1_2ALPHAAXIS-1_2ALPHA-SRC.TAR IS MISSING A .GZ SUFFIX, CAUSING CONFUSION AND SOME ARCHIVING SYSTEMS TO FLAG THE FILE AS BAD AND REFUSE TO WORK WITH IT.PLEASE ADD BACK THE .GZ SUFFIX.","SUMMARY":"THE TARBALL FOR 1.2_ALPHA IS MISSING .GZ SUFFIX","CLASS":1}
{"ID_DEFECT":"AXIS-1275","DESCRIPTION":"AFTER GENERATING SERVICE CODE BASED ON THE WSDL FILE, GENERATED CODE DOES NOT COMPILE:PUBLIC COM.THEMINDELECTRIC.WWW._PACKAGE.EXAMPLES_NWC.INVOICELINE GETI(INT I) T        RETURN I[I];    SHOULD BE GENERATED:PUBLIC COM.THEMINDELECTRIC.WWW._PACKAGE.EXAMPLES_NWC.INVOICELINE GETI(INT I) T        RETURN THIS.I[I];    ","SUMMARY":"SERVER SIDE PROXIES DO NOT COMPILE AFTER WSDL GENERATION","CLASS":1}
{"ID_DEFECT":"AXIS-1280","DESCRIPTION":"WHEN WSDL2JAVA GENERATES A JAVA CLASS FOR THE SIMPLE TYPE SHOWN IN THE SCHEMA FRAGMENT BELOW, IT DOES NOT PRODUCE THE STRING CONSTRUCTOR. AS A RESULT, JAVA CLASSES GENERATED FOR ALL OTHER TYPES THAT EXTEND FROM DATEORDATETIMETYPE ARE IN ERROR.<XS:SIMPLETYPE NAME=DATEORDATETIMETYPE>  <XS:UNION MEMBERTYPES=XS:DATE XS:DATETIME><XS:SIMPLETYPE>","SUMMARY":"WSDL2JAVA DOES NOT GENERATE STRING CONSTRUCTOR FOR UNION SIMPLE TYPE","CLASS":1}
{"ID_DEFECT":"AXIS-1281","DESCRIPTION":"THIS DEFEST IS VERY SIMILAR TO DEFECT 22363 WHICH ONLY FIXED THE SOAP FAULT PART. HOWEVER, WHEN SOAP FAULT DETAIL EXISTS, THE FOLLOWING EXCEPTION IS THROWN:JAVA.LANG.NULLPOINTEREXCEPTIONTAT ORG.APACHE.AXIS.MESSAGE.SOAPFAULTDETAILSBUILDER.ONSTARTCHILD(SOAPFAULTDETAILSBUILDER.JAVA:95)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZATIONCONTEXTIMPL.STARTELEMENT(DESERIALIZATIONCONTEXTIMPL.JAVA:1001)TAT ORG.APACHE.XERCES.PARSERS.ABSTRACTSAXPARSER.STARTELEMENT(ABSTRACTSAXPARSER.JAVA:446)TAT ORG.APACHE.XERCES.IMPL.XMLNSDOCUMENTSCANNERIMPL.SCANSTARTELEMENT(XMLNSDOCUMENTSCANNERIMPL.JAVA:306)TAT ORG.APACHE.XERCES.IMPL.XMLDOCUMENTFRAGMENTSCANNERIMPL$FRAGMENTCONTENTDISPATCHER.DISPATCH(XMLDOCUMENTFRAGMENTSCANNERIMPL.JAVA:1543)TAT ORG.APACHE.XERCES.IMPL.XMLDOCUMENTFRAGMENTSCANNERIMPL.SCANDOCUMENT(XMLDOCUMENTFRAGMENTSCANNERIMPL.JAVA:348)TAT ORG.APACHE.XERCES.PARSERS.DTDCONFIGURATION.PARSE(DTDCONFIGURATION.JAVA:539)TAT ORG.APACHE.XERCES.PARSERS.DTDCONFIGURATION.PARSE(DTDCONFIGURATION.JAVA:595)TAT ORG.APACHE.XERCES.PARSERS.XMLPARSER.PARSE(XMLPARSER.JAVA:152)TAT ORG.APACHE.XERCES.PARSERS.ABSTRACTSAXPARSER.PARSE(ABSTRACTSAXPARSER.JAVA:1125)TAT JAVAX.XML.PARSERS.SAXPARSER.PARSE(SAXPARSER.JAVA:345)TAT ORG.APACHE.AXIS.ENCODING.DESERIALIZATIONCONTEXTIMPL.PARSE(DESERIALIZATIONCONTEXTIMPL.JAVA:218)TAT ORG.APACHE.AXIS.SOAPPART.GETASSOAPENVELOPE(SOAPPART.JAVA:568)TAT ORG.APACHE.AXIS.SOAPPART.GETENVELOPE(SOAPPART.JAVA:853)TAT COM.NOVELL.WSCLIENT.UTIL.SOAPFAULTTEST.MAIN(SOAPFAULTTEST.JAVA:56)EXCEPTION IN THREAD MAIN PROCESS TERMINATED WITH EXIT CODE 1TO REPRODUCE, BUILD AND RUN THE FOLLOWING CODE:IMPORT JAVA.IO.*;IMPORT JAVAX.XML.SOAP.*;PUBLIC CLASS SOAPFAULTTEST     PUBLIC STATIC FINAL STRING SOAPFAULT = <?XML VERSION=1.0 ENCODING=UTF-8?> +    <SOAPENV:ENVELOPE XMLNS:SOAPENV=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENVELOPE XMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMA XMLNS:XSI=HTTP:WWW.W3.ORG2001XMLSCHEMA-INSTANCE> +     <SOAPENV:BODY> +      <SOAPENV:FAULT> +       <FAULTCODE>SOAPENV:13001<FAULTCODE> +       <FAULTSTRING>JAVA.LANG.EXCEPTION: FILE ALREADY EXISTS<FAULTSTRING> +       <FAULTACTOR>URN:RISKMETRICSDIRECT:1.0:OBJECT-SERVICE-SERVICE:CREATEOBJECT<FAULTACTOR> +       <DETAIL> +       <PO:ORDER XMLNS:PO=HTTP:GIZMOS.COMORDERS>QUANTITY ELEMENT DOES NOT HAVE A VALUE<PO:ORDER> +       <DETAIL> +      <SOAPENV:FAULT> +     <SOAPENV:BODY> +    <SOAPENV:ENVELOPE>;    PUBLIC STATIC VOID MAIN(STRING[] ARGS)            TRY             BYTEARRAYINPUTSTREAM BIS = NEW BYTEARRAYINPUTSTREAM( SOAPFAULT.GETBYTES() );            MESSAGEFACTORY MSGFACTORY = MESSAGEFACTORY.NEWINSTANCE();            SOAPMESSAGE MSG = MSGFACTORY.CREATEMESSAGE ( NULL, BIS );            NOW ATTEMPT TO ACCESS THE FAULT            IF( MSG.GETSOAPPART().GETENVELOPE().GETBODY().HASFAULT() )T                SOAPFAULT FAULT =                    MSG.GETSOAPPART().GETENVELOPE().GETBODY().GETFAULT();                    SYSTEM.OUT.PRINTLN( FAULT:  + FAULT.GETFAULTSTRING() );                     CATCH (SOAPEXCEPTION E)             E.PRINTSTACKTRACE();         CATCH (IOEXCEPTION E)             E.PRINTSTACKTRACE();            ","SUMMARY":"PROCESS SOAPFAULT DETAIL WHEN CONTEXT IS NOT SET","CLASS":1}
{"ID_DEFECT":"AXIS-1282","DESCRIPTION":"I RAN INTO THIS THE OTHER DAY. I DEPLOYED A NEW SERVICE AND ADDED THE WSDLFILE ELEMENT IN THE FOLLOWING WAY:  <WSDLFILE>         SHARESCHEMATESTSINTEROPNOTIFICATION_CONSUMER_SERVICE.WSDL  <WSDLFILE>WHICH CAUSED THE SOAPSERVICE HANDLER TO THROW A AXIS FAULT, WHICH MY CLIENT, THE OPERATION JUST HAVING A INPUT NEVER SAW BEFORE EXISTING. TOOK ME WHILE TO FIGURE OUT THAT YOU CANT HAVE WHITESPACE IN THERE. I THINK IT WOULD BE A GOOD IDEA TO ADD A TRIM() WHEN READIN THIS VALUE. IE CHANGE          ELEMENT WSDLELEM = GETCHILDELEMENT(E, ELEM_WSDD_WSDLFILE);        IF (WSDLELEM != NULL)             STRING FILENAME = XMLUTILS.GETCHILDCHARACTERDATA(WSDLELEM);            DESC.SETWSDLFILE(FILENAME);        TO        ELEMENT WSDLELEM = GETCHILDELEMENT(E, ELEM_WSDD_WSDLFILE);        IF (WSDLELEM != NULL)             STRING FILENAME = XMLUTILS.GETCHILDCHARACTERDATA(WSDLELEM);            FILENAME = FILENAME.TRIM();            DESC.SETWSDLFILE(FILENAME);        IN WSDDSERVICE.JAVA. SAM","SUMMARY":"TRIM WHITESPACE WHEN READING WSDL FILE LOCATION FROM WSDD","CLASS":1}
{"ID_DEFECT":"AXIS-1286","DESCRIPTION":"1) IN SOAPHEADER:    PUBLIC SOAPELEMENT ADDCHILDELEMENT(SOAPELEMENT ELEMENT)       THROWS SOAPEXCEPTION          IF (!(ELEMENT INSTANCEOF JAVAX.XML.SOAP.SOAPHEADERELEMENT))         THROW NEW SOAPEXCEPTION(MESSAGES.GETMESSAGE(BADSOAPHEADER00));             RETURN SUPER.ADDCHILDELEMENT(ELEMENT);    CHILD.SETENVELOPE(GETENVELOPE()); IS NOT SET AS IN OTHER ADDCHILDELEMENT() METHODS. THAT CAUSES THE FOLLOWING ERROR SOMETIMES:        HTTP:XML.APACHE.ORGAXISSTACKTRACE:JAVA.LANG.NULLPOINTEREXCEPTION        AT ORG.APACHE.AXIS.MESSAGE.SOAPHEADERELEMENT.OUTPUTIMPL(SOAPHEADERELEMENT.JAVA:224)        AT ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT.OUTPUT(MESSAGEELEMENT.JAVA:1112) FINDELEMENT() FUNCTION IS REPLICATED IN SOAPBODY.JAVA AND SOAPHEADER.JAVA. SO IS REMOVECHILD(MESSAGEELEMENT) IN SOAPBODY, SOAPHEADER AND IN MESSAGEELEMENT.JAVA3) THE CHECK: IF (!(ELEMENT INSTANCEOF JAVAX.XML.SOAP.SOAPHEADERELEMENT))         THROW NEW SOAPEXCEPTION(MESSAGES.GETMESSAGE(BADSOAPHEADER00));       IN SOAPHEADER.ADDCHILDELEMENT(SOAPELEMENT) SHOULD PROBABLY MOVE TO ADDCHILD(MESSAGEELEMENT). OTHERWISE CLASSCASTEXCEPTION MIGHT OCCUR IF ADDCHILD(MESSAGEELEMENT) IS USED. AND THE CHECK SHOULD PROBABLY BE FOR THE AXIS VERSION OF SOAPHEADERELEMENT. ","SUMMARY":"MINOR SOAPHEADERSOAPBODY ISSUES","CLASS":1}
{"ID_DEFECT":"AXIS-1289","DESCRIPTION":"IN AXIS 1.2, THERE SEEMS TO BE AN INCONSISTENCY IN THE USE OF APPLICATIONOCTETSTREAM (INCORRECT) AND APPLICATIONOCTET-STREAM FOR HANDLING MIME CONTENT AS DEFINED BY A WSDL.  AS A RESULT, THE REPRESENTATION SELECTED BY WSDL2JAVA FOR THE RESULTANT SOURCE CODE IS DATAHANDLER (GENERIC) INSTEAD OF OCTETSTREAM WHEN THE PROPER CONTENT TYPE IS USED.ALL REFERENCES TO APPLICATIONOCTETSTREAM SHOULD EITHER BE CORRECTED, OR SHOULD BE A BACKWARDS COMPATIBILITY OPTION WITH APPLICATIONOCTET-STREAM AS THE PREFERRED STRING. IT WOULD PROBABLY BE A GOOD IDEA TO DISALLOW FURTHER USE OF APPLICATIONOCTETSTREAM BY REMOVING IT COMPLETELY.","SUMMARY":"PROCESSING OF OCTET-STREAM CONTENT TYPE FOR MIME SOAP ATTACHMENTS","CLASS":1}
{"ID_DEFECT":"AXIS-1290","DESCRIPTION":"THE SOURCE CODE GENERATED FOR THE CLIENT <<>>BINDINGSTUB.JAVA FILE INCORRECTLY FORGETS TO CLEAR THE ATTACHMENTS THAT WERE RECEIVED FROM A CALL TO A WEB SERVICE.  AS A RESULT, THE NEXT CALL TO THE WEBSERVICE THINKS IT HAS ATTACHMENTS TO SEND WITH THE REQUEST AND THE REQUEST BECOMES CORRUPTED AND UN-INTERPRETABLE BY THE SERVER.","SUMMARY":"CLIENT <<>>BINDINGSTUB.JAVA FILE CORRUPTS THE NEXT CALL WHEN USING SOAP ATTACHMENTS","CLASS":1}
{"ID_DEFECT":"AXIS-1291","DESCRIPTION":"THE FOLLOWING EXCEPTION IS GENERATED WHEN RETURNTYPE IS SET TO XMLTYPE.AXIS_VOID IN THE STUB IN DOCLIT CASE (WHEN PARSING A REPLY):       HTTP:XML.APACHE.ORGAXISSTACKTRACE:ORG.XML.SAX.SAXEXCEPTION: DESERILIZING PARAMETER &APOS;REQUESTRESPONSE2RESPONSE&APOS;:  COULD NOT FIND DESERIALZER FOR TYPE HTTP:XML.APACHE.ORGAXISVOID       AT ORG.APACHE.AXIS.MESSAGE.RPCHANDLER.ONSTARTCHILD(RPCHANDLER.JAVA:277)       AT ORG.APACHE.AXIS.ENCODING.DESERIALIZATIONCONTEXTIMPL.STARTELEMENT(DESEIALIZATIONCONTEXTIMPL.JAVA:1001)       AT ORG.APACHE.AXIS.MESSAGE.SAX2EVENTRECORDER.REPLAY(SAX2EVENTRECORDER.JAA:159)       AT ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT.PUBLISHTOHANDLER(MESSAGEELEMEN.JAVA:1051)       AT ORG.APACHE.AXIS.MESSAGE.RPCELEMENT.DESERIALIZE(RPCELEMENT.JAVA:196)       AT ORG.APACHE.AXIS.MESSAGE.RPCELEMENT.GETPARAMS(RPCELEMENT.JAVA:310)       AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2381)       AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2280)       AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:1741)","SUMMARY":"COULD NOT FIND DESERIALZER FOR TYPE HTTP:XML.APACHE.ORGAXISVOID","CLASS":1}
{"ID_DEFECT":"AXIS-1292","DESCRIPTION":"IF I DONT HAVE LIBSERVLET.JAR, WHEN I GO TO COMPILE AXIS IT FAILS WITH LOTS OF DEPENDENCIES ON CLASSES IN JAVAX.SERVLET.*. IT DOESNT SURPRISE ME THAT THE BUILD DOESNT WORK WITHOUT SERVLET, BUT THE BUILDING-AXIS.HTML SUGGESTS ITS AN OPTIONAL COMPONENT. I SUGGEST EITHER FIXING THE DOCS OR FIXING THE BUILD.","SUMMARY":"BUILD REQUIRES SERVLET.JAR","CLASS":1}
{"ID_DEFECT":"AXIS-1294","DESCRIPTION":"AXIS 1.2BETA SEEMS TO BE IGNORING MY REQUESTING SENDXSITYPES=FALSE FOR AN RPCENCODED SERVICE. IF I SWAP OUT THE JARS TO USE AXIS1.1 IT WORKS, BUT THE EXACT SAME CONFIGURATION IS SENDING TYPES IN 1.2BETA.I TRIED TO CREATE A TEST FOR THIS IN THE AXIS 1.2 SOURCES BUT THE COMPLEXITY OF THE TEST SETUP DEFEATED ME. THE TEST ENCODINGTESTXSITYPE.JAVA SEEMS TO TEST THE BASICS OF XSITYPE CONTROL; MAYBE ITS JUST A CONFIGURATION ISSUE?HERES THE RELEVANT PART OF MY SERVERS WSDD, LOADED VIA WEB-INFSERVER.WSDD. OTHER PARTS OF THIS FILE ARE DEFINITELY LOADING.<DEPLOYMENT XMLNS=HTTP:XML.APACHE.ORGAXISWSDD XMLNS:JAVA=HTTP:XML.APACHE.ORGAXISWSDDPROVIDERSJAVA> <GLOBALCONFIGURATION>  <PARAMETER NAME=ADMINPASSWORD VALUE=XXXX>  <PARAMETER NAME=AXIS.DEVELOPMENT.SYSTEM VALUE=TRUE>  <PARAMETER NAME=ATTACHMENTS.DIRECTORY VALUE=TMPAXISGSE-ATTACHMENTS>  <PARAMETER NAME=SENDMULTIREFS VALUE=FALSE>  <PARAMETER NAME=SENDXSITYPES VALUE=FALSE>  <PARAMETER NAME=ATTACHMENTS.IMPLEMENTATION VALUE=ORG.APACHE.AXIS.ATTACHMENTS.ATTACHMENTSIMPL>  <PARAMETER NAME=SENDXMLDECLARATION VALUE=TRUE>  <PARAMETER NAME=AXIS.SENDMINIMIZEDELEMENTS VALUE=TRUE>","SUMMARY":"SENDXSITYPES NOT RESPECTED","CLASS":1}
{"ID_DEFECT":"AXIS-1296","DESCRIPTION":"A PART OF THE REQUESTRESPONSE XML SCHEMA OF OUR WEB SERVICE USES AN <XSD:ANY> ELEMENT TO TRANSPORT ARBITRARY XML CONTENT.USING WSDL2JAVA TO GENERATE THE JAVA BEANS, THE <XSD:ANY> CONTENT IS REPRESENTED USING AN ARRAY OF MESSAGEELEMENT OBJECTS, AVAILABLE VIA THE GET_ANY() METHOD.WHEN TRYING TO PASS AROUND THE GENERATED JAVA BEANS USING NATIVE JAVA SERIALIZATION (E.G., IN A REMOTE EJB CALL) A NOTSERIALIZABLEEXCEPTION OCCURS, IF THE JAVA BEAN CONTAINS A MESSAGEELEMENT AS DESCRIBED ABOVE.ALTHOUGH THE MESSAGEELEMENT IMPLEMENTS THE JAVA.IO.SERIALIZABLE INTERFACE, I SUSPECT IT IS IN FACT NOT SERIALIZABLE BECAUSE (AT LEAST IN MY CASE) IT SOMEHOW REFERENCES AN OPERATIONDESC OBJECT WHICH IS NOT SERIALIZABLE.","SUMMARY":"MESSAGEELEMENT IS NOT (JAVA) SERIALIZABLE","CLASS":1}
{"ID_DEFECT":"AXIS-1299","DESCRIPTION":"THE FOLLOWING WSDD: <SERVICE NAME=DEMO PROVIDER=JAVA:RPC STYLE=WRAPPED USE=LITERAL>  <PARAMETER NAME=ALLOWEDMETHODS VALUE=*>  <PARAMETER NAME=CLASSNAME VALUE=COM.GOOGLE.SOAP.BASE.DEMOSERVICE>  <BEANMAPPING QNAME=NS:DEMODATA XMLNS:NS=HTTP:DEMO.GOOGLE.COM LANGUAGESPECIFICTYPE=JAVA:COM.GOOGLE.SOAP.BASE.DEMOSERVICE$DEMODATA > <SERVICE>FOR A JAVA METHOD LIKE THIS:  PUBLIC STRING ECHOSTRING(STRING S)     RETURN S;  GENERATES WSDL WITH BITS LIKE THIS:      <WSDL:OPERATION NAME=ECHOSTRING PARAMETERORDER=>         <WSDL:INPUT NAME=ECHOSTRINGREQUEST MESSAGE=IMPL:ECHOSTRINGREQUEST >         <WSDL:OUTPUT NAME=ECHOSTRINGRESPONSE MESSAGE=IMPL:ECHOSTRINGRESPONSE >      <WSDL:OPERATION>WHICH SOAPSCOPES ANALYZE MODULE COMPLAINS ABOUT. IN PARTICULAR, IT SAYS THAT HAVING PARAMETERORDER= DOESNT MATCH THE WSDL SCHEMA: THE PARAMETERORDER ATTRIBUTE MUST HAVE AT LEAST ONE CHARACTER IN IT. IF I DECLARE THE SERVICE TO BE RPCENCODED IN THE WSDD THEN IT GENERATES THINGS LIKE PARAMETERORDER=S WHICH SEEMS PLAUSIBLE.PARAMETERORDER IS AN OPTIONAL ATTRIBUTE OF WSDL. IS IT SAFE TO LEAVE IT OFF? I BELIEVE WS-I BP1.0A SAYS THAT PARAMETER ORDER ALWAYS MATTERS AND FOR A DOCUMENTLITERAL SERVICE IT CAN JUST USE THE SCHEMA DEFINITION, RIGHT?","SUMMARY":"DOCUMENTLITERAL SERVICE GENERATES INVALID WSDL DOCUMENTORDER ATTRIBUTE","CLASS":1}
{"ID_DEFECT":"AXIS-1300","DESCRIPTION":"I BELIEVE THIS IS A BUG IN AXIS THAT WILL HAMPER PASSING BP1.0ATHE FOLLOWING BIT OF WSDD:<SERVICE NAME=DEMO PROVIDER=JAVA:RPC STYLE=WRAPPED USE=LITERAL>  <NAMESPACE>URN:DEMONAMESPACE<NAMESPACE>  <PARAMETER NAME=ALLOWEDMETHODS VALUE=*>  <PARAMETER NAME=CLASSNAME VALUE=DEMO.DEMOSERVICE>  <BEANMAPPING QNAME=NS:DEMODATA XMLNS:NS=URN:DEMONAMESPACE LANGUAGESPECIFICTYPE=JAVA:DEMO.DEMOSERVICE$DEMODATA ><SERVICE>RESULTS IN THE FOLLOWING BIT INSIDE MY WSDL:<WSDL:BINDING NAME=DEMOSOAPBINDING TYPE=IMPL:DEMOSERVICE>  <WSDLSOAP:BINDING STYLE=DOCUMENT TRANSPORT=HTTP:SCHEMAS.XMLSOAP.ORGSOAPHTTP >    <WSDL:OPERATION NAME=ECHOSTRING>      <WSDLSOAP:OPERATION SOAPACTION= >      <WSDL:INPUT NAME=ECHOSTRINGREQUEST>        <WSDLSOAP:BODY USE=LITERAL NAMESPACE=URN:DEMONAMESPACE >      <WSDL:INPUT>BP1.0A R2716 SAYS THAT THE WSDLSOAP:BODY ELEMENT SHOULD HAVE NO NAMESPACE ATTRIBUTE BECAUSE THE EMBEDDED SCHEMA FOR THE DOCLITERAL SERVICE WILL DEFINE IT. THE NAMESPACE AXIS IS PUTTING IN IS OK (IT MATCHES THE SCHEMA), BUT ITS INVALID ACCORDING TO SOAPSCOPES INTERPRETATION OF BP1.0A.I THINK THE FIX IS SIMPLY TO NOT EMIT THE NAMESPACE ATTRIBUTE, BUT ID SURE WANT TO RUN IT THROUGH A DOCUMENTLITERAL INTEROP SUITE BEFORE TRYING THAT.HTTP:WWW.WS-I.ORGPROFILESBASIC2003-08BASICPROFILE-1.0A.HTML#R2716","SUMMARY":"AXIS 1.2BETA PUTS NAMESPACE ON SOAPBODY FOR DOCUMENTLITERAL SERVICES; VIOLATES BP1.0A","CLASS":1}
{"ID_DEFECT":"AXIS-1305","DESCRIPTION":"TRY RUNNING JAVA2WSDL ON A CLASS WHICH USES A CLASS THAT IS NOT BEAN COMPATIBLE. ON AXIS1.1, IT CREATES THE WSDL WITH A WARNING. ON ACIS1.2 BETA IT ABORTS WITH A STACK TRACE. EXAMPLE: THE FOLLOWING TRADEITEM CLASS USES CLASS ITEMINFO WHICH DOES NOT HAVE A DEFAULT CONSTRUCTOR.PUBLIC CLASS TRADEITEM TTPUBLIC TRADESTATUS BUY(ITEMINFO ITEMINFO)TTTRADESTATUS STATUS = NEW TRADESTATUS(ITEMINFO);TTRETURN STATUS;TRUNNING ON AXIS 1.1 RESULTS IN THE FOLLOWING:C:PLAYSECTEST>AXJWSD -Y DOCUMENT -U LITERAL -L HTTP:LOCALHOST:8080AXISTRADEITEM TRADEITEMC:PLAYSECTEST>JAVA ORG.APACHE.AXIS.WSDL.JAVA2WSDL -Y DOCUMENT -U LITERAL -L HTTP:LOCALHOST:8080AXISTRADEITEM TRADEITEMAPR 12, 2004 11:41:35 PM ORG.APACHE.AXIS.WSDL.FROMJAVA.TYPES ISBEANCOMPATIBLEWARNING: THE CLASS ITEMINFO DOES NOT CONTAIN A DEFAULT CONSTRUCTOR, WHICH IS A REQUIREMENT FOR A BEAN CLASS.  THE CLASS CANNOT BE CONVERTED INTO AN XML SCHEMA TYPE.  AN XML SCHEMA ANYTYPE WILL BE USED TO DEFINE THIS CLASS IN THE WSDL FILE.APR 12, 2004 11:41:35 PM ORG.APACHE.AXIS.WSDL.FROMJAVA.TYPES ISBEANCOMPATIBLEWARNING: THE CLASS TRADESTATUS DOES NOT CONTAIN A DEFAULT CONSTRUCTOR, WHICH IS A REQUIREMENT FOR A BEAN CLASS.  THE CLASS CANNOT BE CONVERTED INTO AN XML SCHEMA TYPE.  AN XML SCHEMA ANYTYPE WILL BE USED TO DEFINE THIS CLASS IN THE WSDL FILE.WHEN RUNNING THE SAME ON AXIS 1.2 BETA THE FOLLOWING IS SEENC:PLAYSECTEST>JAVA ORG.APACHE.AXIS.WSDL.JAVA2WSDL -Y DOCUMENT -U LITERAL -L HTTP:LOCALHOST:8080AXISTRADEITEM TRADEITEMLOG4J:WARN NO APPENDERS COULD BE FOUND FOR LOGGER (ORG.APACHE.AXIS.I18N.PROJECTRESOURCEBUNDLE).LOG4J:WARN PLEASE INITIALIZE THE LOG4J SYSTEM PROPERLY.AXISFAULT FAULTCODE: HTTP:SCHEMAS.XMLSOAP.ORGSOAPENVELOPESERVER.GENERALEXCEPTION FAULTSUBCODE: FAULTSTRING: PLEASE REGISTER A TYPEMAPPINGBEANMAPPING FOR ITEMINFO FAULTACTOR: FAULTNODE: FAULTDETAIL:        HTTP:XML.APACHE.ORGAXISSTACKTRACE:AXISFAULT FAULTCODE: HTTP:SCHEMAS.XMLSOAP.ORGSOAPENVELOPESERVER.GENERALEXCEPTION FAULTSUBCODE: FAULTSTRING: PLEASE REGISTER A TYPEMAPPINGBEANMAPPING FOR ITEMINFO FAULTACTOR: FAULTNODE: FAULTDETAIL:PLEASE REGISTER A TYPEMAPPINGBEANMAPPING FOR ITEMINFO        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.WRITEPARTTOMESSAGE(EMITTER.JAVA:1810)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.WRITEREQUESTMESSAGE(EMITTER.JAVA:1386)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.WRITEMESSAGES(EMITTER.JAVA:1034)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.WRITEPORTTYPE(EMITTER.JAVA:1005)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.GETWSDL(EMITTER.JAVA:459)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.EMIT(EMITTER.JAVA:310)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.EMIT(EMITTER.JAVA:405)        AT ORG.APACHE.AXIS.WSDL.JAVA2WSDL.RUN(JAVA2WSDL.JAVA:583)        AT ORG.APACHE.AXIS.WSDL.JAVA2WSDL.MAIN(JAVA2WSDL.JAVA:629)PLEASE REGISTER A TYPEMAPPINGBEANMAPPING FOR ITEMINFO        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.WRITEPARTTOMESSAGE(EMITTER.JAVA:1810)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.WRITEREQUESTMESSAGE(EMITTER.JAVA:1386)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.WRITEMESSAGES(EMITTER.JAVA:1034)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.WRITEPORTTYPE(EMITTER.JAVA:1005)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.GETWSDL(EMITTER.JAVA:459)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.EMIT(EMITTER.JAVA:310)        AT ORG.APACHE.AXIS.WSDL.FROMJAVA.EMITTER.EMIT(EMITTER.JAVA:405)        AT ORG.APACHE.AXIS.WSDL.JAVA2WSDL.RUN(JAVA2WSDL.JAVA:583)        AT ORG.APACHE.AXIS.WSDL.JAVA2WSDL.MAIN(JAVA2WSDL.JAVA:629)C:PLAYSECTEST>","SUMMARY":"JAVA2WSDL REGRESSION IN 1.2 BETA","CLASS":1}
{"ID_DEFECT":"AXIS-1310","DESCRIPTION":"QUOTING FROM THE JAXRPC SPECIFICATION BELOW, IT LOOKS LIKE THE FAULT PROCESSING WITHIN A CHAIN OF JAXRPC HANDLERS IS NOT WORKING PROPERLY.SEE BELOW FOR DETAILS.....THROW THE JAVAX.XML.RPC.SOAP.SOAPFAULTEXCEPTION TO INDICATE A SOAP FAULT. THE HANDLER IMPLEMENTATION CLASS HAS THE RESPONSIBILITY OF SETTING THE SOAP FAULT IN THE SOAP MESSAGE IN EITHER HANDLEREQUEST ANDOR HANDLEFAULT METHOD. IF SOAPFAULTEXCEPTION IS THROWN BY A SERVER-SIDE REQUEST HANDLERS HANDLEREQUEST METHOD, THE HANDLERCHAIN TERMINATES THE FURTHER PROCESSING OF THE REQUEST HANDLERS IN THIS HANDLER CHAIN AND INVOKES THE HANDLEFAULT METHOD ON THE HANDLERCHAINWITH THE SOAP MESSAGE CONTEXT. NEXT, THE HANDLERCHAIN INVOKES THE HANDLEFAULT METHOD ON HANDLERS REGISTERED IN THE HANDLER CHAIN, BEGINNING WITH THE HANDLER INSTANCE THAT THREW THE EXCEPTION AND GOING BACKWARD IN EXECUTION. THE CLIENT-SIDE REQUEST HANDLERS HANDLEREQUEST METHOD SHOULD NOT THROW THE SOAPFAULT-EXCEPTION. REFER TO THE SOAP SPECIFICATION FOR DETAILS ON THE VARIOUS SOAP FAULTCODE VALUES AND CORRESPONDING SPECIFICATION.USING THE FOLLOWING DD AS AN EXAMPLE:<SERVICE NAME=MYSERVICE PROVIDER=HANDLER>     <HANDLERINFOCHAIN>         <HANDLERINFO CLASSNAME=X.Y.AAAHANDLER>         <HANDLERINFO CLASSNAME=X.Y.BBBHANDLER>         <HANDLERINFO CLASSNAME=X.Y.CCCHANDLER>         <HANDLERINFO CLASSNAME=X.Y.DDDHANDLER>         <HANDLERINFO CLASSNAME=X.Y.EEEHANDLER>    <HANDLERINFOCHAIN>  <PARAMETER NAME=HANDLERCLASS VALUE=X.Y.SERVICEHANDLER><SERVICE>DURING TESTING, WE THROW A SOAPFAULTEXCEPTION DURING A CALL TOX.Y.DDDHANDLER.HANDLEREQUEST(MESSAGECONTEXT CTX) PUBLIC VOID HANDLEREQUEST(MESSAGECONTEXT CTX)    THROW NEW SOAPFAULTEXCEPTION(....);BUT ONLY X.Y.DDDHANDLERS HANDLEFAULT(...) IS INVOKED.  WE ARE EXPECTING THAT EACH HANDLERCONFIGURED PREVIOUS TO DDDHANDLER IN THE<HANDLERINFOCHAIN> WOULD HAVE THEIR RESPECTIVE HANDLEFAULT(...) CALLED. BELOW SHOWS IN MORE DETAIL THE EXPECTED COURSE OF ACTION (ACCORDING TO THE JAXRPC1.1 SPECIFICATION) AND  THE AXIS 1.2 BEHAVIOR IN MORE DETAIL.EXPECTED COURSE OF ACTION:    -- START OF CHAIN ---    AAAHANDLER.HANDLEREQUEST()    BBBHANDLER.HANDLEREQUEST()    CCCHANDLER.HANDLEREQUEST()    DDDHANDLER.HANDLEREQUEST() THROWS SOAPFAULTEXCEPTION    DDDHANDLER.HANDLEFAULT()     CCCHANDLER.HANDLEFAULT()     BBBHANDLER.HANDLEFAULT()     AAAHANDLER.HANDLEFAULT()     -- END OF CHAIN --- AXIS 1.2 BEHAVIOR    -- START OF CHAIN --    AAAHANDLER.HANDLEREQUEST()    BBBHANDLER.HANDLEREQUEST()    CCCHANDLER.HANDLEREQUEST()    DDDHANDLER.HANDLEREQUEST() THROWS SOAPFAULTEXCEPTION    DDDHANDLER.HANDLEFAULT()     -- END OF CHAIN -- ","SUMMARY":"FAULT PROCESSING FOR JAXRPC HANDLER CHAIN NOT TO SPEC","CLASS":1}
{"ID_DEFECT":"AXIS-1316","DESCRIPTION":"WSDDTRANSPORT EXTENDS FROM WSDDTARGETEDCHAIN (ALL FROM ORG.APACHE.AXIS.DEPLOYMENT.WSDD). THE MAKENEWINSTANCE(ENGINECONFIGURATION) METHOD OF WSDDTARGETCHAIN HOWEVER, DOES NOT PASS THE PARAMETERS (LOCKABLEHASHTABLE) TO THE SIMPLETARGETCHAIN BEFORE RETURNING IT. THEREFORE THE PARAMETERS CONFIGURED IN THE <TRANSPORT> ELEMENT IN SERVER-CONFIG.WSDD FILE WERE NEVER PASSED OVER TO THE TRANSPORT. THIS AFFECTS DEPLOYING CUSTOM QUERY STRING PLUG-IN IN AXIS SERVLET. ACCORDING TO AXIS DEVELOPER GUIDE AND REFERENCE HTTP:WS.APACHE.ORGAXISJAVADEVELOPERS-GUIDE.HTML#AXIS%20SERVLET%20QUERY%20STRING%20PLUG-INSONE CAN HAVE:  <TRANSPORT NAME=HTTP>    <PARAMETER NAME=USEDEFAULTQUERYSTRINGS VALUE=FALSE >     <PARAMETER NAME=QS.MYSTRING VALUE=MY.PLUGIN.CLASS >    <REQUESTFLOW>      <HANDLER TYPE=URLMAPPER>    <REQUESTFLOW>  <TRANSPORT>TO OVERRIDE THE DEFAULT QUERY STRING PROCESSORS. THIS BUG MAKES THIS FEATURE IMPOSSIBLE.SUGGEST THE FOLLOWING CHANGES:*** WSDDTARGETEDCHAIN.JAVATTHU APR 15 01:04:04 2004--- WSDDTARGETEDCHAIN.JAVA(CVS)TTHU APR 15 01:04:04 2004****************** 172,182 ****          IF (RESP != NULL)              RESPHANDLER = RESP.GETINSTANCE(REGISTRY);  !         HANDLER RETVAL = NEW ORG.APACHE.AXIS.SIMPLETARGETEDCHAIN(REQHANDLER, PIVOT,!                                                                  RESPHANDLER);!         RETVAL.SETOPTIONS(GETPARAMETERSTABLE());! !         RETURN RETVAL;              **--- 172,179 ----          IF (RESP != NULL)              RESPHANDLER = RESP.GETINSTANCE(REGISTRY);  !         RETURN NEW ORG.APACHE.AXIS.SIMPLETARGETEDCHAIN(REQHANDLER, PIVOT,!                                                        RESPHANDLER);              **THANKS","SUMMARY":"WSDDTARGETEDCHAIN MAKENEWINSTANCE DIDNT PASS PARAMETERS TO SIMPLETARGETCHAIN","CLASS":1}
{"ID_DEFECT":"AXIS-1319","DESCRIPTION":"USING THE ATTACHED SCHEMA FRAGMENT IN A WSDL DEFINITION, WSDL2JAVA GENERATES THE ATTACHED CRYPTOBINARY.JAVA CLASS. IT CONTAINS THE FOLLOWING METHODS:     SIMPLE TYPES MUST HAVE A STRING CONSTRUCTOR    PUBLIC CRYPTOBINARY(JAVA.LANG.STRING VALUE)         THIS.VALUE = ORG.APACHE.AXIS.TYPES.HEXBINARY.DECODE(VALUE);         SIMPLE TYPES MUST HAVE A TOSTRING FOR SERIALIZING THE VALUE    PUBLIC JAVA.LANG.STRING TOSTRING()         RETURN VALUE == NULL ? NULL : ORG.APACHE.AXIS.TYPES.HEXBINARY.ENCODE(VALUE);    SINCE THESE METHODS ARE ACTUALLY USED TO (DE)SERIALIZE THE ELEMENT, THE OUTPUT SHOWS    <NS3:RSAKEYVALUE>     <NS3:MODULUS>6162636465666731323334353132333435E4F6E4F6FC<NS3:MODULUS>     <NS3:EXPONENT>3132333435<NS3:EXPONENT>    <NS3:RSAKEYVALUE>WHICH IS HEX ENCODED (AND NOT BASE64BINARY).","SUMMARY":"WSDL2JAVA: INCORRECT HANDLING OF XSD:BASE64BINARY?","CLASS":1}
{"ID_DEFECT":"AXIS-1321","DESCRIPTION":"GIVEN THAT PRIMITIVE TYPES LIKE INT, BOOLEAN, DOUBLE AND SO ON ARE ALLOWED TO BE NILLABLE, WHICH I ASSUME THEY ARE EVEN THOUGH IM NOT QUITE SURE, IN THE WSDL FILE THEY SHOULD YIELD SOME KIND OF WRAPPER CLASS SO THAT IT CAN BE NULL, RIGHT? IM TRYING TO SET A BOOLEAN AS NILLABLE IN MY WSDL FILE BUT THE GENERATED CLASSES SIMPLY PUTS A BOOLEAN THERE WHICH MAKES IT RATHER DIFFCULT TO REGARD THE PARAMETER AS OPTIONAL.","SUMMARY":"NILLABLE ATTRIBUTE YIELDS PRIMITIVE TYPE","CLASS":1}
{"ID_DEFECT":"AXIS-1322","DESCRIPTION":"I ADDED DOCUMENTATION FOR MY OPERATIONS IN WSDD USING <DOCUMENTATION> TAG.  <OPERATION NAME=MYOPERATION SOAPACTION=>   <DOCUMENTATION>THIS IS MY DOCUMENTATION<DOCUMENTATION>  <OPERATION>[...]HOWEVER WHEN I GET THE WSDL USING ?WSDL, <WSDL:PORTTYPE NAME=MYPORTTYPE>T<WSDL:OPERATION NAME=MYOPERATION>T<DOCUMENTATION>THIS IS MY DOCUMENTATIONT<DOCUMENTATION>[...]DOCUMENTATION TAG IS NOT PREFIXED BY WSDL.WHEN I TRY TO GENERATE JAVA FILES FROM WSDL I GET ERRORS BECAUSE <DOCUMENTATION> IS NOT RECOGNIZED.","SUMMARY":"WSDL:DOCUMENTATION TAG IN WSDL IS NOT PREFIXED BY WSDL: WHEN WSDL IS GENERATED","CLASS":1}
{"ID_DEFECT":"AXIS-1324","DESCRIPTION":"HAVING A SIMPLE WEBSERVICE WITH AN ECHOSTRING METHOD (IT RETURNS THE SAME STRING PASSED AS A PARAMETER), THE RETURNED STRING IS CORRUPTED IF IT CONTAINS ACCENTS OR ANY OTHER NON-ASCII CHARACTER.MY TEST CLIENT EXECUTES WITH FILE.ENCODING=ISO-8859-1AXIS CORRECTLY ENCODES THE PARAMETER IN UTF-8 WHEN SENDING THE REQUEST, AND THE SERVER CORRECTLY SENDS THE RESPONSE IN UTF-8. BUT THE RECEIVED STRING IS NOT CORRECTLY CONVERTED TO MY ENCODING, AND I MUST CONVERT IT MANUALLY:  STRING RESULT = TEST.ECHOSTRING(ORIGINAL);  RESULT = NEW STRING(RESULT.GETBYTES(), UTF-8);THIS CONVERSION OPERATION SHOULD BE DONE BY THE DESERIALIZER","SUMMARY":"THE CLIENT DOES NOT CORRECTLY HANDLE STRINGS WITH INTERNATIONAL CHARACTERS","CLASS":1}
{"ID_DEFECT":"AXIS-1327","DESCRIPTION":"IF YOU ATTEMPT TO DELETE SOAP HEADERS FROM AN INSTANCE OF ORG.APACHE.AXIS.MESSAGE.SOAPENVELOPE USING REMOVEHEADERS(), THE BEHAVIOR WHEN TRYING TO SERIALIZE THE ENVELOPE IS NOT WHAT YOU WOULD EXPECT.....  IT KEEPS THE HEADERS.THIS IS DUE TO THE FACT THAT MESSAGEELEMENT.OUTPUT(SERIALIZATIONCONTEXT CONTEXT) HAS THE FOLLOWING CHECKIF ((RECORDER != NULL) && (!_ISDIRTY))             RECORDER.REPLAY(STARTEVENTINDEX,                            ENDEVENTINDEX,                            NEW SAXOUTPUTTER(CONTEXT));            RETURN;IN THIS CASE _ISDIRTY IS FALSE AND WILL INVOKE THIS BLOCK OF CODE, BUTIT SHOULD INVOKE THE CODE BELOW IT.BELOW IS A HANDLER THAT DEMONSTRATES THE CODE EXECUTION....PUBLIC CLASS XYZSERVICEHANDLERTEXTENDS BASICHANDLER    PUBLIC VOID INVOKE(MESSAGECONTEXT MSGCONTEXT) THROWS AXISFAULT            TRY             SYSTEM.OUT.PRINTLN(BEFORE REMOVE..........);            MSGCONTEXT.GETCURRENTMESSAGE().WRITETO(SYSTEM.OUT);            SOAPMESSAGE SOAPMESSAGE  = MSGCONTEXT.GETCURRENTMESSAGE();            SOAPENVELOPE ENV = (ORG.APACHE.AXIS.MESSAGE.SOAPENVELOPE)SOAPMESSAGE.GETSOAPPART().GETENVELOPE();            ENV.REMOVEHEADERS();            SYSTEM.OUT.PRINTLN(AFTER..........);            MSGCONTEXT.GETCURRENTMESSAGE().WRITETO(SYSTEM.OUT);                CATCH (EXCEPTION E)             E.PRINTSTACKTRACE();            JUST NEED TO SET _ISDIRTY TO TRUE IN SOAPENVELOPER.REMOVEHEADERS()","SUMMARY":"SOAPENVELOPE.REMOVEHEADERS() DOES NOT WORK IN CONTEXT OF SERIALIZATION","CLASS":1}
{"ID_DEFECT":"AXIS-1332","DESCRIPTION":"THIS IS A REVIVAL OF BUG [AXIS-579]   ELEMENT NOT SPECIFIED WITH NILLABLE=TRUE IN THE WSDL SHOULD BE SENT OVER THE WIRE.  I HAVE ATTACHED A STRIPPED-DOWN WSDL AND A MAIN FILE TO ILLUMINATE THE PROBLEMS.IVE TESTED THIS AGAINST 1.1 AND 1.2BETA.BTW, THE FREE CAPECLEAR.COM SOA EDITOR (WINDOWS) MADE IT VERY EASY TO STRIP DOWN THE 500K WSDL FILE TO CREATE THIS TEST EXAMPLE.  HIGHLY RECOMMENDED.","SUMMARY":"NILLABLE PROBLEMS IN CLIENT-SIDE GENERATION","CLASS":1}
{"ID_DEFECT":"AXIS-1335","DESCRIPTION":"AS PER THE JAX-RPC SPECIFICATION, WHEN A JAX-RPC HANDLER RETURNS A VALUE FALSE FROM HANDLEREQUEST, IT IS THE RESPONSIBILITY OF THE HANDLER TO SET THE APPROPRIATE RESPONSE MESSAGE, DURING THE INVOCATION OF HANDLEREQUEST.  SEE BELOW FOR RELEVANT SPECIFICATION DOCUMENTATION.  IF I AM MISINTERPRETING, PLEASE LET ME KNOW!! WITH THAT SAID, A JAX-RPC COMPLIANT HANDLER USED WITHIN AXIS CANNOT ACHIEVE THE DESIRED RESULTS IN THIS SCENARIO.  WHEN THE HANDLE CALLSSETMESSAGE(SOAPMESSAGE) TO SET THE RESPONSE MESSAGE, THE ACTUAL IMPLEMENTATION OF MESSAGECONTEXT SETS THIS VALUE TO THE INTERNAL REQUESTMESSAGE BECAUSE HAVEPASTPIVOT IS SET TO FALSE.  THE INTERNAL METHOD OF MESSAGECONTEXT IS SETCURRENTMESSAGE().THE FOLLOWING CODE SNIPPET AND DOCUMENTAITON EXPLAINS IN MORE DETAIL.  FULL HANDLER IS ATTACHED.PUBLIC BOOLEAN HANDLEREQUEST(MESSAGECONTEXT CONTEXT)     SOAPMESSAGECONTEXT SOAPMSGCONTEXT = (SOAPMESSAGECONTEXT)CONTEXT;    SOAPMESSAGE FAULTMESSAGE = BUILDFAULTMESSAGE();     SETTING THE FAULT MESSAGE FOR THE RESPONSE ENVELOPE, HOWEVER     SINCE THIS IS A JAX-RPC HANDLER USING AXIS AND     ORG.APACHE.AXIS.MESSAGECONTEXT AS A CONCRETE IMPLEMENTATION     HAVEPASTPIVOT IS SET TO FALSE SO THIS FAULT MESSAGE     WILL BE ASSIGNED TO THE REQUEST MESSAGE!!    SOAPMSGCONTEXT.SETMESSAGE(FAULTMESSAGE);    RETURN FALSE; PUBLIC VOID SETCURRENTMESSAGE(MESSAGE CURMSG)   CURMSG.SETMESSAGECONTEXT(THIS);        IF (HAVEPASSEDPIVOT)             RESPONSEMESSAGE = CURMSG;         ELSE             REQUESTMESSAGE = CURMSG;            -- START RELEVANT JAX-RPC 1.1 DOCUMENTATION ----RETURN FALSE TO INDICATE BLOCKING OF THE REQUEST HANDLER CHAIN. IN THIS CASE, FURTHER PROCESSING OF THE REQUEST HANDLER CHAIN IS BLOCKED AND THE TARGET SERVICE ENDPOINT IS NOT DISPATCHED. THE JAX-RPC RUNTIME SYSTEM TAKES THE RESPONSIBILITY OF INVOKING THE RESPONSE HANDLER CHAIN NEXT WITH THE APPROPRIATE SOAPMESSAGECONTEXT. THE HANDLER IMPLEMENTATION CLASS HAS THE RESPONSIBILITY OF SETTING THE RESPONSE SOAP MESSAGE IN THE HANDLEREQUEST METHOD AND PERFORM ADDITIONAL PROCESSING IN THE HANDLERESPONSE METHOD. IN THE DEFAULT PROCESSING MODEL, THE RESPONSE HANDLER CHAIN STARTS PROCESSING FROM THE SAME HANDLER INSTANCE (THAT RETURNED FALSE) ANDGOES BACKWARD IN THE EXECUTION SEQUENCE.-- END RELEVANT JAX-RPC 1.1 DOCUMENTATION ----","SUMMARY":"MESSAGECONTEXT.SETMESSAGE() CLASHES WITH JAX-RPC HANDLER BEHAVIOR","CLASS":1}
{"ID_DEFECT":"AXIS-1342","DESCRIPTION":"IF WE USE WSDL2JAVA WITH RPCLIT OR DOCLIT TO GENERATE A RELATED JAVA CLASSES WITH THE SCHEMA TYPE BELOW, <XS:COMPLEXTYPE NAME=ATTRIBUTEDURI> <XS:SIMPLECONTENT>  <XS:EXTENSION BASE=XS:ANYURI>   <XS:ANYATTRIBUTE NAMESPACE=##OTHER PROCESSCONTENTS=LAX>  <XS:EXTENSION> <XS:SIMPLECONTENT><XS:COMPLEXTYPE>WE WILL OBTAIN A TYPEMAPPING IN THE DEPLOYMENT DESCRIPTOR LIKE THIS: <TYPEMAPPING XMLNS:NS=HTTP:TEST.COM QNAME=NS:ATTRIBUTEDURI TYPE=JAVA:ORG.APACHE.AXIS.TYPES.URI SERIALIZER=ORG.APACHE.AXIS.ENCODING.SER.SIMPLESERIALIZERFACTORY DESERIALIZER=ORG.APACHE.AXIS.ENCODING.SER.SIMPLEDESERIALIZERFACTORYENCODINGSTYLE=>, WHICH IS A WRONG TYPE MAPPING GENERATION. THE CORRECT TYPE SHOULD BE COM.TEST.ATTRIBUTEDURI RATHER THAN ORG.APAHCE.AXIS.TYPES.URI.THIS WOULD LEAD US TO FAIL WHILE DESERIALIZING THE MESSAGE WITH SUCH ATTRIBUTEDURI TYPE INSIDE THE AXIS PROCESSING.","SUMMARY":"WRONG TYPE MAPPING GENERATED BY WSDL2JAVA IN WSDD","CLASS":1}
{"ID_DEFECT":"AXIS-1345","DESCRIPTION":"WHEN FEEDING ORG.APACHE.AXIS.WSDL.WSDL2JAVA -S -S TRUEWITH THE FOLLOWING WSDL:<?XML VERSION=1.0 ENCODING=UTF-8?><WSDL:DEFINITIONS XMLNS:WSDL=HTTP:SCHEMAS.XMLSOAP.ORGWSDL XMLNS:SOAP=HTTP:SCHEMAS.XMLSOAP.ORGWSDLSOAP XMLNS:HTTP=HTTP:SCHEMAS.XMLSOAP.ORGWSDLHTTP XMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMA XMLNS:SOAPENC=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING XMLNS:MIME=HTTP:SCHEMAS.XMLSOAP.ORGWSDLMIME XMLNS:MYNS=HTTP:BUGDEMOMYNS TARGETNAMESPACE=HTTP:BUGDEMOMYNS>T<WSDL:TYPES>TT<XSD:SCHEMA XMLNS:CCNT_VD=VERKEHRSDATEN.XSD XMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMA ELEMENTFORMDEFAULT=QUALIFIED ATTRIBUTEFORMDEFAULT=UNQUALIFIED TARGETNAMESPACE=HTTP:BUGDEMOMYNS>TTT<XSD:ELEMENT NAME=GET>TTTT<XSD:COMPLEXTYPE>TTTTT<XSD:SEQUENCE>TTTTTT<XSD:ELEMENT NAME=USERNAME TYPE=XSD:STRING>TTTTT<XSD:SEQUENCE>TTTT<XSD:COMPLEXTYPE>TTT<XSD:ELEMENT>TTT<XSD:ELEMENT NAME=GETRESPONSE>TTTT<XSD:COMPLEXTYPE>TTTTT<XSD:SEQUENCE>TTTTTT<XSD:ELEMENT NAME=GREETING TYPE=XSD:STRING>TTTTT<XSD:SEQUENCE>TTTT<XSD:COMPLEXTYPE>TTT<XSD:ELEMENT>TT<XSD:SCHEMA>T<WSDL:TYPES>T<WSDL:MESSAGE NAME=GETMESSAGE>TT<WSDL:PART NAME=PARAMETER ELEMENT=MYNS:GET>T<WSDL:MESSAGE>T<WSDL:MESSAGE NAME=GETRESPONSEMESSAGE>TT<WSDL:PART NAME=PARAMETER ELEMENT=MYNS:GETRESPONSE>T<WSDL:MESSAGE>T<WSDL:PORTTYPE NAME=GETPORT>TT<WSDL:OPERATION NAME=GETOPERATION>TTT<WSDL:INPUT MESSAGE=MYNS:GETMESSAGE>TTT<WSDL:OUTPUT MESSAGE=MYNS:GETRESPONSEMESSAGE>TT<WSDL:OPERATION>T<WSDL:PORTTYPE>T<WSDL:BINDING NAME=READBINDING TYPE=MYNS:GETPORT>TT<SOAP:BINDING STYLE=DOCUMENT TRANSPORT=HTTP:SCHEMAS.XMLSOAP.ORGSOAPHTTP>TT<WSDL:OPERATION NAME=GETOPERATION>TTT<SOAP:OPERATION SOAPACTION=URN:MY-SERVER>TTT<WSDL:INPUT>TTTT<SOAP:BODY USE=LITERAL>TTT<WSDL:INPUT>TTT<WSDL:OUTPUT>TTTT<SOAP:BODY USE=LITERAL>TTT<WSDL:OUTPUT>TT<WSDL:OPERATION>T<WSDL:BINDING>T<WSDL:SERVICE NAME=PARKINFO>TT<WSDL:PORT NAME=PARKINFO BINDING=MYNS:READBINDING>TTT<SOAP:ADDRESS LOCATION=HTTP:MYURL>TT<WSDL:PORT>T<WSDL:SERVICE><WSDL:DEFINITIONS>THE GENERATED CODE CONTAINS SOME CALLS TO THE QNAME CLASSCONSTRUCTOR WITH STRANGELY DECORATED ELEMENT NAMES, LIKE:NEW JAVAX.XML.NAMESPACE.QNAME(HTTP:192.168.1.23PARKINFO, >GET)IN THE READBINDINGSKELETON.JAVA, BUT ALSO IN OTHER GENERATED CODE.FURTEHRMORE, THE GENERATED DEPLOY.WSDD CONTAINS TYPEMAPPING ELEMENTS LIKE:TT<TYPEMAPPING XMLNS:NS=HTTP:BUGDEMOMYNS QNAME=NS:>GET TYPE=JAVA:DE.SYCADA.BUGDEMO.SERVER._GET SERIALIZER=ORG.APACHE.AXIS.ENCODING.SER.BEANSERIALIZERFACTORY DESERIALIZER=ORG.APACHE.AXIS.ENCODING.SER.BEANDESERIALIZERFACTORY ENCODINGSTYLE=>WITH THE SAME STRANGE DECORATOR IN THE QNAME.IN NESTED ELEMENTS, THIS LEADS TO QNAMES LIKE >DATA>TIMESTAMP.","SUMMARY":"WSDL2JAVA CREATES STRANGE DECORATED QNAMES","CLASS":1}
{"ID_DEFECT":"AXIS-1347","DESCRIPTION":"PROCESSING THE FOLLOWING WSDL CAUSES WSDL2JAVA TO THROW A DUPLICATEFILEEXCEPTION. THIS IS CAUSED BY A WRONG DETERMINITION FOR THE JAVA FILENAME FOR THE TYPE FOOTYPE.WSDL:<?XML VERSION=1.0 ENCODING=UTF-8?><DEFINITIONS    NAME=ABC    TARGETNAMESPACE=HTTP:FOO.COMSERVICESABC    XMLNS=HTTP:SCHEMAS.XMLSOAP.ORGWSDL    XMLNS:SERVICE=HTTP:FOO.COMSERVICESABC    XMLNS:TYPES=HTTP:FOO.COMTYPESABC    XMLNS:SOAP=HTTP:SCHEMAS.XMLSOAP.ORGWSDLSOAP    XMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMA>    <!--    <IMPORT LOCATION=FOOTYPES.XSD NAMESPACE=HTTP:FOO.COMTYPESABC>    -->    <TYPES>    <XSD:SCHEMA  TARGETNAMESPACE=HTTP:FOO.COMTYPESABC TTTXMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMA TTTXMLNS:TYPES=HTTP:FOO.COMTYPESABC>T<XSD:SIMPLETYPE NAME=FOOENUM>TT<XSD:RESTRICTION BASE=XSD:NORMALIZEDSTRING>TTT<XSD:ENUMERATION VALUE=A>TTT<XSD:ENUMERATION VALUE=B>TTT<XSD:ENUMERATION VALUE=C>TTT<XSD:ENUMERATION VALUE=D>TT<XSD:RESTRICTION>T<XSD:SIMPLETYPE>T<XSD:COMPLEXTYPE NAME=FOOTYPE>TT<XSD:SIMPLECONTENT>TTT<XSD:EXTENSION BASE=TYPES:FOOENUM>TT<XSD:SIMPLECONTENT>T<XSD:COMPLEXTYPE><XSD:SCHEMA>    <TYPES>    <MESSAGE NAME=MSG_IN>        <PART NAME=IN TYPE=TYPES:FOOTYPE>    <MESSAGE>    <MESSAGE NAME=MSG_OUT>        <PART NAME=OUT TYPE=XSD:STRING>    <MESSAGE>    <PORTTYPE NAME=ABC_PORT>        <OPERATION NAME=REQUEST>            <INPUT MESSAGE=SERVICE:MSG_IN>            <OUTPUT MESSAGE=SERVICE:MSG_OUT>        <OPERATION>    <PORTTYPE>    <BINDING NAME=ABC_BINDING TYPE=SERVICE:ABC_PORT>        <SOAP:BINDING STYLE=DOCUMENT TRANSPORT=HTTP:SCHEMAS.XMLSOAP.ORGSOAPHTTP>        <OPERATION NAME=REQUEST>            <SOAP:OPERATION>            <INPUT>                <SOAP:BODY USE=LITERAL>            <INPUT>            <OUTPUT>                <SOAP:BODY USE=LITERAL>            <OUTPUT>        <OPERATION>    <BINDING>    <SERVICE NAME=ABC>        <PORT BINDING=SERVICE:ABC_BINDING NAME=ABC>            <SOAP:ADDRESS LOCATION=HTTP:LOCALHOST:8080AXISSERVICESABC>        <PORT>    <SERVICE><DEFINITIONS>","SUMMARY":"WSDL2JAVA GENERATES WRONG JAVACLASS NAME CAUSING DUPLICATEFILEEXCEPTION","CLASS":1}
{"ID_DEFECT":"AXIS-1350","DESCRIPTION":"AS SOME OF MY TYPES ARE MAPPED TO MESSAGEELEMENT I WOULD LIKE TO USE IT INTERNALLY. IF I DO SOMETHING LIKE THAT:ELEMENT E = ROOTDOC.CREATEELEMENT(...);MESSAGEELEMENT M = NEW MESSAGEELEMENT(E);M.HASCHILDNODES();AN EXCEPTION IS RISEN BECAUSE MESSAGEELEMENT DOES NOT CONSIDER ITS ATTRIBUTE ELEMENTREP (CREATED BY NEW MESSAGEELEMENT(E)).THE FOLLOWING PATCH DELEGATES ALL METHODS OF THE ELEMENT INTERFACE TO ELEMENTREP IF IT WAS ASSIGNED AN ELEMENT.","SUMMARY":"NEW MESSAGEELEMENT(NEW ELEMENT()) DOES NOT BEHAVE LIKE AN ELEMENT","CLASS":1}
{"ID_DEFECT":"AXIS-1352","DESCRIPTION":"LAST YEAR WE HAVE BUILD A WEB SERVICE FOR A CLIENT THAT NEED HIGHER PERFORMANCE. THE SERVICE WAS FIRST BUILD WITH AXIS 1.1 BUT AFTER INVESTIGATING PERFORMANCE PROBLEMS WE MOVE TO SUNS JWSDP 1.3. THE PROBLEM IS THAT THE TRANSPORT OF THE SERVICE MUST BE HTTPS. SO USING SSL SEEM TO KILLS THE PERFORMANCE OF THE SERVICE. I BUILD A TESTING ENVIRONNEMENT TO INVESTIGATE THE PROBLEM.I HAVE BUILD A SIMPLE AXIS 1.1 CLIENTSERVER SERVICE AND THE SAME SERVICE USING SUNS JWSDP 1.3.SO THE SERVERS WERE INSTALL IN TOMCAT ON THE SERVER DESCRIBE IN THE ENVIRONMENT.THE TEST CLIENTS RUNS ON WINDOWS.SINCE WE NEED TO BUILD A NEW WEB SERVICE I NEED TO KNOW IF YOU PLAN TO FIX THAT ISSUE FOR 1.2.THE SERVICE EXPOSE 10 METHODS WITH VARIABLE PARAMETER LENGTH.HERES THE RESULT:ID IS JUST AN THREAD ID.GC MEANS THE TIME TO GET THE CONNECTION ON THE SERVICE.FC IS THE FIRST CALL TO THE WEB SERVICE.M0-M9 REPRESENT THE TIME TAKEN BY EACH METHODS.TOTAL IS THE TOTAL TIME TAKEN TO INVOKE THE 10 METHODS.THE SIZE OF THE TOTAL PARAMETER USED FOR EACH METHODS IS ALSO INDICATED.USING SSL (SUNS VERSION) 1 THREADS 20 CHARS LONG 100 ITER:WSBENCHMARKING CLIENT IS STARTED AT: TUE OCT 28 17:05:56 EST 2003THE 0 THREAD IS STARTING...THE 0 THREAD IS ENDING...RESULT OF THE BENCHMARK:ID      GC      FC      M0      M1      M2      M3      M4      M5      M6      M7      M8      M9  TOTAL0       1156    984     10      9       9       11      13      16      17      25      43      91  244M0:20 BYTESM1:60 BYTESM2:140 BYTESM3:300 BYTESM4:620 BYTESM5:1260 BYTESM6:2540 BYTESM7:5100 BYTESM8:10220 BYTESM9:20460 BYTESTIME TO RUN THE BENCHMARK:27328WSBENCHMARKING CLIENT ENDED ON: TUE OCT 28 17:06:23 EST 2003USING SSL (AXISS VERSION) 1 THREADS 20 CHARS LONG 100 ITER:WSBENCHMARKING CLIENT IS STARTED AT: TUE OCT 28 16:47:42 EST 2003THE 0 THREAD IS STARTING...THE 0 THREAD IS ENDING...RESULT OF THE BENCHMARK:TIME TO CREATE THE LOCATOR: 796ID      GC      FC      M0      M1      M2      M3      M4      M5      M6      M7      M8      M9  TOTAL0       47      625     205     227     225     227     199     222     228     244     253     264 2294M0:20 BYTESM1:60 BYTESM2:140 BYTESM3:300 BYTESM4:620 BYTESM5:1260 BYTESM6:2540 BYTESM7:5100 BYTESM8:10220 BYTESM9:20460 BYTESTIME TO RUN THE BENCHMARK:231625WSBENCHMARKING CLIENT ENDED ON: TUE OCT 28 16:51:34 EST 2003HAS YOU CAN SEE THE DIFFERENCE IS BLATANT.I THINK THE DIFFERENCE IS RELATED WITH YOUR IMPLEMENTATION OF HTTPS CONNECTION THAT CLOSE THE TRANSACTION ON EACH REQUEST WHILE SUNS IMPLEMENTATION SEEM TO CLOSE IT ONLY AT THE END.THE FOLLOWING REPRESENT THE TIME TAKEN BY 200 CALLS OVER CLEAR TEXT TRANSPORT USING SUNS JWSDP 1.3:16 16 31 15 16 31 0 16 16 15 16 0 15 16 0 16 15 0 16 0 15 16 0 15 0 16 16 15 0 16 0 0 15 0 16 0 15 0 16 16 15 0 16 16 0 15 16 15 0 16 16 0 15 0 16 0 16 15 16 15 0 16 0 16 0 15 16 0 16 0 15 0 16 0 15 16 0 16 0 15 0 16 16 15 16 0 15 47 16 0 16 0 15 16 0 15 0 16 16 15 16 0 16 0 0 16 0 15 0 16 0 16 0 15 16 0 16 0 15 16 0 15 0 16 16 0 15 0 0 16 0 15 0 16 0 47 15 0 16 0 16 0 15 0 16 0 15 16 16 15 0 16 0 16 0 15 0 16 0 15 0 16 0 16 0 15 16 16 15 0 16 0 15 0 16 0 16 0 15 0 16 0 16 0 0 16 15 0 16 0 16 0 15 0 16 0 16 0 15 16 AVERAGE OF 9 MILISCALL.THE FOLLOWING REPRESENT THE TIME TAKEN BY 200 CALLS OVER CLEAR TEXT TRANSPORT USING AXIS 1.1:15 47 16 16 15 31 32 15 16 31 16 31 16 31 16 0 0 15 16 16 15 16 16 15 16 15 16 16 15 16 16 15 16 15 16 16 15 16 0 15 16 15 16 31 16 16 15 16 15 16 16 15 16 16 0 15 16 15 16 16 15 16 16 15 16 0 15 32 15 0 16 16 15 31 16 0 16 15 16 31 16 47 15 16 16 15 16 0 15 16 16 15 16 16 15 16 0 0 32 15 16 16 15 0 0 15 16 0 0 16 16 15 16 15 16 31 16 16 15 16 0 15 32 0 31 0 16 15 16 15 0 16 0 15 0 16 15 16 15 16 0 16 15 16 16 0 15 16 15 16 16 15 16 0 16 15 16 15 16 16 0 15 16 31 0 16 15 16 16 0 0 16 16 15 16 0 15 16 16 15 16 0 16 15 16 0 16 15 16 0 16 15 16 15 16 0 16 15 16 16AVERAGE 14 MILISCALL.THE FOLLOWING REPRESENT THE TIME TAKEN BY 200 CALLS OVER SSL TRANSPORT USING SUNS JWSDP 1.3:16 15 32 15 32 15 16 15 0 32 0 15 16 16 0 16 0 0 16 16 15 0 16 16 0 15 16 15 0 16 16 0 15 16 16 15 0 16 15 0 31 16 0 16 15 0 16 15 16 16 0 15 16 0 16 15 0 31 0 16 16 0 15 16 0 16 15 0 16 15 0 16 16 0 15 16 0 16 15 0 16 15 32 0 15 16 16 46 0 16 16 15 16 0 16 15 0 16 15 219 16 15 0 16 16 0 15 16 0 16 15 16 0 15 16 0 0 15 0 16 16 0 15 16 15 0 32 0 15 0 16 16 0 15 16 31 16 15 0 16 0 16 15 16 0 15 0 16 31 16 0 16 0 15 16 0 15 16 0 16 0 15 16 0 0 15 16 15 0 16 16 0 15 16 0 16 0 15 16 0 15 16 16 0 15 16 16 15 0 16 15 0 16 0 0 15 0 16 16 203 <= THE LAST CALL LOOKS LIKE EVERY AXIS ONE.AVERAGE 15 MILISCALL.THE FOLLOWING REPRESENT THE TIME TAKEN BY 200 CALLS OVER SSL TRANSPORT USING AXIS 1.1:235 203 188 187 203 219 188 203 203 187 313 187 204 218 203 188 203 203 203 188 219 187 203 203 203 204 187 203 203 203 204 328 172 203 203 203 203 188 218 203 204 187 203 203 203 204 187 219 187 203 204 203 328 172 203 203 203 203 188 203 203 375 250 266 218 203 204 187 203 203 203 204 203 218 188 187 407 203 203 203 203 219 187 188 203 203 203 203 204 203 203 187 203 204 203 203 203 203 203 188 203 312 188 219 187 203 203 187 204 187 203 203 219 188 203 218 188 187 219 188 218 204 203 187 203 188 188 297 219 203 203 203 187 266 234 204 218 188 203 203 203 188 203 203 203 203 203 203 204 187 219 187 203 313 437 250 188 203 203 203 203 203 375 422 203 203 203 204 203 203 187 203 204 203 203 203 203 203 313 343 266 203 172 187 203 203 204 187 203 203 203 204 203 203 203 187 204 203 203 203 AVERAGE 211 MILISCALL. IF YOUR NEED MORE INFORMATION LET ME KNOW.  ","SUMMARY":"PERFORMANCE USING SSL","CLASS":1}
{"ID_DEFECT":"AXIS-1355","DESCRIPTION":"THE METHOD GETASSTRING() IN SOAPPART ASSUMES THAT THE DOCUMENT IS UTF-8 ENCODED.  THIS DOES NOT WORK CORRECTLY FOR ISO-8859-1 DOCUMENTS THAT CONTAIN CHARACTERS WITH THE HIGH-ORDER BIT ON.  IF ONE CALLS GETASSTRING() ON SUCH A DOCUMENT BEFORE IT IS PARSED (E.G. IN A LOGGING HANDLER OF SOME SORT), THE DOCUMENT WILL NOT BE READ CORRECTLY -- IVE SEEN IT TRUNCATED AT THE OFFENDING CHARACTER.THE WORKAROUND IS TO ENSURE THAT ANY HANDLERS DESERIALIZE THE DOCUMENT FIRST BY MAKING SURE GETASSOAPENVELOPE() IS CALLED FIRST, AND THEN CALLING GETASSTRING().INTERESTINGLY, IF THE CURRENT FORM IS A DESERIALIZED ENVELOPE AND ONE WISHES TO HAVE THE RAW STRING FOR LOGGING PURPOSES, A SUBSEQUENT CALL TO GETASSTRING() WILL CAUSE THE ENVELOPE TO BE SERIALIZED TO A STRING.  I WOULD THINK THAT THE SOAPPART OBJECT WOULD HANG ON TO A COPY OF THE STRING REPRESENTATION INSTEAD OF SERIALIZING THE DOCUMENT IT JUST DESERIALIZED.  KEEPING THE RAW STRING AND OBJECT GRAPH IN SYNCH WOULD BE A PROBLEM HOWEVER.","SUMMARY":"SOAPPART.GETASSTRING() ASSUMES DOCUMENT IS UTF-8 ENCODED","CLASS":1}
{"ID_DEFECT":"AXIS-1356","DESCRIPTION":"WHEN A PROXY IS SET THERE IS A NPE IN COMMONSHTTPSENDER:U00A0U00A0U00A0U00A0U00A0U00A0U00A0 HTTP:XML.APACHE.ORGAXISSTACKTRACE:JAVA.LANG.NULLPOINTEREXCEPTIONU00A0U00A0U00A0U00A0U00A0U00A0U00A0 AT ORG.APACHE.AXIS.TRANSPORT.HTTP.COMMONSHTTPSENDER.INVOKE(COMMONSHTTPSENDER.JAVA:145)U00A0U00A0U00A0U00A0U00A0U00A0U00A0 AT ORG.APACHE.AXIS.STRATEGIES.INVOCATIONSTRATEGY.VISIT(INVOCATIONSTRATEGY.JAVA:32)U00A0U00A0U00A0U00A0U00A0U00A0U00A0 AT ORG.APACHE.AXIS.SIMPLECHAIN.DOVISITING(SIMPLECHAIN.JAVA:118)U00A0U00A0U00A0U00A0U00A0U00A0U00A0 AT ORG.APACHE.AXIS.SIMPLECHAIN.INVOKE(SIMPLECHAIN.JAVA:83)U00A0U00A0U00A0U00A0U00A0U00A0U00A0 AT ORG.APACHE.AXIS.CLIENT.AXISCLIENT.INVOKE(AXISCLIENT.JAVA:144)U00A0U00A0U00A0U00A0U00A0U00A0U00A0 AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKEENGINE(CALL.JAVA:2712)U00A0U00A0U00A0U00A0U00A0U00A0U00A0 AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2695)U00A0U00A0U00A0U00A0U00A0U00A0U00A0 AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2378)U00A0U00A0U00A0U00A0U00A0U00A0U00A0 AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:2301)U00A0U00A0U00A0U00A0U00A0U00A0U00A0 AT ORG.APACHE.AXIS.CLIENT.CALL.INVOKE(CALL.JAVA:1762)I THINK THIS IS DUE TO THE FACT THAT THERE IS NOT HOST SET FOR HTTPHOSTCONFIGURATION.HERE IS A PATCH WHICH WORKS FOR ME:--- WS-AXISJAVASRCORGAPACHEAXISTRANSPORTHTTPCOMMONSHTTPSENDER.JAVA     FRI MAR 12 12:34:24 2004+++ WS-AXIS-DWJAVASRCORGAPACHEAXISTRANSPORTHTTPCOMMONSHTTPSENDER.JAVA  TUE MAY 11 11:40:10 2004              @@ -278,11 +300,10 @@         IF (PORT == -1)              PORT = 80;           EVEN FOR HTTPS         -        IF (TCP.GETPROXYHOST().LENGTH() == 0 ||-        TCP.GETPROXYPORT().LENGTH() == 0 ||-        HOSTINNONPROXYLIST) -            CONFIG.SETHOST(TARGETURL.GETHOST(), PORT, TARGETURL.GETPROTOCOL());-         ELSE +               CONFIG.SETHOST(TARGETURL.GETHOST(), PORT, TARGETURL.GETPROTOCOL());+        IF (TCP.GETPROXYHOST().LENGTH() > 0 &&+        TCP.GETPROXYPORT().LENGTH() > 0 &&+        !HOSTINNONPROXYLIST)              IF (TCP.GETPROXYUSER().LENGTH() != 0)                  CREDENTIALS PROXYCRED =                 NEW USERNAMEPASSWORDCREDENTIALS(TCP.GETPROXYUSER(),","SUMMARY":"COMMONSHTTPSENDER NPE WHEN PROXY IS SET","CLASS":1}
{"ID_DEFECT":"AXIS-1357","DESCRIPTION":"ELEMENT DEFINED IN SCHEMA:<ELEMENT NAME=NUMBEROFCHILDREN TYPE=XSD:INT MINOCCURS=0>WHEN USING AXIS 1.2 ALPHA:WSDL2JAVA GENERATES THIS...PRIVATE INT NUMBEROFCHILDREN;AND WHEN NOT SETTING ANY VALUE FOR THIS, THIS IS WHAT IS SENT IN THE SOAP REQUEST...<NUMBEROFCHILDREN HREF=#ID3><MULTIREF ID=ID3 SOAPENC:ROOT=0 SOAPENV:ENCODINGSTYLE=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING XSI:TYPE=XSD:INT XMLNS:SOAPENC=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENCODING>0<MULTIREF>SO THIS WORKS AS EXPECTED.BUT, WHEN USING AXIS 1.2 BETA:WSDL2JAV GENERATES THIS...PRIVATE JAVA.LANG.INTEGER NUMBEROFCHILDREN;AND WHEN NOT SETTING ANY VALUE FOR THIS, THIS IS WHAT IS SENT IN THE SOAP REQUEST...<NUMBEROFCHILDREN XSI:TYPE=XSD:INT XSI:NIL=TRUE>THIS ELEMENT WAS NOT DECLARED AS NILLABLE IN THE SCHEMA AND WHEN SENT AS NIL BLOWS UP WHEN TRYING TO DESERIALIZE.","SUMMARY":"NON NILLABLE ELEMENT SENT AS NIL","CLASS":1}
{"ID_DEFECT":"AXIS-1368","DESCRIPTION":"JAVA2WSDL GENERATES ELEMENTS WITH THE SAME QNAME FOR DOCUMENTLITERAL OR WRAPPED STYLE WEB SERVICE COMPONENTS IF MORE THAN ONE SERVICE-SPECIFIC FAULT IS PRESENT.THIS GIVES RISE TO ILL-FORMED WSDL DOCUMENTS LIKE THE ONE BELOW (THE WHOLE DOCUMENT IS ATTACHED):  <WSDL:TYPES>  <SCHEMA TARGETNAMESPACE=HTTP:BUSINESSLOGICXSDSCHEMA.WEBSERVICES.INTEGRATION.SAMPLE1>      <COMPLEXTYPE NAME=ALTURAPOSTCONDITIONEXCEPTION>        <SEQUENCE>          ...        <SEQUENCE>      <COMPLEXTYPE>      <COMPLEXTYPE NAME=ALTURAPRECONDITIONEXCEPTION>        <SEQUENCE>          ...        <SEQUENCE>      <COMPLEXTYPE>    <SCHEMA>        <SCHEMA TARGETNAMESPACE=HTTP:CWNL-C1995.NL.COMPUWARE.COM:8081SERVICESDOMAINSERVICE>      <!-- THE FOLLOWING TWO DECLARATIONS ARE ILL-FORMED -->      <ELEMENT NAME=MSG TYPE=TNS1:ALTURAPOSTCONDITIONEXCEPTION >       <ELEMENT NAME=MSG TYPE=TNS1:ALTURAPRECONDITIONEXCEPTION >     <SCHEMA>  <WSDL:TYPES>  <WSDL:MESSAGE NAME=ALTURAPOSTCONDITIONEXCEPTION>    <WSDL:PART ELEMENT=IMPL:MSG NAME=MSG >   <WSDL:MESSAGE>  <WSDL:MESSAGE NAME=ALTURAPRECONDITIONEXCEPTION>    <WSDL:PART ELEMENT=IMPL:MSG NAME=MSG >   <WSDL:MESSAGE>THE CAUSE OF THE PROBLEM IS AN OMISSION IN THE TYPES.WRITEELEMENTDECL METHOD, WHICH FAILS TO KEEP TRACK OF NAMES THAT HAVE ALREADY BEEN USED.","SUMMARY":"JAVA2WSDL GENERATES ELEMENTS WITH THE SAME QNAME IF MORE THAN ONE SERVICE-SPECIFIC FAULT IS PRESENT","CLASS":1}
{"ID_DEFECT":"AXIS-1371","DESCRIPTION":"BYTEARRAY HAS A MECHANISM IN IT TO PROVIDE A FILE AS A BACKING STORE FOR ANY ARRAYS THAT ARE LARGER THAN 8KB.  IN MOST CASES, THIS IS ALL OF MY RESPONSES.  WE ARE PASSING IMAGES BACK AS BASE64 AND WE SEE MAJOR PERFORMANCE HIT.  AFTER PERFORMANING A THREAD DUMP ON POORLY PERFORMING TESTS, WE FOUND THAT MANY THREADS WERE BLOCKED IN THE SUN FILE.CREATETEMPFILE METHOD WHICH HAS A GLOBAL MUTEX THAT IS SERIALIZING ALL OF MY SOAP RESPONSES.SOLUTION:  CHANGE BYTEARRAY TO PROVIDE A LARGER AMOUNT OF MEMORY USAGE FOR RESIDENT SIZE (LIKE 512MB COMPARED TO 8KB).  THE RESIDENT SIZE IS NOT PREALLOCATED, BUT USED TO DETERMINE WHEN TO TURN ON BACKING STORAGE.  I ALSO PROPOSE A CHANGE TO ALLOW CONTROL OVER RESIDENT SIZE, CACHE INCREMENT, ENABLEDISABLE BACKING STORE, AND A WORKING BUFFER SIZE FOR WHEN THE BACKING STORE IS WRITTEN OR READ VIA A STREAM.IN MY INTERNAL TESTS, THIS CHANGE HAS SEEN A MAJOR IMPROVEMENT ON PERFORMANCE.  AND SEEING THAT SOAPPARTS ARE USED ON THE CLIENT SIDE AS WELL, THIS MIGHT HAVE A DRAMATIC INCREASE PERFORMANCE.  MY TESTS INDICATE AT A MINIMUM OF 50% IMPROVEMENT.   I WAS ABLE TO DOUBLE MY TEST THROUGHPUT AFTER MAKING THIS CHANGE.I HAVE A WORKING BYTEARRAY CODED THAT INCLUDES MY CHANGES AND I CAN SEND IT IF YOU WANT IT.","SUMMARY":"BYTEARRAY CAUSES PERFORMANCE DEGRADATION","CLASS":1}
{"ID_DEFECT":"AXIS-1372","DESCRIPTION":"IM TRYING TO SET UP MY WAR, WITH CONTEXT ROOT MYAPPMYWAR, WITH THEDEFAULT SERVLET BEING THE AXISSERVLET FROM APACHE AXIS 1.1.  IM DOING THIS ON WEBSPHERE 4.0 (RIGHT NOW, EXPERIMENTING IN WSAD 5. 1WITH THE WAS4 TEST ENVIRONMENT).MY ATTEMPT WAS TO SET THE SERVLET MAPPING FOR AXISSERVLET TO BE JUST .  THIS IS HOW WEBSPHERES DOCUMENTATION SAYS ONE SHOULD SET UP A DEFAULT SERVLET MAPPING.  HOWEVER, WHEN I ATTEMPT TO REACH MY SERVICE LIKE SO...    HTTP:LOCALHOST:8080MYAPPMYWARMYSERVICE...AXIS COMPLAINS THAT IT CANT FIND THE SERVICE NAME YSERVICE.  NOTICE THE M IS MISSING FROM THE BEGINNING.  INTERESTINGLY, USING THE FOLLOWING URLS WILL WORK:    HTTP:LOCALHOST:8080MYAPPMYWARXMYSERVICE    HTTP:LOCALHOST:8080MYAPPMYWARAMYSERVICE    HTTP:LOCALHOST:8080MYAPPMYWAR&MYSERVICE    HTTP:LOCALHOST:8080MYAPPMYWAR.MYSERVICE    ...SO, I TRIED MAPPING FOO* TO AXISSERVLET, AND USED THE FOLLOWING URL WITH SUCCESS:    HTTP:LOCALHOST:8080MYAPPMYWARFOOMYSERVICEATTEMPTING TO USE * AS THE MAPPING FAILS, AND THE DOCUMENTATION EVEN STATES THAT THIS IS NOT THE WAY TO MAP A DEFAULT SERVLET (THE FIRST WAY IS).SO, IM THINING THIS IS A BUG IN AXIS WHEN THE DEFAULT SERVLET MAPPIGN IS USED -- IT SEEMS TO BE MISCALCULATING HOW MUCH OF THE URL TO CHOP OFF TO FIND THE SERVICE NAME.","SUMMARY":"DEFAULT SERVLET MAPPING FOR AXISSERVLET BREAKS SERVICE NAMES","CLASS":1}
{"ID_DEFECT":"AXIS-1373","DESCRIPTION":"JWSHANDLER CAN BE CONFIGURED TO USE A DIFFERENT EXTENSION THAN .JWS BUT ASSUMES THAT THE EXTENSION HAS A FIXED LENGTH OF FOUR (PERIOD PLUS 3 LETTERS).WHEN THE JAVA COMPILER IS CALLED WITH THE GENERATED FILENAME IT COMPLAINS SINCE THE FILE NAME DOESNT END IN .JAVA.SEE THE DEBUGGING OUTPUT FOR AN EXAMPLE.---- LOGGING OUTPUT OF JWSHANDLER ----2004-05-28 18:56:30,655 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - ENTER: JWSHANDLER::INVOKE2004-05-28 18:56:30,657 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - EXIT: JWSHANDLER::INVOKE2004-05-28 18:56:30,657 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - ENTER: JWSHANDLER::INVOKE2004-05-28 18:56:30,658 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - JWSFILE: PUBA1000BIOERNSOFTWAREJAKARTA-TOMCAT-5.0.16WEBAPPSWSJMSECHOHEADERS.FOOBAR2004-05-28 18:56:30,658 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - JFILE: PUBA1000BIOERNSOFTWAREJAKARTA-TOMCAT-5.0.16WEBAPPSWSJMSWEB-INFJWSCLASSESECHOHEADERS.FOOJAVA2004-05-28 18:56:30,658 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - CFILE: PUBA1000BIOERNSOFTWAREJAKARTA-TOMCAT-5.0.16WEBAPPSWSJMSWEB-INFJWSCLASSESECHOHEADERS.FOOCLASS2004-05-28 18:56:30,659 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - OUTDIR: PUBA1000BIOERNSOFTWAREJAKARTA-TOMCAT-5.0.16WEBAPPSWSJMSWEB-INFJWSCLASSES2004-05-28 18:56:30,659 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - CLSNAME: ECHOHEADERS.FO2004-05-28 18:56:30,660 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - COMPILING:  PUBA1000BIOERNSOFTWAREJAKARTA-TOMCAT-5.0.16WEBAPPSWSJMSECHOHEADERS.FOOBAR2004-05-28 18:56:30,660 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - COPY PUBA1000BIOERNSOFTWAREJAKARTA-TOMCAT-5.0.16WEBAPPSWSJMSECHOHEADERS.FOOBAR PUBA1000BIOERNSOFTWAREJAKARTA-TOMCAT-5.0.16WEBAPPSWSJMSWEB-INFJWSCLASSESECHOHEADERS.FOOJAVA2004-05-28 18:56:30,668 DEBUG [HTTP8080-PROCESSOR23]           JWSHANDLER - JAVAC PUBA1000BIOERNSOFTWAREJAKARTA-TOMCAT-5.0.16WEBAPPSWSJMSWEB-INFJWSCLASSESECHOHEADERS.FOOJAVA2004-05-28 18:56:31,097 ERROR [HTTP8080-PROCESSOR23]           JWSHANDLER - EXCEPTION:...","SUMMARY":"JWSHANDLER: WRONG HANDLING OF CONFIGURABLE FILENAME EXTENSION","CLASS":1}
{"ID_DEFECT":"AXIS-1376","DESCRIPTION":"I HAVE A DOCUMENTLITERAL WRAPPED AXIS SERVICE. IT RETURNS AN INT []. SOMETIMES THAT ARRAY IS OF LENGTH 1.I GENERATED AN AXIS CLIENT FROM THE WSDL. THE SIGNATURE OF THE CLIENT METHOD IS  PUBLIC INT[] GETFOO(INT BAR);IF I CALL THIS METHOD ON THE CLIENT AND THE SERVER RETURNS AN ARRAY OF LENGTH 1, I GET A CLASSCASTEXCEPTION ON THIS LINE OF GENERATED CODE:  RETURN (INT[]) ORG.APACHE.AXIS.UTILS.JAVAUTILS.CONVERT(_RESP, INT[].CLASS);IT WORKS FINE WITH LONGER ARRAYS.I SUSPECT THAT SOMEWHERE EARLIER IN THE DESERIALIZATION AXIS GUESSED THAT THE OBJECT WAS NOT AN INT [], BUT A PLAIN INT INSTEAD. TWO SUGGESTED FIXES:HACK JAVAUTILS.CONVERT() TO DEAL WITH COVERTING INT -> INT[1] WHEN NEEDED.MODIFY AXIS DESERIALIZATION STRATEGY SO IT USES THE TYPE INFORMATION IN THE WSDL TO CONSTRUCT THE OBJECTS.","SUMMARY":"WSDL-GENERATED CLIENT CANT HANDLE ARRAYS OF LENGTH 1","CLASS":1}
{"ID_DEFECT":"AXIS-1377","DESCRIPTION":"AXIS ADDS NEW LINES AND OTHER ISSUES TO SOAP MESSAGES. THIS IS A PROBLEM SINCE I SEND A SIGNED XML FILE VIA SOAP TO AN WEBSERVICE. JUST THE XML FILE IS SIGNED NOT THE WHOLE SOAP MESSAGE. THE WEBSERVICE CANT VERIFY THE SIGNATURE SINCE THE NEWLINES ARE ADDED. I DEBUGGED THE CODE AND FOUND THE PROBLEM. CLASS SOAPENVELOPE FOR INSTANCE SETS THE FLAG PRETTY IN ORG.APACHE.AXIS.ENCODING.SERIALIZATIONCONTEXTIMPL  BEFORE THE CONTENT IS SERIALIZED, THAT CAUSES THE TROUBLE.  THIS IS HARDCODED SO I HAD TO RECOMPILE SOME PARTS TO GET IT WORKING. THIS FLAG PRETTY IN SERIALIZATIONCONTEXTIMPL MIGHT MAKE SENSE IN SOME CASES. BUT IT WOULD BE BETTER THAT YOU CAN DISABLE IT FROM THE OUTSIDE SOMEHOW. THE CODE IN 1.2BETA LOOKS PRETTY MUCH THE SAME SO THE ISSUE IS PROBABLY ALSO THERE.CHEERSMARCEL","SUMMARY":"NEWLINES, INDENTION .. ADDED TO SOAP MESSAGES -> BREAKS XML SIGNATURE","CLASS":1}
{"ID_DEFECT":"AXIS-1378","DESCRIPTION":"I AM TRYING TO DEPLOY DEPLOY.WSDD FILE USING ADMIN SERVLET.WHEN A CLASS THAT DEFINED IN DEPLOY.WSDD (IN MY CASE ITS IN TYPE MAPPING ELEMENT) COULD NOT BE FOUND BY THE AXIS ENGINE, NOTHING IS REPORTED TO THE USER. THE USER HAVE NO IDEA WHY THE SERVICE HAS NOT BEEN DEPLOYED. HE EVEN DOESNT KNOW IF THE SERVICE IS DEPLOYED OR NOT. I HAVE TO GO TO HTTP:<MYHOST><MYAPP>SERVICES TO SEE IF IT HAS BEEN DEPLOYED.THE SOLUTION IS VERY SIMPLE!!!AFTER A FEW HOURS OF DEBUGGING I HAVE FOUND THAT IN CLASS ORG.APACHE.AXIS.DEPLOYMENT.WSDD.WSDDDEPLOYMENT LINE 245 (ITS IN THE CONSTRUCTOR) THERE IS AN EMPTY CATCH (WSDDNONFATALEXCEPTION EX) BLOCK. I THINK THAT AT LEAST A WARNING MESSAGE WITH THE CAUSE TO THE EXCEPTION SHOULD BE WRITTEN TO THE LOG. IN MY CASE THE PROBLEM WAS: CLASSCASTEXCEPTION ALONG WITH THE MISSING CLASS. HAVING THIS PIECE OF INFORMATION CAUSED ME TO SOLVE THE PROBLEM IMMEDIATLLY.A BETTER SOLUTION SHOULD RETURN THE FAILURE DETAILS TO THE USER VIA THE WEB SERVICE RESPONSE. BUT A LOG LINE IS THE EASIEST MINIMUM YOU CAN DO TO SOLVE THIS BUG.","SUMMARY":"NO INFORMATION IS RETURNED TO USER WHEN DEPLOYMENT FAILED","CLASS":1}
{"ID_DEFECT":"AXIS-1380","DESCRIPTION":"WHEN SETTING A OBJECTMESSAGE USING A WEBSERVICE STUB CLASS A OBJECT IS NOT SERIALIZABLE ERROR OCCURRS.  THIS IS BECAUSE THE ORG.APACHE.DESCRIPTION FAULTDESC.CLASS AND OPERATIONDESC.CLASS DO NOT IMPLEMENT THE JAVA.IO.SERIALIZABLE INTERFACE.","SUMMARY":"OBJECTMESSAGE.SETOBJECT FAILS W SERIALIZABLE ERROR","CLASS":1}
{"ID_DEFECT":"AXIS-1381","DESCRIPTION":"I GET AN DESERIALIZATION EXCEPTION WHEN A SPECIFY AN EMPTY TAG FOR A DATE FIELD. I LOOKED AT THE SOURCE CODE AND THINK I HAVE FOUND THE PROBLEM -  THE PARSE CREATES AN EMPTY STRING FOR THE EMPTY TAG. BUT THE DESERIALIZER DOESNT TAKE THAT INTO ACCOUNT. CLASS ORG.APACHE.AXIS.ENCODING.SER.CALENDARDESERIALIZER************ PUBLIC OBJECT MAKEVALUE(STRING SOURCE) ^M        CALENDAR CALENDAR = CALENDAR.GETINSTANCE();^M        DATE DATE;^M        BOOLEAN BC = FALSE;^M^M         VALIDATE FIXED PORTION OF FORMAT^M        IF ( SOURCE != NULL ) ^M            IF (SOURCE.CHARAT(0) == +)^M                SOURCE = SOURCE.SUBSTRING(1);^M^M            IF (SOURCE.CHARAT(0) == -) ^M                SOURCE = SOURCE.SUBSTRING(1);^M                BC = TRUE;^M            ^M^M            JAVA.LANG.STRINGINDEXOUTOFBOUNDSEXCEPTION: STRING INDEX OUT OF RANGE: 0        AT JAVA.LANG.STRING.CHARAT(STRING.JAVA:516)        AT ORG.APACHE.AXIS.ENCODING.SER.CALENDARDESERIALIZER.MAKEVALUE(CALENDARDESERIALIZER.JAVA:63)        AT ORG.APACHE.AXIS.ENCODING.SER.SIMPLEDESERIALIZER.ONENDELEMENT(SIMPLEDESERIALIZER.JAVA:175)        AT ORG.APACHE.AXIS.ENCODING.DESERIALIZERIMPL.ENDELEMENT(DESERIALIZERIMPL.JAVA:505)        AT ORG.APACHE.AXIS.ENCODING.DESERIALIZATIONCONTEXTIMPL.ENDELEMENT(DESERIALIZATIONCONTEXTIMPL.JAVA:1053)        AT ORG.APACHE.AXIS.MESSAGE.SAX2EVENTRECORDER.REPLAY(SAX2EVENTRECORDER.JAVA:165)        AT ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT.PUBLISHTOHANDLER(MESSAGEELEMENT.JAVA:1050)        AT ORG.APACHE.AXIS.MESSAGE.RPCELEMENT.DESERIALIZE(RPCELEMENT.JAVA:196)        AT ORG.APACHE.AXIS.MESSAGE.RPCELEMENT.GETPARAMS(RPCELEMENT.JAVA:310)        AT ORG.APACHE.AXIS.PROVIDERS.JAVA.RPCPROVIDER.PROCESSMESSAGE(RPCPROVIDER.JAVA:145)        AT ORG.APACHE.AXIS.PROVIDERS.JAVA.JAVAPROVIDER.INVOKE(JAVAPROVIDER.JAVA:290)        AT ORG.APACHE.AXIS.STRATEGIES.INVOCATIONSTRATEGY.VISIT(INVOCATIONSTRATEGY.JAVA:32)        AT ORG.APACHE.AXIS.SIMPLECHAIN.DOVISITING(SIMPLECHAIN.JAVA:118)        AT ORG.APACHE.AXIS.SIMPLECHAIN.INVOKE(SIMPLECHAIN.JAVA:83)        AT ORG.APACHE.AXIS.HANDLERS.SOAP.SOAPSERVICE.INVOKE(SOAPSERVICE.JAVA:481)        AT ORG.APACHE.AXIS.SERVER.AXISSERVER.INVOKE(AXISSERVER.JAVA:285)        AT ORG.APACHE.AXIS.TRANSPORT.HTTP.AXISSERVLET.DOPOST(AXISSERVLET.JAVA:623)        AT JAVAX.SERVLET.HTTP.HTTPSERVLET.SERVICE(HTTPSERVLET.JAVA:760)        AT ORG.APACHE.AXIS.TRANSPORT.HTTP.AXISSERVLETBASE.SERVICE(AXISSERVLETBASE.JAVA:301)        AT JAVAX.SERVLET.HTTP.HTTPSERVLET.SERVICE(HTTPSERVLET.JAVA:853)        AT WEBLOGIC.SERVLET.INTERNAL.SERVLETSTUBIMPL.INVOKESERVLET(SERVLETSTUBIMPL.JAVA:275)        AT WEBLOGIC.SERVLET.INTERNAL.SERVLETSTUBIMPL.INVOKESERVLET(SERVLETSTUBIMPL.JAVA:199)        AT WEBLOGIC.SERVLET.INTERNAL.WEBAPPSERVLETCONTEXT.INVOKESERVLET(WEBAPPSERVLETCONTEXT.JAVA:2702)        AT WEBLOGIC.SERVLET.INTERNAL.SERVLETREQUESTIMPL.EXECUTE(SERVLETREQUESTIMPL.JAVA:2427)        AT WEBLOGIC.KERNEL.EXECUTETHREAD.EXECUTE(EXECUTETHREAD.JAVA:159)        AT WEBLOGIC.KERNEL.EXECUTETHREAD.RUN(EXECUTETHREAD.JAVA:140)","SUMMARY":"DESERIALIZATION EXCEPTION WHEN A SPECIFY AN EMPTY TAG FOR A DATE FIELD","CLASS":1}
{"ID_DEFECT":"AXIS-1382","DESCRIPTION":"SEE HTTP:MARC.THEAIMSGROUP.COM?T=108634258100002&R=1&W=2 FOR DETAILS","SUMMARY":"FAILURE TO GENERATE CODE FOR WS-TRUST.WSDL","CLASS":1}
{"ID_DEFECT":"AXIS-1385","DESCRIPTION":"I HAVE A SERVICE WHERE I DEFINE IN DEPLOY.WSDD A SPECIAL ENDPOINTURL (HTTP:....AXISPROTECTED...). IN THE LIST OF DEPLOYED SERVICES MY SERVICE APPEARS BUT WITH THE AXIS STANDARD BASEURL (..AXISSERVICES). THIS IS BECAUSE IN AXISSERVLET.REPOPRTAVAILABLESERVICES() IN LINE 455        STRING BASEURL = GETWEBAPPBASE(REQUEST)+SERVICES;THE BASEURL WILL BE ASSUMED TO BE VALID FOR ALL SERVICES. THE CONFIGURATION OF THE SERVICES WILL NOT BE CHECKED.","SUMMARY":"DEFINED ENDPOINTURL WILL NOT BE USED INLIST OF DEPLOYED SERVICES","CLASS":1}
{"ID_DEFECT":"AXIS-1388","DESCRIPTION":"WS-AXISCONTRIBEWSPROJECT.XML FILE REFERS TO UNEXISTANT DIRECTORIES (SRCJAVA, SRCTEST, ...)1.A SIMPLE SOLUTION IS TO CHANGE DIRECTORIES IN PROJECT.XML<SOURCEDIRECTORY>SRC<SOURCEDIRECTORY><UNITTESTSOURCEDIRECTORY>TEST<UNITTESTSOURCEDIRECTORY>BUT WE ARE NO MORE IN A MAVEN STYLE PROJECT!2.OR WE MOVE SRC* INSIDE SRCJAVA AND TEST* INTO SRCTEST . BUT THAT REMOVE A LOT OF FILES AND POLLUTE THE CVS.SOLUTION 1 IS EASIER TO DO :)WHAT DO YOU THINK?","SUMMARY":"[EWS] EWS MODULE CANT COMPILE SINCE CODE MOVE TO AXISCONTRIB","CLASS":1}
{"ID_DEFECT":"AXIS-1396","DESCRIPTION":"WSDL:<COMPLEXTYPE NAME=IASNUMERICFORMAT><SEQUENCE>  <ELEMENT NAME=CURRENCYSYMBOL NILLABLE=TRUE TYPE=XSD:STRING >   <ELEMENT NAME=DECIMALSYMBOL NILLABLE=TRUE TYPE=XSD:STRING >   <ELEMENT NAME=DECIMALS NILLABLE=TRUE TYPE=XSD:INT >   <ELEMENT NAME=GROUPINGSYMBOL NILLABLE=TRUE TYPE=XSD:STRING >   <ELEMENT NAME=NEGATIVEFORMAT NILLABLE=TRUE TYPE=TNS13:IASNEGATIVEFORMAT >   <ELEMENT NAME=PREFIXCURRENCYSYMBOL NILLABLE=TRUE TYPE=XSD:BOOLEAN >   <ELEMENT NAME=SCALE NILLABLE=TRUE TYPE=TNS13:IASNUMERICSCALE >   <ELEMENT NAME=TYPE NILLABLE=TRUE TYPE=TNS13:IASNUMERICFORMATTYPE > <SEQUENCE><COMPLEXTYPE>GENERATED:** * IASNUMERICFORMAT.JAVA * * THIS FILE WAS AUTO-GENERATED FROM WSDL * BY THE APACHE AXIS 1.2BETA JUN 15, 2004 (03:31:55 CEST) WSDL2JAVA EMITTER. *PACKAGE SOAPCLIENT;PUBLIC CLASS IASNUMERICFORMAT  IMPLEMENTS JAVA.IO.SERIALIZABLE     PRIVATE JAVA.LANG.STRING CURRENCYSYMBOL;    PRIVATE JAVA.LANG.STRING DECIMALSYMBOL;    PRIVATE JAVA.LANG.INTEGER DECIMALS;    PRIVATE JAVA.LANG.STRING GROUPINGSYMBOL;    PRIVATE IASNEGATIVEFORMAT NEGATIVEFORMAT;    PRIVATE JAVA.LANG.BOOLEAN PREFIXCURRENCYSYMBOL;    PRIVATE IASNUMERICSCALE SCALE;    PRIVATE IASNUMERICFORMATTYPE TYPE;    PUBLIC IASNUMERICFORMAT()         PUBLIC IASNUMERICFORMAT(           JAVA.LANG.STRING CURRENCYSYMBOL,           JAVA.LANG.STRING DECIMALSYMBOL,           INT DECIMALS,           JAVA.LANG.STRING GROUPINGSYMBOL,           IASNEGATIVEFORMAT NEGATIVEFORMAT,           BOOLEAN PREFIXCURRENCYSYMBOL,           IASNUMERICSCALE SCALE, IASNUMERICFORMATTYPE TYPE)         THIS.CURRENCYSYMBOL = CURRENCYSYMBOL;        THIS.DECIMALSYMBOL = DECIMALSYMBOL;        THIS.DECIMALS = DECIMALS;        THIS.GROUPINGSYMBOL = GROUPINGSYMBOL;        THIS.NEGATIVEFORMAT = NEGATIVEFORMAT;        THIS.PREFIXCURRENCYSYMBOL = PREFIXCURRENCYSYMBOL;        THIS.SCALE = SCALE;        THIS.TYPE = TYPE;    ERROR:    [JAVAC] IASNUMERICFORMAT.JAVA:34: INCOMPATIBLE TYPES    [JAVAC] FOUND   : INT    [JAVAC] REQUIRED: JAVA.LANG.INTEGER    [JAVAC]         THIS.DECIMALS = DECIMALS;    [JAVAC]                         ^    [JAVAC] IASNUMERICFORMAT.JAVA:37: INCOMPATIBLE TYPES    [JAVAC] FOUND   : BOOLEAN    [JAVAC] REQUIRED: JAVA.LANG.BOOLEAN    [JAVAC]         THIS.PREFIXCURRENCYSYMBOL = PREFIXCURRENCYSYMBOL;    [JAVAC]                                     ^","SUMMARY":"COMPILE ERROR ON CONSTRUCTOR CREATED WITH WSDL2JAVA","CLASS":1}
{"ID_DEFECT":"AXIS-1400","DESCRIPTION":"ILL ATTACH SOME TEST CLASSES.SHORT DESCRIPTION: NOT ALL BEANMAPPINGS DEFINED IN SERVER-CONFIG.WSDD ARE INCLUDED IN THE WSDL. CLASSESTYPES THAT THAT ARE NOT DIRECTLY USED ARE LEFT OUT. THIS WAS NOT A PROBLEM IN AXIS 1.1, ONLY 1.2 (CVS).SAMPLE DESCRIPTION:BASEOBJECT: SIMPLE CLASSDERIVEDOBJECT: EXTENDS BASEOBJECTSEARCHRESULT: CONTAINS AN ARRAY OF BASEOBJECTSEARCHOBJECTS: HAS METHOD SEARCH THAT RETURNS SEARCHOBJECTDEPLOY.WSDDSERVER-CONFIG.WSDD: USED TO DEPLOY SERVICE.SEARCHSERVICE.WSDL: RESULT OF DEPLOYING THE ABOVE CLASSES ON TOMCAT AND GOING TO HTTP:LOCALHOST:8080AXISSERVICESSEARCHSERVICE?WSDLSEARCHSERVICE DOES NOT CONTAIN THE TYPE DERIVEDOBJECT.","SUMMARY":"SERVLET WSDL GENERATOR DOES NOT INCLUDE ALL TYPES IN WSDL. (REGRESSION SINCE 1.1)","CLASS":1}
{"ID_DEFECT":"AXIS-1402","DESCRIPTION":"WHEN WE CALL THE HASCHILDNODES METHOD OF THE MESSAGEELEMENT WHEN IT HAS GOT NO CHILDREN THEN IT THROWS NULL POINTER EXCEPTION.CHANGING THE FOLLOWING LINE IN MESSAGEELEMENT WILL FIX THE PROBLEM.     PUBLIC BOOLEAN HASCHILDNODES() -        RETURN CHILDREN.SIZE() > 0;+        RETURN CHILDREN != NULL && CHILDREN.SIZE() > 0;     ","SUMMARY":"NULLPOINTER WHEN HASCHILDNODES IS CALLED ON MESSAGEELEMENT HAVING NO CHILDREN","CLASS":1}
{"ID_DEFECT":"AXIS-1403","DESCRIPTION":"I AM USING AXIS WITH THE MESSAGE STYLE, I.E. I ONLY IMPLEMENT A SIMPLE CLASSTHAT IMPLEMENTS A METHOD      PUBLIC DOCUMENT <ANYNAME> ( DOCUMENT DOCUMENT )THE METHOD CURRENTLY ONLY RETURNS THE DOCUMENT THAT HAS BEEN SENDED. THE REQUEST I AM SENDING LOOKS LIKE:    <FOO>BAR<FOO>BUT WHEN I TRY TO RETRIEVE THE BAR WITH:   DOMELEMENT.GETFIRSTCHILD()OR CHECK IF THERE ARE CHILDREN WITH:   DOMELEMENT.GETCHILDNODES().GETLENGTH()THE RETURN VALUE IS 0 (HASCHILDREN() THROWS A NULLPOINTEREXCEPTION).FUNNY THING IS THAT    SYSTEM.OUT.PRINTLN(DOMELEMENT)PRINTS <FOO>BAR<FOO>.I THEN TRIED TO DEBUG MESSAGEELEMENT, BUT DID NOTGET VERY FAR. THE INTERNAL CHILDREN LIST IS EMPTYOR EVEN NOT YET CREATED.AND WHEN I TRIED TO DEBUG THE #TOSTRING() METHODI GOT LOST.SINCE MESSAGEELEMENT CLAIMS TO IMPLEMENT ORG.W3C.DOM.ELEMENT INTERFACE, IT SHOULD CONTAIN A SINGLE CHILD ELEMENT (A TEXT NODE).","SUMMARY":"CALLING MESSAGEELEMENT#GETCHILDREN WITH A TEXT-ONLY CONTENT RETURNS AN EMPTY LIST","CLASS":1}
{"ID_DEFECT":"AXIS-1404","DESCRIPTION":"FINAL SOAPELEMENT BODYELEMENT = BODY.ADDCHILDELEMENT(BODYNAME);HERE ADDING AN ELEMENT TO THE SOAP BODY DOESNOT ADD THE ELEMENT TO THE BODYS INTERNAL LIST.AFTER ADDING THIS INVOKING BODY.HASCHILDNODES() WILL RETURN FALSE.I GUESS THIS CANT BE A FEATURE AS THE NAME OF THE METHOD SUGGESTS THAT ADDCHILDELEMENT SHOULD ADD THE ELEMENT. AND THIS IS SURELY DIFFERENT SUNS SAAJ-RI PACKAGED WITH JWSDP1.3.","SUMMARY":"ADDING A CHILD ELEMENT DOES NOT ADD THE ELEMENT","CLASS":1}
{"ID_DEFECT":"AXIS-1412","DESCRIPTION":"SOAPPART.GETDOCUMENTELEMENT().GETOWNERDOCUMENT()); RETURNS NULL. THIS CAUSES SOME PROBLEMS WITH WSS4J.I WILL BE ATTACHING A JUNIT CASE FOR THIS","SUMMARY":"INVOKING GETOWNERDOCUMENT ON SOAPENVELOPE RETURNS NULL","CLASS":1}
{"ID_DEFECT":"AXIS-1415","DESCRIPTION":"I HAVE WRITTEN A SIMPLE CLASS FILE TO ILLUSTRATE THIS PROBLEM WHICH I WILL ATTACH SOON AFTER COMITTING THIS BUG.THE PROBLEM IS THAT WHEN A MESSAGE IS CREATED USING AN INPUT STREAM AND1. SOME HEADER ELEMENT IS ADDED TO IT, CREATING ELEMENT USING SOAPFACTORY    A. AND THE MESSAGE IS SERIALIZED USING SOAPMESSAGE.WRITETO() METHOD    B. AND THE MESSAGE IS SERIALIZED USING XMLUTILS.DOCUMENTTOSTRING()2. SOME HEADER ELEMENT IS ADDED, CREATED BY USING HEADER.GETOWNERDOCUMENT().CREATEELEMENTNS (THIS NEEDS AXIS-1412 BUG TO BE FIXED FIRST). THIS IS HOW WSSECURITY WORKS.    A. AND THE MESSAGE IS SERIALIZED USING SOAPMESSAGE.WRITETO() METHOD    B. AND THE MESSAGE IS SERIALIZED USING XMLUTILS.DOCUMENTTOSTRING()IN ALL THE FOUR ONE GETS DIFFERENT SERIALIZED VERSION, WHEN THE DOM IS  THE SAME.BECAUSE OF CONDITION 2.A NONE HANDLER CODE USING WSS4J CODE IS NOT WORKING.   ","SUMMARY":"SOME PROBLEM WILL ISDIRTY FLAG","CLASS":1}
{"ID_DEFECT":"AXIS-1416","DESCRIPTION":"#1 SAX RECORDED EVENTS     AXIS USES A SERIALIZERDESERIALISER BASED ON SAX EVENTS. THE RECORDED EVENTS ARE STORED WITH THE SOAPELEMENT.  ON SERIALIZATION THE SOAPELEMENT WILL SIMPLY PLAYBACK THE EVENTS IF THE ELEMENT IS NOT MARKED DIRTY.      A JAXRPC HANDLER IS ALLOWED TO VIEW AND MODIFY SOAP HEADERS AND BODY. FOR THAT IT CAN USE THE SAAJ API OR EVEN THE DOM API   ON JAVAX.XML.SOAP.NODE OBJECTS.     WHEN A CLIENT MAKES THESE MODIFICATIONS, THEY ARE NOT REFLECTED IN THE AXIS INTERNAL REPRESENTATION OF THE SOAP MESSAGE.  THIS IS ESPECIALLY TRUE FOR RPCELEMENT, WHICH KEEPS AN INTERNAL LIST OF RPCPARAM OBJECTS, WHICH ARE NOT LINKED TO SOAPELEMENT.  #2 GENERAL SOAP TREE REPRESENTATION    AXIS IS MISSING THE NOTION OF JAVAX.XML.SOAP.NODE, INSTEAD IT MODELS JAVAX.XML.SOAP.TEXT AS JAVAX.XML.SOAP.SOAPELEMENT.   IM HAVING A HARD TIME TRYING TO KEEP ALL THE VARIOUS SOAPELEMENT REPRESENTATIONS IN SYNC. FOR JBOSS-WS4EE I STARTED A EFACTORING EFFORT THAT WOULD BASE SOAPELEMENTIMPL ON NODEIMPL WHICH IMPLEMENTS THE ORG.W3C.DOM.NODE INTERFACE.     ALL INFORMATION ABOUT NAMESPACES, ATTRIBUTES, PARENTCHILD RELATIONSHIPS SHOULD BE TAKEN FROM THE DOM TREE.  SERIALIZATIONDESERIALIZATION WOULD BE BASED ON THE DOM TREE AS WELL.","SUMMARY":"USING SAAJ-1.2 API TO MODIFY THE SOAP HEADERBODY CONTENT","CLASS":1}
{"ID_DEFECT":"AXIS-1418","DESCRIPTION":"THERE IS A BUG IN THE FOLLOWING METHOD OF ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT.PROTECTED NODELIST GETELEMENTSNS(ORG.W3C.DOM.ELEMENT PARENT,                            STRING NAMESPACEURI, STRING LOCALNAME)........ ELEMENT CHILD = (ELEMENT)NODE; IF(! (CHILD INSTANCEOF TEXT))........IN THIS METHOD THE NODE IS FIRST CAST INTO ELEMENT CLASS AND THEN THE CHECK FOR TEXT NODE IS BEING CARRIED OUT. SINCE TEXT NODE INTERFACE DOESNOT EXTEND ELEMENT NODE INTERFACE YOU MAY GET CLASSCASTEXCEPTION. TO FIX THIS THE CASTING SHOULD BE DONE WITHIN THE IF BLOCK.","SUMMARY":"TEXT NOT AN ELEMENT : CLASSCASTEXCEPTION","CLASS":1}
{"ID_DEFECT":"AXIS-1426","DESCRIPTION":"FOR THE WSDLHTTP:SELLERCENTRAL.AMAZON.COMHELPMERCHANT_DOCUMENTSPROGRAMSMERCHANTS-API-INTEGRATION-1.3.WSDLGENERATING THE JAVA CODE WITH THE FOLLOWING ANT TARGET:  <TARGET NAME=WSDL2JAVA>    <AXIS-WSDL2JAVA        OUTPUT=$STUBSRC.DIR        URL=$LOCAL.WSDL DEBUG=TRUE VERBOSE=TRUE>      <MAPPING          NAMESPACE=NSMERCHANTDATAEXCHANGE          PACKAGE=COM.FOO.BAR.BAZ >    <AXIS-WSDL2JAVA>  <TARGET>PRODUCES:[AXIS-WSDL2JAVA] RUNNING WSDL2JAVAANTTASK WITH PARAMETERS:[AXIS-WSDL2JAVA]        VERBOSE:TRUE[AXIS-WSDL2JAVA]        DEBUG:TRUE[AXIS-WSDL2JAVA]        SERVER-SIDE:FALSE[AXIS-WSDL2JAVA]        SKELETONDEPLOY:FALSE[AXIS-WSDL2JAVA]        HELPERGEN:FALSE[AXIS-WSDL2JAVA]        FACTORY:NULL[AXIS-WSDL2JAVA]        TESTCASE:FALSE[AXIS-WSDL2JAVA]        NOIMPORTS:FALSE[AXIS-WSDL2JAVA]        NSTOPKG:NSMERCHANTDATAEXCHANGE=COM.ELUXURY.AMAZON.DATAEXCHANGE[AXIS-WSDL2JAVA]        OUTPUT:C:HOMEWSARGENTWORKAMAZONSTUBSRC[AXIS-WSDL2JAVA]        DEPLOYSCOPE:[AXIS-WSDL2JAVA]        URL:FILE:HOMEWSARGENTWORKAMAZONETCMERCHANTS-API-INTEGRATION.WSDL[AXIS-WSDL2JAVA]        ALL:FALSE[AXIS-WSDL2JAVA]        TYPEMAPPINGVERSION:1.1[AXIS-WSDL2JAVA]        TIMEOUT:45000[AXIS-WSDL2JAVA]        FAILONNETWORKERRORS:FALSE[AXIS-WSDL2JAVA]        PRINTSTACKTRACEONFAILURE:TRUE[AXIS-WSDL2JAVA]        NAMESPACEMAPPINGFILE:NULL[AXIS-WSDL2JAVA]        USERNAME:NULL[AXIS-WSDL2JAVA]        :PASSWORDNULL[AXIS-WSDL2JAVA]        HTTP.PROXYHOST=NULL[AXIS-WSDL2JAVA]        HTTP.PROXYPORT=NULL[AXIS-WSDL2JAVA]        HTTP.PROXYUSER=NULL[AXIS-WSDL2JAVA]        HTTP.PROXYPASSWORD=NULL[AXIS-WSDL2JAVA]        SOCKS.PROXYHOST=NULL[AXIS-WSDL2JAVA]        SOCKS.PROXYPORT=NULL[AXIS-WSDL2JAVA] JAVA.LANG.NULLPOINTEREXCEPTION[AXIS-WSDL2JAVA]        AT ORG.APACHE.AXIS.WSDL.TOJAVA.UTILS.GETNEWQNAME(UTILS.JAVA:704)[AXIS-WSDL2JAVA]        AT ORG.APACHE.AXIS.WSDL.TOJAVA.JAVASTUBWRITER.WRITEOPERATIONMAP(JAVASTUBWRITER.JAVA:430)[AXIS-WSDL2JAVA]        AT ORG.APACHE.AXIS.WSDL.TOJAVA.JAVASTUBWRITER.WRITEFILEBODY(JAVASTUBWRITER.JAVA:165)[AXIS-WSDL2JAVA]        AT ORG.APACHE.AXIS.WSDL.TOJAVA.JAVAWRITER.GENERATE(JAVAWRITER.JAVA:148)[AXIS-WSDL2JAVA]        AT ORG.APACHE.AXIS.WSDL.TOJAVA.JAVABINDINGWRITER.GENERATE(JAVABINDINGWRITER.JAVA:141)[AXIS-WSDL2JAVA]        AT ORG.APACHE.AXIS.WSDL.TOJAVA.JAVAGENERATORFACTORY$WRITERS.GENERATE(JAVAGENERATORFACTORY.JAVA:284)[AXIS-WSDL2JAVA]        AT ORG.APACHE.AXIS.WSDL.GEN.PARSER.GENERATE(PARSER.JAVA:328)[AXIS-WSDL2JAVA]        AT ORG.APACHE.AXIS.WSDL.GEN.PARSER.ACCESS$000(PARSER.JAVA:82)[AXIS-WSDL2JAVA]        AT ORG.APACHE.AXIS.WSDL.GEN.PARSER$WSDLRUNNABLE.RUN(PARSER.JAVA:246)[AXIS-WSDL2JAVA]        AT JAVA.LANG.THREAD.RUN(THREAD.JAVA:534)","SUMMARY":"WSDL2JAVA GIVES NULLPOINTEREXCEPTION IN GETNEWQNAME","CLASS":1}
{"ID_DEFECT":"AXIS-1427","DESCRIPTION":"GETNEXTSIBLING AND GETPREVIOUSSIBLING DO NOT WORKIN THE TEST CASE THAT I WILL ATTACH GETPREVIOUSSIBLING IS SHOWN NOT TO WORK BUT IN A CMOPLEX SCENARIO I HAVE DEBUGGED AND SEEN GETNEXTSIBLING NOT WORKING.","SUMMARY":"SIBLING METHOD DO NOT WORK","CLASS":1}
{"ID_DEFECT":"AXIS-1432","DESCRIPTION":"WHEN CREATING A FAULT MESSAGE FOR THE CLIENT THE DETAIL MESSAGE CANNOT BE POPULATED AS PER SAAJ SPECIFICATION. IM TRYING TO CREATE THE FOLLOWING FAULT BODY:<SOAPENV:BODY>  <SOAPENV:FAULT>    <FAULTCODE>CLIENT<FAULTCODE>    <FAULTSTRING>XYZ FAULT<FAULTSTRING>    <DETAIL>       <XYZ:FAULT>          <FAULTCODE>1234<FAULTCODE>          <FAULTSTRING>SOME DESCENT MESSAGE<FAULTSTRING>       <XYZ:FAULT>     <DETAIL>   <SOAPENV:FAULT><SOAPENV:BODY>THE CODE I USE TO CREAT THIS IS:NAME FAULTNAME = ENVELOPE.CREATENAME(FAULT, XYZ, URI);DETAILENTRY FAULTDETAIL = FAULTDETAIL.ADDDETAILENTRY(FAULTNAME);SOAPELEMENT E = FAULTDETAIL.ADDCHILDELEMENT(FAULTCODE);E.ADDTEXTNODE(1234);SOAPELEMENT E2 = FAULTDETAIL.ADDCHILDELEMENT(TTTTENVELOPE.CREATENAME(FAULTSTRING, XYZ, URI));E2.ADDTEXTNODE(SOME DESCENT MESSAGE);THIS RESULTS IN AN EMPTY DETAIL COMPONENT IN THE FAULT PART THAT IS TRANSMITTED TO THE CLIENT.THE ONLY THING I CAN ADD TO THE DETAIL PART IS BY USING ADDTEXTNODE FOR THE FAULTDETAIL ELEMENT. ANYTHING ELSE ISNT ADDED TO THE MESSAGE.MAYBY IM JUST PLAIN STUPID - ONE NEVER KNOWS FOR SURE.THANKS,REINER","SUMMARY":"CREATING A SOAPFAULT WITH ADDITIONAL DETAIL ELEMENTS","CLASS":1}
{"ID_DEFECT":"AXIS-1435","DESCRIPTION":"HI. CURRENTLY THE CODE GENERATED BY THE JAVASERVICEIMPLWRITER SEEMS NOT TOKEEP THE QNAME OF PORT IN THE WSDL. USING JAVA2WSDL WITH THIS WSDLHTTP:SERVICES.XMETHODS.NETSOAPURN:XMETHODS-DELAYED-QUOTES.WSDL WHICH HAS THE WSDL:SERVICE LIKE THIS:  <SERVICE NAME=NET.XMETHODS.SERVICES.STOCKQUOTE.STOCKQUOTESERVICE>  <DOCUMENTATION>NET.XMETHODS.SERVICES.STOCKQUOTE.STOCKQUOTE WEB SERVICE<DOCUMENTATION>  <PORT NAME=NET.XMETHODS.SERVICES.STOCKQUOTE.STOCKQUOTEPORT        BINDING=TNS:NET.XMETHODS.SERVICES.STOCKQUOTE.STOCKQUOTEBINDING>     <SOAP:ADDRESS LOCATION=HTTP:64.124.140.30:9090SOAP>   <PORT><SERVICE>  THE GENERATED SERVICE LOCATOR CODE IS:       THE WSDD SERVICE NAME DEFAULTS TO THE PORT NAME.    PRIVATE JAVA.LANG.STRING NETXMETHODSSERVICESSTOCKQUOTESTOCKQUOTEPORTWSDDSERVICENAME =                 NETXMETHODSSERVICESSTOCKQUOTESTOCKQUOTEPORT;  <--- (1)    PUBLIC STOCK.NETXMETHODSSERVICESSTOCKQUOTESTOCKQUOTEPORTTYPE GETNETXMETHODSSERVICESSTOCKQUOTESTOCKQUOTEPORT(JAVA.NET.URL PORTADDRESS) THROWS JAVAX.XML.RPC.SERVICEEXCEPTION         TRY             STOCK.NETXMETHODSSERVICESSTOCKQUOTESTOCKQUOTEBINDINGSTUB _STUB = NEW STOCK.NETXMETHODSSERVICESSTOCKQUOTESTOCKQUOTEBINDINGSTUB(PORTADDRESS, THIS);            _STUB.SETPORTNAME(GETNETXMETHODSSERVICESSTOCKQUOTESTOCKQUOTEPORTWSDDSERVICENAME());   <--- (3)            RETURN _STUB;                CATCH (ORG.APACHE.AXIS.AXISFAULT E)             RETURN NULL;             PUBLIC JAVA.UTIL.ITERATOR GETPORTS()         IF (PORTS == NULL)             PORTS = NEW JAVA.UTIL.HASHSET();            PORTS.ADD(NEW JAVAX.XML.NAMESPACE.QNAME(NETXMETHODSSERVICESSTOCKQUOTESTOCKQUOTEPORT));  <-- (2)                 RETURN PORTS.ITERATOR();        THE JAVIFIED PORT QNAME IS USED IN (1), (2) AND THE PORT NAME FOR _STUB IS SET USING THIS JAVIFIED NAME IN (3). SO WE CAN NOT SET UP CLIENT JAX-RPC HANDLER CODE USING THE NAME IN THE WSDL. WHEN SETTNG UP CLIENT JAX-RPC HANDLER, THE DEVELOPER SHOULD KNOW THE JAVIFIED NAME BY INSPECTING THE GENERATED LOCATOR CODE LIKE THIS:  HANDLERREGISTRY REG = SERVICE.GETHANDLERREGISTRY();QNAME PORTNAME        = NEW QNAME(HTTP:WWW.THEMINDELECTRIC.COMWSDLNET.XMETHODS.SERVICES.STOCKQUOTE.STOCKQUOTE,            NETXMETHODSSERVICESSTOCKQUOTESTOCKQUOTEPORT);    <-- JAVIFIED NAME LIST LIST = NEW ARRAYLIST();LIST.ADD(NEW HANDLERINFO(CLIENTHANDLER.CLASS, NULL, NULL));REG.SETHANDLERCHAIN(PORTNAME, LIST);   I THINK THAT THE DEVELOPER CAN USE THE WSDL PORT NAME DIRECTLY INSTEAD OF INSPECTING THE AXIS-GENERATED CODE LIKE THIS:   HANDLERREGISTRY REG = SERVICE.GETHANDLERREGISTRY();  QNAME PORTNAME = NEW QNAME(HTTP:WWW.THEMINDELECTRIC.COMWSDLNET.XMETHODS.SERVICES.STOCKQUOTE.STOCKQUOTE,      NET.XMETHODS.SERVICES.STOCKQUOTE.STOCKQUOTEPORT);    <-- XML NAME IN WSDL   I MADE A SOME MODIFICATION IN THE JAVASERVICEIMPLWRITER AND IT WORKED. ID LIKE THE AXIS COMMITTER TO CHECK AND APPLY THIS FIX.THE DIFF WITH THE CURRENTLY AXIS CVS CODE WILL BE ATTACHED. ","SUMMARY":"GENERATED SERVICE IMPL DOES NOT KEEP WSDL PORT NAME","CLASS":1}
{"ID_DEFECT":"AXIS-1436","DESCRIPTION":"IM TRYING TO USE SOAPBODY.ADDDOCUMENT(ORG.W3C.DOM.DOCUMENT) IN AXIS 1.2 BETA TO ADD A DOM DOCUMENT AS THE ROOT SOAPBODYELEMENT.  ADDDOCUMENT CALLS IMPORTBODYELEMENT(MESSAGEELEMENT PARENT, ORG.W3C.DOM.NODE ELEMENT), WHICH HAS THE FOLLOWING CODE:   ORG.W3C.DOM.NODELIST CHILDREN = ELEMENT.GETCHILDNODES();   FOR(INT I = 0; I < CHILDREN.GETLENGTH(); I++)      ORG.W3C.DOM.NODE CHILD = CHILDREN.ITEM(I);      IMPORTMESSAGEELEMENT((MESSAGEELEMENT)ELEMENT, CHILD); WRONG   OOPS, ELEMENT IS A DOM DOCUMENT, NOT A MESSAGEELEMENT, AND GIVES A CLASSCASTEXCEPTION.","SUMMARY":"SOAPBODY.ADDDOCUMENT CLASSCASTEXCEPTION","CLASS":1}
{"ID_DEFECT":"AXIS-1440","DESCRIPTION":"THERE IS A SPACE MISSING IN THE CODE PRODUCED BY JAVABEANWRITER WHEN GENERATION A SIMPLE TYPE GETTER WHERE THE SIMPLE TYPE IS ENUMERABLE. THIS IS BETWEEN THE RETURN KEYWORD AND THE VALUE.","SUMMARY":"JAVABEANWRITER PRODUCES INVALID CODE FOR SIMPLE TYPE GETTER","CLASS":1}
{"ID_DEFECT":"AXIS-1441","DESCRIPTION":"WHEN GENERATING AN ENUM TYPE WHERE THE BASE TYPE IS AN URI, THE GENERATED CODE WILL NOT COMPILE, WITH THE ERROR:-UNHANDLED EXCEPTION TYPE URI.MALFORMEDURIEXCEPTIONTHE CODE GENERATED LOOKS LIKE THIS:-PUBLIC STATIC FINAL ORG.APACHE.AXIS.TYPES.URI _VALUE1 = NEW ORG.APACHE.AXIS.TYPES.URI(HTTP:WWW.FOO.COMBAR);AND ORG.APACHE.AXIS.TYPES.URI THROWS THE CHECKD MALFORMEDURIEXCEPTION","SUMMARY":"CANNOT GENERATE ENUM TYPE WHERE BASE TYPE IS URI","CLASS":1}
{"ID_DEFECT":"AXIS-1442","DESCRIPTION":"JAVA.LANG PACKAGE MISSING BEFORE A STRING DECLARATION IN JAVASRCORGAPACHEAXISWSDLTOJAVAJAVASERVICEIMPLWRITER.JAVA  AT  LINE 482THIS CAUSE MY SAMPLE TO COMPILE FAILED AS I DECLARED A COMPLEXTYPE NAMED STRING IN A NAMESPACE URN:BPEL:JIAP.SO THE CLASS **LOCATOR IS IN PACKAGE JIAP.BPEL AND THIS PACKAGE CONTAINS A CLASS JIAP.BPEL.STRING. SO THE LINE STRING INPUTPORTNAME = PORTNAME.GETLOCALPART(); WRITTEN BY WSDL2JAVA TOOL MAKE CONFLICT BETWEEN JAVA.LANG.STRING AND JIAP.BPEL.STRING.","SUMMARY":"JAVA.LANG PACKAGE MISSING BEFORE A STRING DECLARATION IN JAVASRCORGAPACHEAXISWSDLTOJAVAJAVASERVICEIMPLWRITER.JAVA  AT  LINE 482","CLASS":1}
{"ID_DEFECT":"AXIS-1444","DESCRIPTION":"WHEN WSDL2JAVA GENERATES A JAVA CLASS FOR UNION SIMPLE TYPE THE TWO TYPED (I.E., NON-STRING) CONSTRUCTORS JUST CONTAIN THE CODE:-SET_VALUE(_VALUE)WHERE SET_VALUE DOES NOT REFERENCE A KNOWN METHOD AND _VALUE DOES NOT REFERENCE A KNOWN VARIABLE HENCE THE CLASS WILL NOT COMPILE.","SUMMARY":"WSDL2JAVA GENERATES INVALID TYPED CONSTRUCTORS FOR UNION SIMPLE TYPES","CLASS":1}
{"ID_DEFECT":"AXIS-1449","DESCRIPTION":"THIS WAS TESTED AGAINST 1.2 BETA AND THE HEAD OF CVS AS OF 13-JUL-2004.IN THIS XSD SNIPPET, NEWENTRYIDS IS AN ATTRIBUTE WITH A LIST OF STRINGS.   <XS:COMPLEXTYPE NAME=MODIFYRESPONSETYPE>      <XS:SEQUENCE>         <XS:ELEMENT REF=STATUS>T <XS:ELEMENT REF=EXTENSION MINOCCURS=0 MAXOCCURS=1>      <XS:SEQUENCE>      <XS:ATTRIBUTE NAME=ID TYPE=XS:ID USE=OPTIONAL>      <XS:ATTRIBUTE NAME=NEWENTRYIDS USE=OPTIONAL>         <XS:SIMPLETYPE>            <XS:LIST ITEMTYPE=XS:STRING>         <XS:SIMPLETYPE>      <XS:ATTRIBUTE>   <XS:COMPLEXTYPE>THE GENERATED JAVA FILE DEFINES NEWENTRYIDS LIKE THIS:    PRIVATE JAVA.LANG.STRING[] NEWENTRYIDS;   ATTRIBUTEDURING DESERIALIZATION, BEANDESERIALIZER.ONSTARTELEMENT SELECTS SIMPLELISTDESERIALIZER AS DSER, BUT THEN FAILS THIS TEST:    IF (! (DSER INSTANCEOF SIMPLEDESERIALIZER))                    THROW NEW SAXEXCEPTION(                         MESSAGES.GETMESSAGE(ATTRNOTSIMPLETYPE00,                                    BPD.GETNAME(),                                    BPD.GETTYPE().TOSTRING()));IN FACT, SIMPLELISTDESERIALIZER DERIVES DIRECTLY FROM DESERIALIZERIMPL.  CHANGING SIMPLELISTDESERIALIZER TO DERIVE FROM SIMPLEDESERIALIZER SEEMS TO FIX THE PROBLEM.","SUMMARY":"DESERIALIZATION OF XSD:LIST ATTRIBUTE BROKEN","CLASS":1}
{"ID_DEFECT":"AXIS-1470","DESCRIPTION":"CURRENNLY, ATTEMPTING TO OPEN A CLIENT CONNECTION USING AXIS WILL FAIL UNDER A STRICT SECURITY POLICY. FILEPROVIDER.CHECK ATTEMPTS TO SEE IF THE CLIENT-CONFIG.WSDD IS WRITABLE BY CALLING CANWRITE(). THIS WILL THROW A SECURITYEXCEPTION IF IT IS NOT ALLOWED BY THE SECURITY MANAGER, BUT THIS EXCEPTION IS NOT CAUGHT. I HAVE SEEN SOLUTIONS POSTED TO THE LIST STATING THAT THE POLICY MUST BE CHANGED, BUT I AM RUNNING THIS UNDER TOMCAT IN A SHARED HOSTING ENVIRONMENT SO THIS IS NOT POSSIBLE.HERES A PATCH AGAINST THE CVS VERSION WHICH I HAVE RUNNING SUCCESSFULLY IN PRODUCTION.INDEX: FILEPROVIDER.JAVA===================================================================RCS FILE: HOMECVSPUBLICWS-AXISJAVASRCORGAPACHEAXISCONFIGURATIONFILEPROVIDER.JAVA,VRETRIEVING REVISION 1.51DIFF -U -R1.51 FILEPROVIDER.JAVA--- FILEPROVIDER.JAVAT25 MAY 2004 19:41:43 -0000T1.51+++ FILEPROVIDER.JAVAT21 JUL 2004 23:57:24 -0000@@ -107,7 +107,13 @@      * OR NOT THE FILE IS READ-ONLY.      *     PRIVATE VOID CHECK() -        READONLY = CONFIGFILE.CANREAD() & !CONFIGFILE.CANWRITE();+    TTRY +            READONLY = CONFIGFILE.CANREAD() & !CONFIGFILE.CANWRITE();+    T+    TCATCH (SECURITYEXCEPTION E) +    TTREADONLY = TRUE;+    T+          *          * IF FILE IS READ-ONLY, LOG INFORMATIONAL MESSAGE","SUMMARY":"AXIS CLIENT WILL FAIL WITH STRICT SECURITY POLICY","CLASS":1}
{"ID_DEFECT":"AXIS-1488","DESCRIPTION":"GENERATED CODE FROM XS:LIST ITEMS USES THE WRONG NAMESPACE FOR THE LIST.  ATTACHED IS SOME WSDL THAT DEMONSTRATES THE PROBLEM.  NEWENTRYIDS IS CLASS MODIFYRESPONSETYPE GETS GENERATED LIKE THIS:    ORG.W3.WWW._2001.XMLSCHEMA.IDREFERENCETYPE[] NEWENTRYIDS;THE REASON FOR THIS IS IN SCHEMAUTILS.GETLISTITEMTYPE().  THE CODE IN QUESTION FINDS THE ARRAY TYPE, THROWS AWAY ANY NAMESPACE PREFIX, AND RETURNS A QNAME IN ORG.W3.WWW._2001.XMLSCHEMA.    RETURN NEW QNAME(CONSTANTS.URI_2001_SCHEMA_XSD, TYPE + []);ALSO ATTACHED IS A PATCH THAT PARTIALLY FIXES THE PROBLEM.  THE PATCH WILL ATTEMPT TO FIND THE QNAME OF THE BASE TYPE FOR THE ARRAY.  I CALL THIS A PARTIAL FIX BECAUSE MY PATCH DOES NOT THROW AN EXCEPTION IF THE LIST ITEM TYPE CANNOT BE FOUND IN THE SYMBOL TABLE.  I ALSO SUSPECT THAT THERE MIGHT BE A BETTER WAY TO SOLVE THE PROBLEM.","SUMMARY":"XS:LIST ITEMTYPES ARE FORCED INTO NAMESPACE HTTP:WWW.W3.ORG2001XMLSCHEMA","CLASS":1}
{"ID_DEFECT":"AXIS-1514","DESCRIPTION":"VERIFYTESTCASE AND TYPETESTSERVICETESTCASE FAIL TO COMPILE IN ONE PLACE EACH DUE INCORRECT TYPES BEING PASSED TO GENERATED OPERATIONS.","SUMMARY":"WSDLTYPES TEST FAILURES DUE TO WRONG TYPES BEING PASSED TO GENERATED OPERATIONS","CLASS":1}
{"ID_DEFECT":"AXIS-1515","DESCRIPTION":"DELIVERING THE LOG4J.PROPERTIES IN THE AXIS.JAR FILE IS MISLEADING BECAUSE THE WEB APPLICATION CLASSLOADER LOADS THIS FILE AND OVERWRITES ANY OTHER FILE NAMES YOU MIGHT WANT TO HAVE. THE ONLY WAY YOU CAN GO IS TO HAVE A DIFFERENT FILE NAME LOADED MANUALLY DURING INITIALIZATION.","SUMMARY":"DELIVERING A LOG4J.PROPERTIES LEADS TO CONFUSION","CLASS":1}
{"ID_DEFECT":"AXIS-1517","DESCRIPTION":"THE GERONIMO BUILD BREAKS.  THIS IS BECAUSE THE TESTS GENERATE FILES WITH A UTILITY THAT RELIES ON THE GERONIMO-AXIS JAR, WHICH HASNT BEEN PLACED IN THE REPOSITORY.<<<<<< START OF ERROR>>>>>>>>>>>ECHOPORTSOAPBINDINGIMPL.JAVA ALREADY EXISTS, WSDL2JAVA WILL NOT OVERWRITE IT.    [JAVAC] COMPILING 11 SOURCE FILES TO F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESBUILDCLASSESF:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:2:PACKAGE ORG.APACHE.GERONIMO.AXIS DOES NOT EXISTIMPORT ORG.APACHE.GERONIMO.AXIS.AXISGERONIMOUTILS;                                ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:18:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTTRETURN(JAVA.LANG.STRING)AXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS);                                                 ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:25:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTAXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS);                        ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:32:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTTRETURN((JAVA.LANG.INTEGER)AXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS)).INTVALUE();                                                   ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:39:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTTRETURN((JAVA.LANG.DOUBLE)AXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS)).DOUBLEVALUE();                                                  ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:46:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTTRETURN((JAVA.LANG.FLOAT)AXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS)).FLOATVALUE();                                                 ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:53:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTTRETURN((JAVA.LANG.BOOLEAN)AXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS)).BOOLEANVALUE();                                                   ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:60:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTTRETURN((JAVA.LANG.SHORT)AXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS)).SHORTVALUE();                                                 ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:67:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTTRETURN((JAVA.LANG.LONG)AXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS)).LONGVALUE();                                                ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:74:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTTRETURN(BYTE[])AXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS);                                       ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:81:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTAXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS);                        ^F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISTARGETENERATEDSAMPLESORGAPACHEWSECHOSAMPLEECHOPORTSOAPBINDINGIMPL.JAVA:88:CANNOT RESOLVE SYMBOLSYMBOL  : VARIABLE AXISGERONIMOUTILS LOCATION: CLASSORG.APACHE.WS.ECHOSAMPLE.ECHOPORTSOAPBINDINGIMPLTTTRETURN(ORG.APACHE.WS.ECHOSAMPLE.ECHOSTRUCT)AXISGERONIMOUTILS.INVOKEEJB(ECHO,METHODNAME,CLASSES,ARGUMENTS);                                                                   ^12 ERRORSBUILD FAILEDFILE......F:ERONIMOSRCINCUBATOR-GERONIMOMAVEN.XMLELEMENT... MAVEN:REACTORLINE...... 181COLUMN.... 27UNABLE TO OBTAIN GOAL [DEFAULT] --F:ERONIMOSRCINCUBATOR-GERONIMOMODULESAXISMAVEN.XML:36:36:<ANT:ANT> COMPILE FAILED; SEE THE COMPILER ERROR OUTPUT FOR DETAILS.TOTAL TIME: 5 MINUTES 33 SECONDSFINISHED AT: TUE AUG 17 08:28:46 EDT 2004","SUMMARY":"GERONIMO BUILD BREAKS","CLASS":1}
{"ID_DEFECT":"AXIS-1519","DESCRIPTION":"IT TAKES .4917 SECONDS TO GENERATE JUST ONE UUID.  (YES, SECONDS.)  THIS RENDERS THE FEATURE VERY NEARLY USELESS.IN SIMPLEUUIDGEN, THERE IS A SIMPLE, BUT VERY EXPENSIVE, BUG..  IT CREATES A NEW INSTANCE OF SECURERANDOM ON EACH CALL TO NEXTUUID().  MAKING A NEW INSTANCE OF SECURERANDOM IS VERY EXPENSIVE BECAUSE IT HAS TO SET UP THE ENVIRONMENT FOR PRODUCING CRYPTOGRAPHICALLY STRONG RANDOM NUMBERS.THE INSTANCE OF SECURERANDOM SHOULD BE IN A STATIC VARIABLE AND INITED JUST ONCE.  THEN, YOU CALL GETNEXTLONG() WHEN YOU WANT ANOTHER NUMBER FROM IT.  IT WOULD BE MUCH FASTER THAT WAY WITHOUT COMPROMISING THE INTEGRITY OF THE UUIDS GENERATED.BTW, IF YOU LOOK AT THE COMMENT I COPIED FROM THE CODE, IT APPEARS THAT THIS IS WHAT THE DEVELOPER MEANT TO MAKE THE SECURERANDOM INSTANCE STATIC, BUT FORGOT.    **     * CREATES A NEW UUID. THE ALGORITHM USED IS DESCRIBED BY THE OPEN GROUP.     * SEE <A HREF=HTTP:WWW.OPENGROUP.ORGONLINEPUBS009629399APDXA.HTM>     * UNIVERSAL UNIQUE IDENTIFIER<A> FOR MORE DETAILS.     * <P>     * DUE TO A LACK OF FUNCTIONALITY IN JAVA, A PART OF THE UUID IS A SECURE     * RANDOM. THIS RESULTS IN A LONG PROCESSING TIME WHEN THIS METHOD IS CALLED     * FOR THE FIRST TIME.     *HERES A PROPOSED FIX.  IN THE MEMBER VARIABLES, ADD THE FOLLOWING.    PRIVATE STATIC RANDOM SECURERANDOM = NULL;    STATIC         TRY             SECURERANDOM = SECURERANDOM.GETINSTANCE(SHA1PRNG, SUN);         CATCH (EXCEPTION E)             SECURERANDOM = NEW RANDOM();            THE, REMOVE THE CODE NEAR LINE 235 WHERE THE SECURERANDOM IS BEING CREATED.  THIS CHANGE SHOULD DO IT JUST ONCE.","SUMMARY":"SIMPLEUUIDGEN.NEXTUUID() IS VERY, VERY, VERY SLOW","CLASS":1}
{"ID_DEFECT":"AXIS-1522","DESCRIPTION":"THE JAVA EMITTERS COLLISION PROTECTION FEATURE IS ENABLED BY DEFAULT, WHICH IS FINE. HOWEVER, COLLISION PROTECTION SHOULD NEVER BE PERFORMED FOR TYPES THAT ARE IN NAMESPACES THAT THE USER HAS INDICATED SHOULD BE EXCLUDED. HERES A USE CASE THAT DEMONSTRATES WHY:WSDL W TYPES TARGET NAMESPACE NSRED IMPORTS THREE OTHER WSDLS - NSORANGE, NSYELLOW, AND NSGREEN. NSORANGE AND NSYELLOW ALSO IMPORT NSGREEN. NSGREEN DEFINES AN ELEMENT NAMED DESTROY THAT HAS AN ANONYMOUS COMPLEX TYPE. I FIRST RUN WSDL2JAVA ON THE IMPORTED WSDLS AND JAR UP THE GENERATED TYPES INTO A REUSABLE LIB SPECTYPES.JAR. THE CLASS GENERATED FOR NSGREENS DESTROY TYPE IS NAMED _DESTROYTYPE. I THEN RUN WSDL2JAVA ON NSRED, SPECIFYING THAT NSORANGE, NSYELLOW, AND NSGREEN SHOULD BE EXCLUDED, AND INCLUDING SPECTYPES.JAR IN THE CLASSPATH. WSDL2JAVA ENCOUNTERS NSGREENS DESTROY ANON TYPE MULTIPLE TIMES IN ITS TRAVERSAL OF NSRED AND ITS IMPORTED WSDLS. EACH TIME IT ENCOUNTERS IT, ALTHOUGH IT DOESNT ACTUALLY GENERATE ANY CLASSES BECAUSE OF THE NAMESPACE EXCLUSION, IT KEEPS BUMPING UP THE CLASSNAME THAT IS STORED IN THE SYMBOLTABLE FOR THE ANON DESTROY TYPE. WHEN ALLS DONE, THE CLASS THAT ENDS UP IN THE SYMBOL TABLE IS NAMED _DESTROYTYPE5. THIS IS THE CLASS THAT ENDS UP BEING WRITTEN INTO THE BINDING IMPLS AND STUBS FOR THE OPERATIONS IN NSRED. UNFORTUNATELY, NO SUCH CLASS EXISTS; THE PREGENERATED CLASS THAT IS IN SPECTYPES.JAR IS NAMED _DESTROYTYPE, NOT _DESTROYTYPE5. SO WHEN I TRY TO COMPILE THE NSRED GENERATED CLASSES, I GET COMPILE ERRORS FOR THE IMPLS AND STUBS. IF COLLISION PROTECTION IS NEVER PERFORMED FOR TYPES IN EXCLUDED NAMESPACES, THIS ISSUE GOES AWAY. THIS MAKES SENSE - SINCE THERES NO WAY TO KNOW WHAT THE PREGENERATED CLASSNAME IS, THE BEST ASSUMPTION TO MAKE IS THAT IS DOES NOT HAVE A NUMERICAL SUFFIX.  ","SUMMARY":"JAVAGENERATORFACTORY SHOULD NOT PERFORM COLLISION PROTECTION FOR TYPES THAT ARE IN EXCLUDED NAMESPACES","CLASS":1}
{"ID_DEFECT":"AXIS-1532","DESCRIPTION":"IMPL OF SAAJ SETVALUE() IN NODEIMPL DOES NOT HANDLE THE FOLLOWING CASES PROPERLY:- CALLED ON NODE WITH NO CHILDREN- CALLED ON NODE WITH MORE THAN ONE CHILDALSO, SETVALUE() SHOULD BE OVERRIDDEN IN MESSAGEELEMENT TO SYNC UP OBJECTVALUE TO THE NEW NODE VALUE WHEN ITS POSSIBLE TO DO SO.","SUMMARY":"NODEIMPL#SETVALUE() DOES NOT BEHAVE ACCORDING TO SAAJ NODE API","CLASS":1}
{"ID_DEFECT":"AXIS-1535","DESCRIPTION":"IF A USER WANT TO LOG A DYNAMIC PROXY, THE AXISCLIENTPROXY WILL TRY TO INVOKE(VIA RPC) THE TOSTRING METHOD CALL TO ITS INTERNAL CALL INSTANCE.BUT THE CALL DO NOT FIND THE TOSTRING OPERATION AND FAILS WITH SERVICEEXCEPTION.BY DELEGATING THE JAVA.LANG.OBJECT METHODS CALL TO THE INTERNAL CALL INSTANCE, WE ARE SURE THAT THESES BASIC OPERATIONS ARE HANDLED CORRECTLY.IM WORKING ON A PATCH...","SUMMARY":"DYNAMIC PROXY SHOULD DELEGATE ALL OBJECT METHODS TO ITS INTERNAL CALL INSTANCE","CLASS":1}
{"ID_DEFECT":"AXIS-1539","DESCRIPTION":"WSDL2JAVA SHOULD USE WRAPPER CLASSES FOR PRIMITVE TYPES THAT HAVE USE=OPTIONAL, OTHERWISE ITS NOT POSSIBLE IT TELL THE DIFFERENCE BETWEEN PRIMITIVES THAT ARE NOT SENT OVER THE WIRE AND DEFAULT VALUES.","SUMMARY":"WSDL2JAVA DOES NOT HANDLE USE=OPTIONAL PROPERLY FOR PRIMITIVE TYPES","CLASS":1}
{"ID_DEFECT":"AXIS-1545","DESCRIPTION":"SOME CODE THAT WORKED WITH AN OLDER SUN JAXM RI IS NOT WORKING PROPERLY W THE LATEST AXIS.  SETTING THE SOAPACTION VIA MIMEHEADER.ADDHEADER() SEEMS TO CREATE 2 COPIES OF THE HEADER IN THE REQUEST MESSAGE.THIS CODE:","SUMMARY":"ADDING SOAPACTION MIMEHEADER GENERATES 2 SOAPACTIONS IN THE ACTUAL MESSAGE","CLASS":1}
{"ID_DEFECT":"AXIS-1549","DESCRIPTION":"HELLO,I HAVE AN EXCEPTION WHEN I TRY TO DEPLOY THE WSDD FILE INTO AXIS.I CREATED AND DEPLOYED THE EJB INTO JBOSSTOMCAT BUT WHEN I TRY TO DEPLOY THE WSDD DESCRIPTOR USING  JAVA ORG.APACHE.AXIS.CLIENT.ADMINCLIENT DEPLOY.WSDD I GET THE FOLLOWING EXCEPTION:PROCESSING FILE DEPLOY.WSDDEXCEPTION:: JAVA.LANG.EXCEPTION: FIXMEMY EJB IS A SIMPLE ONE JUST TO TEST THE SOAP COMMUNICATION WITH AXIS.......I HAVE ONLY ONE METHOD (SAYHELLO()) THAT RETURNS A STRING.THE DEPLOY.WSDD LOOKS LIKE THIS:<?XML VERSION=1.0 ENCODING=UTF-8?><DEPLOYMENT XMLNS=HTTP:XML.APACHE.ORGAXISWSDD XMLNS:JAVA=HTTP:XML.APACHE.ORGAXISWSDDPROVIDERSJAVA>T<SERVICE NAME=SESSIONTEST PROVIDER=JAVA:EJB>TT<PARAMETER NAME=BEANJNDINAME VALUE=EJBSTEST>TT<PARAMETER NAME=HOMEINTERFACENAME VALUE=SESSIONTEST.INTERFACES.STESTHOME>TT<PARAMETER NAME=REMOTEINTERFACENAME VALUE=SESSIONTEST.INTERFACES.STEST>TT<PARAMETER NAME=ALLOWEDMETHODS VALUE=*>TT<PARAMETER NAME=JNDIURL VALUE=JNP:LOCALHOST:1099>TT<PARAMETER NAME=JNDICONTEXTCLASS VALUE=ORG.JNP.INTERFACES.NAMINGCONTEXTFACTORY>T<SERVICE><DEPLOYMENT>WHAT CAN BE THE PROBLEM?THANK YOU,ADRIAN","SUMMARY":"EXCEPTION:: JAVA.LANG.EXCEPTION: FIXME","CLASS":1}
{"ID_DEFECT":"AXIS-1560","DESCRIPTION":" XS:BASE64BINARY FIELD IN WSDL GENERATES (INCORRECTLY) TO ANHEXBINARY.DECODE() IN DESERIALIZATION.","SUMMARY":"WSDL2JAVA:  XS:BASE64BINARY GENERATES HEXBINARY","CLASS":1}
{"ID_DEFECT":"AXIS-1574","DESCRIPTION":"THERE SEEMS TO BE A TYPO IN BULD.XML AROUND LINE 102 WHICH IS A <EXCLUDE> TAG WITH UNLESS=IBMJSSE.PRESENT, WHILE IT SHOULD HAVE BEEN UNLESS=IBM.JSSE.PRESENT TO CORRECTLY LINKUP WITH TARGETS.XML. TWO SOURCE FILES ARE AFFECTED BY THIS IN THE PACKAGE ORGAPACHEAXISCOMPONENTSET","SUMMARY":"BUILD,XML ALWAYS IGNORES IBM.JSSE DEPENDENT SOURCES","CLASS":1}
{"ID_DEFECT":"AXIS-1578","DESCRIPTION":"WSDL2JAVA GENERATES SERVICE LOCATOR FILES THAT EXTEND ORG.APACHE.AXIS.CLIENT.SERVICE. THE GENERATED CODE CONTAINS NO CONSTRUCTOR DEFINITIONS SO JAVA GENERATES A VOID CONSTRUCTOR. IN CONSEQUENCE IT IS NOT POSSIBLE TO CONFIGURE THE AXISENGINE VIA AN ENGINECONFIGURATION INSTANCE - THIS CONFUGURATION HAPPENS DURING OBJECT CONSTRUCTION SO THIS IS THE ONLY FEASABLE TIME TO DO THIS.(IN MUTLITHREADEDMULTIAPPLICATION ENVIRONMENTS INSTANCE CONFIGURATION IS SUPERIOR TO STATICPROPERTY BASED CONFIGURATION - THE ENGINE IS DESIGNED FOR THIS, IT SIMPLY NEEDS CONNECTING TO THE LOCATOR)DESIRED RESOLUTION:ADD CONSTRUCTOR DEFINITIONS TO GENERATED CODE - A VOID CONSTRUCTOR FOR BACKWARDS COMPATIBILITY, AND A CONSTRUCTOR THAT ACCEPTS AN ENGINE CONFIGURATION OBJECT AND PASSES IT TO THE SUPER CLASS.","SUMMARY":"CANNOT CUSTOMIZE CONFIGURATION AS WSDL2JAVA GENERATES SERVICELOCATOR CLASSES WITHOUT CONSTRUCTOR","CLASS":1}
{"ID_DEFECT":"AXIS-1582","DESCRIPTION":"AN IMPORTED DEFINITION IS NOT FOUND DURING EXECUTION OF WSDL2JAVA.THE ENTIRE CONTENT OF <XSD:SCHEMA> (IN <WSDL:TYPES>) IS IMPORTED FROM AN EXTERNAL XSD FILE, WHICH ITSELF IMPORTS OTHER SCHEMAS WITH DIFFERENT NAMESPACE.SEE DETAILS OF EXCEPTION BELOW:D:JEROMEMWSDLBUILD.XML:32: ERROR WHILE PROCESSING WSDL IN WSDL2JAVAANTTASK FOR D:JEROMEMWSDLNOTIFICATIONSERVICE.WSDLTAT ORG.APACHE.AXIS.TOOLS.ANT.WSDL.WSDL2JAVAANTTASK.EXECUTE(WSDL2JAVAANTTASK.JAVA:272)TAT ORG.APACHE.TOOLS.ANT.UNKNOWNELEMENT.EXECUTE(UNKNOWNELEMENT.JAVA:306)TAT ORG.APACHE.TOOLS.ANT.TASK.PERFORM(TASK.JAVA:401)TAT ORG.APACHE.TOOLS.ANT.TARGET.EXECUTE(TARGET.JAVA:338)TAT ORG.APACHE.TOOLS.ANT.TARGET.PERFORMTASKS(TARGET.JAVA:365)TAT ORG.APACHE.TOOLS.ANT.PROJECT.EXECUTETARGET(PROJECT.JAVA:1237)TAT ORG.APACHE.TOOLS.ANT.PROJECT.EXECUTETARGETS(PROJECT.JAVA:1094)TAT ORG.APACHE.TOOLS.ANT.MAIN.RUNBUILD(MAIN.JAVA:669)TAT ORG.APACHE.TOOLS.ANT.MAIN.STARTANT(MAIN.JAVA:220)TAT ORG.APACHE.TOOLS.ANT.LAUNCH.LAUNCHER.RUN(LAUNCHER.JAVA:215)TAT ORG.APACHE.TOOLS.ANT.LAUNCH.LAUNCHER.MAIN(LAUNCHER.JAVA:90)CAUSED BY: JAVA.IO.IOEXCEPTION: ELEMENT HTTP:WWW.TMFORUM.ORGSCHEMAMTOSINOTIFICATIONSERVICEV1NOTIFYREQUEST IS REFERENCED BUT NOT DEFINED.TAT ORG.APACHE.AXIS.WSDL.SYMBOLTABLE.SYMBOLTABLE.CHECKFORUNDEFINED(SYMBOLTABLE.JAVA:657)TAT ORG.APACHE.AXIS.WSDL.SYMBOLTABLE.SYMBOLTABLE.ADD(SYMBOLTABLE.JAVA:532)TAT ORG.APACHE.AXIS.WSDL.SYMBOLTABLE.SYMBOLTABLE.POPULATE(SYMBOLTABLE.JAVA:506)TAT ORG.APACHE.AXIS.WSDL.SYMBOLTABLE.SYMBOLTABLE.POPULATE(SYMBOLTABLE.JAVA:483)TAT ORG.APACHE.AXIS.WSDL.GEN.PARSER$WSDLRUNNABLE.RUN(PARSER.JAVA:356)TAT JAVA.LANG.THREAD.RUN(THREAD.JAVA:534)--- NESTED EXCEPTION ---JAVA.IO.IOEXCEPTION: ELEMENT HTTP:WWW.TMFORUM.ORGSCHEMAMTOSINOTIFICATIONSERVICEV1NOTIFYREQUEST IS REFERENCED BUT NOT DEFINED.TAT ORG.APACHE.AXIS.WSDL.SYMBOLTABLE.SYMBOLTABLE.CHECKFORUNDEFINED(SYMBOLTABLE.JAVA:657)TAT ORG.APACHE.AXIS.WSDL.SYMBOLTABLE.SYMBOLTABLE.ADD(SYMBOLTABLE.JAVA:532)TAT ORG.APACHE.AXIS.WSDL.SYMBOLTABLE.SYMBOLTABLE.POPULATE(SYMBOLTABLE.JAVA:506)TAT ORG.APACHE.AXIS.WSDL.SYMBOLTABLE.SYMBOLTABLE.POPULATE(SYMBOLTABLE.JAVA:483)TAT ORG.APACHE.AXIS.WSDL.GEN.PARSER$WSDLRUNNABLE.RUN(PARSER.JAVA:356)TAT JAVA.LANG.THREAD.RUN(THREAD.JAVA:534)","SUMMARY":"WSDL2JAVA FAILS TO PROCESS XSD:IMPORT","CLASS":1}
{"ID_DEFECT":"AXIS-1583","DESCRIPTION":"BEANDESERIALIZERFACTORY IS SUPPOSED TO HANDLE JAX-RPC ENUM CLASSES, ACCORDING TO THIS METHOD THAT IT USES IN ORG.APACHE.AXIS.UTILS.JAVAUTILS:   **    * DETERMINE IF THE CLASS IS A JAX-RPC ENUM CLASS.    * AN ENUMERATION CLASS IS RECOGNIZED BY    * A GETVALUE() METHOD, A TOSTRING() METHOD,     * A FROMSTRING(STRING) METHOD    * A FROMVALUE(TYPE) METHOD AND THE LACK    * OF A SETVALUE(TYPE) METHOD    *   PUBLIC STATIC BOOLEAN ISENUMCLASS(CLASS CLS) (IT WOULD BE HELPFUL, BTW, IF THE JAVADOC INCLUDED THE NECESSARY STATIC SPECIFIERS IN THE METHOD DESCRIPTIONS ABOVE.) IT IS RECOGNIZING MY CLASS CORRECTLY, AND IS APPARENTLY PREPARED TO DESERIALIZE IT AFTER INITING. BUT - THIS CODE IN BEANDESERIALIZERFACTORY:       IF (DESERCLASS == ENUMSERIALIZER.CLASS)           RETURN SUPER.GETGENERALPURPOSE(MECHANISMTYPE);              RETURN NEW BEANDESERIALIZER(JAVATYPE, XMLTYPE, TYPEDESC,           PROPERTYMAP);FAILS TO TREAT MY CLASS AS AN ENUM CLASS EVERY TIME, BECAUSE DESERCLASS IS ACTUALLY ENUMDESERIALIZER. IF I CHANGE IT TO:                             ^^      IF (DESERCLASS == ENUMDESERIALIZER.CLASS) THE DESERIALIZATION OF THE CLASS WORKS FINE.IVE PULLED OUT THE LATEST AXIS CVS SOURCE, AND THE BUG APPEARS TO STILL BE THERE. SO:- IS MY DIAGNOSIS AND FIX CORRECT?- IF SO, WHATS THE BEST WAY TO GET IT INTO THE CURRENT RELEASE QUICKLY? IM A NEWBIE TO THE APACHE OPEN SOURCE COMMUNITY.- AND IF IM CORRECT, HOW DID IT EVER WORK? MY THEORY IS THAT SINCE MOST AXIS USERS APPEAR TO USE JAVA2WSDL (WE ARE NOT), SERIALIZATION OF ENUMS WAS TAKEN CARE OF BY A GENERATED GETDESERIALIZER() FUNCTION - BUT THATS A SHOT IN THE DARK - DID I HIT ANYTHING?   ;-)","SUMMARY":"BEANDESERIALIZERFACTORY INCORRECTLY HANDLES JAX-RPC ENUM CLASSES","CLASS":1}
{"ID_DEFECT":"AXIS-1585","DESCRIPTION":"HI.IM WORKING ON AN APPLICATION THAT NEEDS TO SERIALIZE TREES OF WSDL2JAVA-GENERATED OBJECTS E.G. TO WRITE THEM TO DISK AS XML DOCUMENTS.  IM USING CODE THAT LOOKS LIKE:        WRITER OUT = NEW FILEWRITER(BUILDECREPORT-TEST.XML);        SERIALIZATIONCONTEXT SER = NEW SERIALIZATIONCONTEXT(OUT);        SER.SETPRETTY(TRUE);         SER.SERIALIZE(NEW QNAME(ECREPORT), NEW ATTRIBUTESIMPL(), OUTPUT, NULL, FALSE, BOOLEAN.FALSE);        OUT.FLUSH();        OUT.CLOSE();WHEN I TRIED RUNNING THE CODE IT DIDNT SERIALIZE, SO I LOOKED AT SERIALIZATIONCONTEXT AND FOUND A BUG IN GETSERIALIZERFROMCLASS().         TRY             METHOD METHOD = JAVATYPE.GETMETHOD(                    SERIALIZER_METHOD, SERIALIZER_CLASSES);            IF (METHOD != NULL)                 SERIALIZER = (SERIALIZER) METHOD.INVOKE(NULL,                     NEW OBJECT[] MSGCONTEXT.GETENCODINGSTYLE(), JAVATYPE, QNAME);                    CATCH (EXCEPTION E)        BECAUSE MSGCONTEXT IS NULL THE CALL TO MSGCONTEXT.GETENCODINGSTYLE() WILL CAUSE A NULLPOINTEREXCEPTION.  THE NPE WAS BEING THROWN AWAY BECAUSE OF THE CATCH(EXCEPTION E).  ILL ATTACH A PATCH THAT FIXES THIS, AND ONE DOWNSTREAM BUG IN BEANSERIALIZER AND SEEMS TO WORK FOR ME.","SUMMARY":"NPE AFTER USING SERIALIZATIONCONTEXT ONE-ARG CONSTRUCTOR","CLASS":1}
{"ID_DEFECT":"AXIS-1588","DESCRIPTION":"WSDL2JAVA GENERATES WRONG STUBS THAT SHOULD HANDLE NODES OF TYPE BASE64.BINARY.TO DECODE BASE64 CONTENT THE HEXBINARY DECODING IS USED. SO I GET THE FAULT STRING: BAD CHARACTER OR INSUFFICIENT NUMBER OF CHARACTERS IN HEX STRINGPUBLIC CONTENTTYPE(JAVA.LANG.STRING _VALUE)   WRONG: DONT USE HEXBINARY DECODING WITH BASE64 CONTENT  THIS._VALUE = ORG.APACHE.AXIS.TYPES.HEXBINARY.DECODE(_VALUE);  THIS._VALUE = ORG.APACHE.AXIS.ENCODING.BASE64.DECODE(_VALUE);PUBLIC JAVA.LANG.STRING TOSTRING()   WRONG: DONT USE HEXBINARY DECODING WITH BASE64 CONTENT  RETURN _VALUE == NULL ? NULL : ORG.APACHE.AXIS.TYPES.HEXBINARY.ENCODE(_VALUE);    RETURN _VALUE == NULL ? NULL : ORG.APACHE.AXIS.ENCODING.BASE64.ENCODE(_VALUE);I REPLACED THE (NOW COMMENTED) LINES ..TYPES.HEXBINARY.. WITH ..ENCODING.BASE64.. AS A WORKAROUND.","SUMMARY":"BASE64.BINARY DECODES AS HEXBINARY --> ERROR","CLASS":1}
{"ID_DEFECT":"AXIS-1589","DESCRIPTION":"HI.IM WORKING ON AN APPLICATION THAT NEEDS TO XML-SERIALIZE TREES OF WSDL2JAVA-GENERATED OBJECTS TO AN XML DOCUMENT SO IT CAN E.G. SAVE THEM TO A FILE.  IM USING THE 1-ARGUMENT CONSTRUCTOR AND THE 5-ARGUMENT SERIALIZATIONCONTEXT.SERIALIZE() METHOD BUT IT SEEMS TO IGNORE THE BOOLEAN SENDTYPE ARGUMENT; IT ADDS TYPES TO THE OUTPUT WHETHER THE VALUE IS BOOLEAN.TRUE OR BOOLEAN.FALSE.THE PROBLEM SEEMS TO BE THAT SERIALIZATIONCONTEXT HAS A FLAG (SENDXSITYPE) TO INDICATE WHETHER THE TYPES SHOULD BE SENT, BUT SERIALIZE() NEVER SETS THAT VARIABLE SO WHEN IT CALLS SPECIFIC TYPE SERIALIZERS (E.G. BEANSERIALIZER) AND THEN THEY CALL BACK TO STARTELEMENT THE CALLERS ARGUMENT HAS BEEN FORGOTTEN AND IT ADDS THE TYPE TO THE OUTPUT ANYWAY.SO IVE ADDED A PATCH THAT SEEMS TO FIX THE PROBLEM.  IT CACHES THE VALUE OF SENDXSITYPE, SETS IT BASED ON THE USERS PREFERENCE, AND THEN SETS IT BACK BEFORE EXITING SERIALIZE().  IT SEEMS TO PASS ALL-TESTS AND IT RESPECTS THE VALUE OF THE CALLERS SENDTYPE ARGUMENT.","SUMMARY":"SERIALIZATIONCONTEXT.SERIALIZE(*,*,*,*,BOOLEAN.FALSE) ADDS TYPES","CLASS":1}
{"ID_DEFECT":"AXIS-1594","DESCRIPTION":"I TRIED TO RUN A .JWS ON WEBSPHERE 4 AND GOT THE FOLLOWING ERROR :SERVLET ERROR: JAVAX.SERVLET.HTTP.HTTPSERVLETREQUEST: METHOD GETREQUESTURL&#40;&#41;LJAVALANGSTRINGBUFFER&#59; NOT FOUND: JAVA.LANG.NOSUCHMETHODERROR: JAVAX.SERVLET.HTTP.HTTPSERVLETREQUEST: METHOD GETREQUESTURL()LJAVALANGSTRINGBUFFER; NOT FOUNDTAT ORG.APACHE.AXIS.TRANSPORT.HTTP.AXISSERVLET.DOGET(AXISSERVLET.JAVA:250)TAT JAVAX.SERVLET.HTTP.HTTPSERVLET.SERVICE(HTTPSERVLET.JAVA:740)TAT ORG.APACHE.AXIS.TRANSPORT.HTTP.AXISSERVLETBASE.SERVICE(AXISSERVLETBASE.JAVA:301)TAT JAVAX.SERVLET.HTTP.HTTPSERVLET.SERVICE(HTTPSERVLET.JAVA:853)TAT COM.IBM.SERVLET.ENGINE.WEBAPP.STRICTSERVLETINSTANCE.DOSERVICE(SERVLETMANAGER.JAVA:827)TAT COM.IBM.SERVLET.ENGINE.WEBAPP.STRICTLIFECYCLESERVLET._SERVICE(STRICTLIFECYCLESERVLET.JAVA:167)TAT COM.IBM.SERVLET.ENGINE.WEBAPP.IDLESERVLETSTATE.SERVICE(STRICTLIFECYCLESERVLET.JAVA:297)TAT COM.IBM.SERVLET.ENGINE.WEBAPP.STRICTLIFECYCLESERVLET.SERVICE(STRICTLIFECYCLESERVLET.JAVA:110)TAT COM.IBM.SERVLET.ENGINE.WEBAPP.SERVLETINSTANCE.SERVICE(SERVLETMANAGER.JAVA:472)TAT COM.IBM.SERVLET.ENGINE.WEBAPP.VALIDSERVLETREFERENCESTATE.DISPATCH(SERVLETMANAGER.JAVA:1012)TAT COM.IBM.SERVLET.ENGINE.WEBAPP.SERVLETINSTANCEREFERENCE.DISPATCH(SERVLETMANAGER.JAVA:913)TAT COM.IBM.SERVLET.ENGINE.WEBAPP.WEBAPPREQUESTDISPATCHER.HANDLEWEBAPPDISPATCH(WEBAPPREQUESTDISPATCHER.JAVA:721)TAT COM.IBM.SERVLET.ENGINE.WEBAPP.WEBAPPREQUESTDISPATCHER.DISPATCH(WEBAPPREQUESTDISPATCHER.JAVA:374)TAT COM.IBM.SERVLET.ENGINE.WEBAPP.WEBAPPREQUESTDISPATCHER.FORWARD(WEBAPPREQUESTDISPATCHER.JAVA:118)TAT COM.IBM.SERVLET.ENGINE.SRT.WEBAPPINVOKER.DOFORWARD(WEBAPPINVOKER.JAVA:134)TAT COM.IBM.SERVLET.ENGINE.SRT.WEBAPPINVOKER.HANDLEINVOCATIONHOOK(WEBAPPINVOKER.JAVA:239)TAT COM.IBM.SERVLET.ENGINE.INVOCATION.CACHEDINVOCATION.HANDLEINVOCATION(CACHEDINVOCATION.JAVA:67)TAT COM.IBM.SERVLET.ENGINE.SRP.SERVLETREQUESTPROCESSOR.DISPATCHBYURI(SERVLETREQUESTPROCESSOR.JAVA:151)TAT COM.IBM.SERVLET.ENGINE.OSELISTENER.OSELISTENERDISPATCHER.SERVICE(OSELISTENER.JAVA:317)TAT COM.IBM.SERVLET.ENGINE.HTTP11.HTTPCONNECTION.HANDLEREQUEST(HTTPCONNECTION.JAVA:60)TAT COM.IBM.WS.HTTP.HTTPCONNECTION.READANDHANDLEREQUEST(HTTPCONNECTION.JAVA:477)TAT COM.IBM.WS.HTTP.HTTPCONNECTION.RUN(HTTPCONNECTION.JAVA:351)TAT COM.IBM.WS.UTIL.CACHEDTHREAD.RUN(THREADPOOL.JAVA(COMPILED CODE))","SUMMARY":"AXIS DOESNT RUN WEBSPHERE 4","CLASS":1}
{"ID_DEFECT":"AXIS-1597","DESCRIPTION":"ON AN AVERAGE LOAD ON THE SERVER , THE THREAD DUMP IS INDICATING MANY ( ~250WAIT FOR MONITOR AT :AT ORG.APACHE.AXIS.UTILS.XMLUTILS.NEWDOCUMENT(XMLUTILS.JAVA:318)        AT ORG.APACHE.AXIS.UTILS.XMLUTILS.NEWDOCUMENT(XMLUTILS.JAVA:335)        AT ORG.APACHE.AXIS.CONFIGURATION.FILEPROVIDER.CONFIGUREENGINE(FILEPROVIDER.JAVA:209)","SUMMARY":"REPONSE TIME INCREASES WITH LOAD FOR AXIS","CLASS":1}
{"ID_DEFECT":"AXIS-1611","DESCRIPTION":"WHEN COMMONSHTTPSENDER ENCOUNTERS AN HTTP ERROR SUCH AS 404 OR 401, IT CREATES AN AXISFAULT, BUT IT DOES NOT ADD THE ERROR CODE AS A FAULT DETAIL. THE OLD CLASS, HTTPSENDER, ADDS THIS UNDER A QNAME RESERVED FOR THIS PURPOSE (HTTP:XML.APACHE.ORGAXISHTTPERRORCODE).THE FOLLOWING STATEMENT FROM HTTPSENDER.READFROMSOCKET() SHOULD BE ADDED TO COMMONSHTTPSENDER.INVOKE():   FAULT.ADDFAULTDETAIL(CONSTANTS.QNAME_FAULTDETAIL_HTTPERRORCODE,                    INTEGER.TOSTRING(RETURNCODE));NOT INCLUDING A SEPARATE FAULT DETAIL REQUIRES PARSING THE ERROR CODE OUT OF THE FAULT STRING, WHICH IS ERROR-PRONE AND MAY BREAK IF FUTURE RELEASES CHANGE THE FORMAT OF THIS STRING.BY THE WAY, HTTPSENDER ACTUALLY IMPLEMENTS THE ENHANCEMENT REQUESTED BY BUG 16623 (HTTP:ISSUES.APACHE.ORGBUGZILLASHOW_BUG.CGI?ID=16623).","SUMMARY":"COMMONSHTTPSENDER DOES NOT ADD HTTP ERROR CODE TO FAULT DETAILS","CLASS":1}
{"ID_DEFECT":"AXIS-1614","DESCRIPTION":"AFTER AXIS 1598 WAS APPLIED, WE MET A NAMING PROBLEM THAT DID NOT EXIST BEFORE.* PROBLEMWSDL2JAVA CAN NOT PROCESS THE WSDL WHICH HAS THE SAME NAME IN PORTTYPE, OPERATION, COMPLEXTYPE ANDOR OTHER STUFF IN IT.* SOLUTIONTHE 4.3.12 OF JAX-RPC 1.1 SPEC ADDRESSED THIS KIND OF NAMING COLLISIONS. THIS IS PARTLY IMPLEMENTED IN CURRENT AXIS. THE ATTACHED PATCH MAKES IT A LITTLE MORE COMPLIANT TO JAX-RPC SPEC.THIS ALSO SOLVES THE NAME COLLISION PROBLEM OF AXIS-1598.* CAUTIONIN CURRENT AXIS, AXIS USES SUFFIXES TO RESOLVE THE NAME COLLISION. FOR XSD:ELEMENT AND WSDL:PORTTYPE, THE SUFFIXES ARE:XSD:ELEMENT -> _ELEMTYPEWSDL:PORTTYPE -> _PORTBUT IN JAX-RPC 1.1 SPEC, THE SUFFIXES ARE:XSD:ELEMENT -> _ELEMENTWSDL:PORTTYPE -> _PORTTYPEI FOLLOW THE WAY OF JAX-RPC 1.1 IN THIS PATCH. ","SUMMARY":"NAME COLLISION OF GENERATED CODE CAUSED BY AXIS-1598","CLASS":1}
{"ID_DEFECT":"AXIS-1646","DESCRIPTION":"FOR A PARAMETER OF TYPE BYTE[], RUNNING JAVA2WSDL WITH --STYLE=WRAPPED AND --USE=LITERAL GENERATES A SCHEMA WITH A SEQUENCE OF ELEMENTS OF TYPE XSD:BYTE INSTEAD OF A SINGLE ELEMENT OF TYPE XSD:BASE64BINARY. FOR EXAMPLE, GIVEN THE FOLLOWING METHOD:    PUBLIC BYTE[] UPDATEPDF(BYTE[] PDFDOC, STRING NEWVALUES)    THE GENERATED SCHEMA CONTAINS THE FOLLOWING DEFINITION:   <ELEMENT NAME=UPDATEPDF>    <COMPLEXTYPE>     <SEQUENCE>      <ELEMENT MAXOCCURS=UNBOUNDED NAME=PDFDOC TYPE=XSD:BYTE>      <ELEMENT NAME=NEWVALUES TYPE=XSD:STRING>     <SEQUENCE>    <COMPLEXTYPE>STUBS GENERATED WITH WSDL2JAVA CREATE THE FOLLOWING SOAP MESSAGE: SOAPENV:ENVELOPE XMLNS:SOAPENV=HTTP:SCHEMAS.XMLSOAP.ORGSOAPENVELOPE XMLNS:XSD=HTTP:WWW.W3.ORG2001XMLSCHEMA XMLNS:XSI=HTTP:WWW.W3.ORG2001XMLSCHEMA-INSTANCE>   <SOAPENV:BODY>      <UPDATEPDF XMLNS=HTTP:WWW.LTREE.COMWSDLTEMPLATE>         <PDFDOC>111<PDFDOC>         <PDFDOC>114<PDFDOC>         <PDFDOC>105<PDFDOC>         <PDFDOC>103<PDFDOC>         <PDFDOC>105<PDFDOC>         <PDFDOC>110<PDFDOC>         <PDFDOC>97<PDFDOC>         <PDFDOC>108<PDFDOC>         <PDFDOC>32<PDFDOC>         <PDFDOC>115<PDFDOC>         <PDFDOC>116<PDFDOC>         <PDFDOC>114<PDFDOC>         <PDFDOC>105<PDFDOC>         <PDFDOC>110<PDFDOC>         <PDFDOC>103<PDFDOC>         <NEWVALUES>UPDATE VALUES<NEWVALUES>      <UPDATEPDF>   <SOAPENV:BODY><SOAPENV:ENVELOPE>THE PDFDOC ELEMENT SHOULD BE DEFINED AS:         <ELEMENT NAME=PDFDOC TYPE=XSD:BASE64BINARY>   RUNNING JAVA2WSDL WITH --STYLE=DOCUMENT PRODUCES THE CORRECT OUTPUT.       ","SUMMARY":"JAVA2WSDL -Y WRAPPED -U LITERAL GENERATES INCORRECT SCHEMA FOR BYTE[] PARAMETERS","CLASS":1}
{"ID_DEFECT":"AXIS-1670","DESCRIPTION":"?WSDL RETURNS INCORRECT ELEMENT DEFINITIONS FOR DEPLOYED WEBSERVICES BY ALWAYS SETTING ELEMENTS NILLABLE PROPERTY TO TRUE.  THERE IS A SIMPLE WAY TO REPRODUCE THIS BUG: - DEPLOY: TEST.WSDL.OMIT.OMIT - COMPARE OMIT.WSDL WITH WSDL GENERATED BY ?WSDLI ATTACHED OMIT.WSDL FROM CVS AND OMIT.XML WHICH WAS GENERATED BY ?WSDL (HTTP:LOCALHOST:8080AXISSERVICESOMIT?WSDL).- DOMINIK","SUMMARY":"?WSDL RETURNS INCORRECT ELEMENT DEFINITIONS","CLASS":1}
{"ID_DEFECT":"AXIS-1683","DESCRIPTION":"HELLO,I HAVE A TROUBLE ON WEBLOGIC SERVER (IM USING THE AXIS CLIENT PART).THE STACK TRACE IS :JAVA.LANG.NULLPOINTEREXCEPTION        AT WEBLOGIC.XML.JAXP.CHAININGENTITYRESOLVER.POPENTITYRESOLVER(CHAININGENTITYRESOLVER.JAVA:61)        AT WEBLOGIC.XML.JAXP.REGISTRYDOCUMENTBUILDER.SETENTITYRESOLVER(REGISTRYDOCUMENTBUILDER.JAVA:168)        AT ORG.APACHE.AXIS.UTILS.XMLUTILS.RELEASEDOCUMENTBUILDER(XMLUTILS.JAVA:235 ITS CAUSED BY THE :    PUBLIC STATIC VOID RELEASEDOCUMENTBUILDER(DOCUMENTBUILDER DB)         SYNCHRONIZED (DOCUMENTBUILDERS)             DB.SETERRORHANDLER(NULL);  SETTING IMPLEMENTATION DEFAULT            DB.SETENTITYRESOLVER(NULL);  SETTING IMPLEMENTATION DEFAULT            DOCUMENTBUILDERS.PUSH(DB);              WHEREAS THE 1.2-RC1 CONTAINS :     PUBLIC STATIC DOCUMENT NEWDOCUMENT(INPUTSOURCE INP)        THROWS PARSERCONFIGURATIONEXCEPTION, SAXEXCEPTION, IOEXCEPTION            DOCUMENTBUILDER DB;        SYNCHRONIZED (DBF)             DB = DBF.NEWDOCUMENTBUILDER();                DB.SETENTITYRESOLVER(NEW DEFAULTENTITYRESOLVER());        DB.SETERRORHANDLER( NEW PARSERERRORHANDLER() );        RETURN( DB.PARSE( INP ) );     HOW IS RIGHT ??  FURTHERMORE I HAVE THE STACK TRACE WITH 1.2-RC1 :JAVA.LANG.INCOMPATIBLECLASSCHANGEERROR         AT ORG.APACHE.AXIS.MESSAGE.MESSAGEELEMENT.ADDTEXTNODE(MESSAGEELEMENT.JAVA:1388)   THE STRUCTURE IN THE WEBLO EXPLODED EAR IS THE FOLLOWING : EXPLODED    APP-INFLIB        CONTAINS ALL JARS (AXIS, AXIS-STUBS AND MINE)    MYWEBAPP1            LIB (EMPTY)    MYWEBAPP2        LIB (EMPTY) TO CORRECT THIS, I NEED TO PUT THE AXIS-SAAJ-1.2-RC1.JAR IN THE WEBLOGIC CLASSPATH IN THE POSITION.IS THERE OTHER WAY TO CORRECT THIS ? THANKS A LOT,OLIVIER","SUMMARY":"ENTITYRESOLVER TROUBLE IN 1.2-RC2 AND INCOMPATIBLECLASSCHANGEERROR","CLASS":1}
{"ID_DEFECT":"AXIS-1688","DESCRIPTION":"FILE `WS-AXISJAVASRCORGAPACHEAXISTYPESDURATION.JAVA BREAKS JDK1.3.X COMPATIBILITY DUE TO THE USE OF REGULAR EXPRESSIONS, WHICH WERE INTRODUCED IN JDK1.4.X.BEFORE JDK1.4.X JAKARTA REGEXP WAS COMMONLY USED TO GET REGULAR EXPRESSION SUPPORT IN JAVA; IT COULD BE USED TO RETAIN JDK1.3.X COMPATIBILITY.A PATCH IS INCLUDED JUST AS A WORKAROUND AND A RIGHT WAY TO HANDLE RESYNTAXEXCEPTION IN A STATIC ENVIRONMENT IS NEEDED.  ALSO REGULAR EXPRESSION COMPATIBILITY HAS NOT BEED TESTED.","SUMMARY":"JDK 1.3.X COMPATIBILITY BROKEN","CLASS":1}
{"ID_DEFECT":"AXIS-1787","DESCRIPTION":"I HAVE MULTIPLE METHODS IN A SERVICE ALL TAKES A STRING AS INPUT. BUT THE PROBLEM IS WHEN I GENERATES WSDL USING JAVA2WSDL IT GENRATES MULTIPLE ENTRIES OF   <ELEMENT NAME=IN0 TYPE=XSD:STRING>IN  <WSDL:TYPES>, WHIHC IS A NOT A VALID WSDL.PLEASE HAVE A LOOK AT THE BULID.XML ENTRYAXIS-JAVA2WSDL LOCATION=$SERVICE.URL.RISKASSESSMENTSERVICE TTTOUTPUT=$WSDL.RISKASSESSMENT TTTSTYLE=DOCUMENT TTTUSE=LITERAL TTTSERVICEELEMENTNAME=RISKASSESSMENTSERVICE TTTSERVICEPORTNAME=WRAPRISKASSESSMENTSERVICE TTTCLASSNAME=UK.CO.SKANDIA.WRAPTOOLS.RISK.RISKASSESSMENTSERVICE TTTNAMESPACE=HTTP:WWW.SKANDIA.CO.UKWRAPRISKASSESSMENTSERVICE>TTT<MAPPING PACKAGE=UK.CO.SKANDIA.WRAPTOOLS.RISK TTTTNAMESPACE=URN:HTTP:WWW.SKANDIA.CO.UKWRAPRISKASSESSMENTSERVICE>TT<AXIS-JAVA2WSDL>","SUMMARY":"BAD GENERATED WSDL FOR DOCUMENTLITERAL","CLASS":1}
{"ID_DEFECT":"AXIS-2027","DESCRIPTION":"WHILE REQUESTING A WEBSERVICE THROUGH HTTP POST, IM GETTING AN ARRAYINDEXOUTOFBOUNDSEXCEPTION. DEBUGGING INTO THIS, IT TURNED OUT THAT THERE IS A BUG IN ORG.APACHE.AXIS.TRANSPORT.HTTPSENDER.WRITETOSOCKET(...).ON LINE 331 THERE IS A CODE SEQUENCE LIKE THIS:        IF (POSTING)                 STRING CONTENTTYPE;            IF (MIMEHEADERS.GETHEADER(HTTPCONSTANTS.HEADER_CONTENT_TYPE) != NULL)                 CONTENTTYPE = MIMEHEADERS.GETHEADER(HTTPCONSTANTS.HEADER_CONTENT_TYPE)[0];             ELSE                 CONTENTTYPE = REQMESSAGE.GETCONTENTTYPE(MSGCONTEXT.GETSOAPCONSTANTS());                        HEADER2.APPEND(HTTPCONSTANTS.HEADER_CONTENT_TYPE)                    .APPEND(: )                    .APPEND(CONTENTTYPE)                    .APPEND();        IN MY CASE MIMEHEADERS.GETHEADER(...) RETURNED AN EMPTY STRING ARRAY, WHICH CAUSES THE BUG ON THE NEXT LINE. CHANGEING THAT CODE TO TEST FOR EMPTY STING ARRAYS AS WELL FIXES THE PROBLEM:        IF (POSTING)             STRING CONTENTTYPE;            OBJECT[] TEST = MIMEHEADERS.GETHEADER(HTTPCONSTANTS.HEADER_CONTENT_TYPE);            IF (TEST != NULL && TEST.LENGTH > 0)                 CONTENTTYPE = MIMEHEADERS.GETHEADER(HTTPCONSTANTS.HEADER_CONTENT_TYPE)[0];             ELSE                 CONTENTTYPE = REQMESSAGE.GETCONTENTTYPE(MSGCONTEXT.GETSOAPCONSTANTS());                        HEADER2.APPEND(HTTPCONSTANTS.HEADER_CONTENT_TYPE)                    .APPEND(: )                    .APPEND(CONTENTTYPE)                    .APPEND();        ","SUMMARY":"ORG.APACHE.AXIS.TRANSPORT.HTTPSENDER THROWS ARRAYINDEXOUTOFBOUNDSEXCEPTION","CLASS":1}
{"ID_DEFECT":"AXIS-2145","DESCRIPTION":"TO SOLVE THE FOLLOWING KIND OF EXCEPTIONS, ***********************************************************************************************************JAVA.LANG.EXCEPTIONININITIALIZERERROR        AT ORG.APACHE.COMMONS.DISCOVERY.JDK.JDKHOOKS.<CLINIT>(JDKHOOKS.JAVA:75)        AT ORG.APACHE.COMMONS.DISCOVERY.TOOLS.DISCOVERSINGLETON.FIND(DISCOVERSINGLETON.JAVA:412)        AT ORG.APACHE.COMMONS.DISCOVERY.TOOLS.DISCOVERSINGLETON.FIND(DISCOVERSINGLETON.JAVA:378)        AT ORG.APACHE.AXIS.COMPONENTS.LOGGER.LOGFACTORY$1.RUN(LOGFACTORY.JAVA:45)        AT JAVA.SECURITY.ACCESSCONTROLLER.DOPRIVILEGED(NATIVE METHOD)        AT ORG.APACHE.AXIS.COMPONENTS.LOGGER.LOGFACTORY.GETLOGFACTORY(LOGFACTORY.JAVA:41)        AT ORG.APACHE.AXIS.COMPONENTS.LOGGER.LOGFACTORY.<CLINIT>(LOGFACTORY.JAVA:33)        AT ORG.APACHE.AXIS.HANDLERS.BASICHANDLER.<CLINIT>(BASICHANDLER.JAVA:43)        AT ORG.APACHE.AXIS.CLIENT.SERVICE.GETAXISCLIENT(SERVICE.JAVA:103)        AT ORG.APACHE.AXIS.CLIENT.SERVICE.<INIT>(SERVICE.JAVA:112)        AT VCAS.GUI.WSDL.VCASLOCATOR.<INIT>(UNKNOWN SOURCE)        AT VCAS.GUI.VSS.VSSAPPLET.INIT(UNKNOWN SOURCE)        AT SUN.APPLET.APPLETPANEL.RUN(APPLETPANEL.JAVA:374)        AT JAVA.LANG.THREAD.RUN(THREAD.JAVA:595)CAUSED BY: JAVA.SECURITY.ACCESSCONTROLEXCEPTION: ACCESS DENIED (JAVA.LANG.RUNTIMEPERMISSION CREATECLASSLOADER)        AT JAVA.SECURITY.ACCESSCONTROLCONTEXT.CHECKPERMISSION(ACCESSCONTROLCONTEXT.JAVA:264)        AT JAVA.SECURITY.ACCESSCONTROLLER.CHECKPERMISSION(ACCESSCONTROLLER.JAVA:427)        AT JAVA.LANG.SECURITYMANAGER.CHECKPERMISSION(SECURITYMANAGER.JAVA:532)        AT JAVA.LANG.SECURITYMANAGER.CHECKCREATECLASSLOADER(SECURITYMANAGER.JAVA:594)        AT JAVA.LANG.CLASSLOADER.<INIT>(CLASSLOADER.JAVA:225)        AT ORG.APACHE.COMMONS.DISCOVERY.JDK.PSUEDOSYSTEMCLASSLOADER.<INIT>(PSUEDOSYSTEMCLASSLOADER.JAVA:73)        AT ORG.APACHE.COMMONS.DISCOVERY.JDK.JDK12HOOKS.FINDSYSTEMCLASSLOADER(JDK12HOOKS.JAVA:215)        AT ORG.APACHE.COMMONS.DISCOVERY.JDK.JDK12HOOKS.<CLINIT>(JDK12HOOKS.JAVA:73)        ... 14 MORE*********************************************************************************************************************************I HAD TO ADD THE FOLLOWING PERMISSIONS TO A CUSTOM POLICY FILE.********************************************************************************************************************************TPERMISSION JAVA.LANG.RUNTIMEPERMISSIONTCREATECLASSLOADER;TPERMISSION JAVA.LANG.RUNTIMEPERMISSIONTGETCLASSLOADER;TPERMISSION JAVA.UTIL.PROPERTYPERMISSIONTORG.APACHE.COMMONS.DISCOVERY.LOG.LEVEL, READ;TPERMISSION JAVA.UTIL.PROPERTYPERMISSIONTAXIS.ENGINECONFIGFACTORY,READ;TPERMISSION JAVA.UTIL.PROPERTYPERMISSIONTORG.APACHE.AXIS.ENGINECONFIGURATIONFACTORY,READ;TPERMISSION JAVA.UTIL.PROPERTYPERMISSIONTAXIS.CLIENTCONFIGFILE,READ;TPERMISSION JAVA.UTIL.PROPERTYPERMISSIONTAXIS.SERVERCONFIGFILE,READ;TPERMISSION JAVA.UTIL.PROPERTYPERMISSIONTAXIS.XML.REUSEPARSERS,READ;TPERMISSION JAVA.UTIL.PROPERTYPERMISSIONTAXIS.ATTACHMENTS.IMPLEMENTATION,READ;********************************************************************************************************************************SO, I SEE THAT PART OF THE PROBLEM IS APPACHE COMMONS LOGGER AND OTHER LIBRARIES TRYING TO READ AND WRITE TO FILES, INCLUDING THE COMMONS LOGGER USED BY AXIS. I WANTED TO KNOW IF THERE IS A SIMPLE WAY TO PREVENT THIS OR IF I THERE EXIST A VERSION OF THE AXIS LIBRARY WITHOUT THESE ISSUES, SO IT CAN HAPPILY WORK INSIDE THE SANDBOX WITH THE DEFAULT PERMISSIONS, I WOULD BE HAPPY TO TRY IT.       THANKS IN ADVANCE,       --LUIS R.","SUMMARY":"AXIS CLIENT CRASHES THE APPLET UNLESS NEW PERMISSIONS ARE ADDED TO THE POLICY FILE (OR A CUSTOM SECURITY MANAGER IS USED)","CLASS":1}
